{"version":3,"file":"control-action.element.js","sourceRoot":"","sources":["../../../../src/forms/control-action/control-action.element.ts"],"names":[],"mappings":"AAAA;;;;GAIG;;AAEH,OAAO,EAAE,IAAI,EAAE,QAAQ,EAAE,MAAM,aAAa,CAAC;AAE7C,OAAO,EAAE,UAAU,EAAE,aAAa,EAAE,SAAS,EAAE,aAAa,EAAE,eAAe,EAAE,MAAM,oBAAoB,CAAC;AAC1G,OAAO,EAAE,MAAM,EAAE,MAAM,iCAAiC,CAAC;AACzD,OAAO,EAAE,UAAU,EAAE,MAAM,oBAAoB,CAAC;AAEhD;;;;;;;;;;;;;;;GAeG;AACH,MAAM,OAAO,gBAAiB,SAAQ,aAAa;IAMjD,MAAM,KAAK,MAAM;QACf,OAAO,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;IAC9B,CAAC;IAED,MAAM;QACJ,OAAO,IAAI,CAAA;;;;QAIP,IAAI,CAAC,oBAAoB;KAC5B,CAAC;IACJ,CAAC;IAED,iBAAiB;QACf,KAAK,CAAC,iBAAiB,EAAE,CAAC;QAC1B,aAAa,CAAC,IAAI,EAAE,CAAC,aAAa,EAAE,MAAM,CAAC,CAAC,CAAC;IAC/C,CAAC;IAED,OAAO,CAAC,KAAuB;QAC7B,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QACrB,IAAI,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE;YACvB,IAAI,CAAC,eAAe,EAAE,CAAC;SACxB;QAED,IAAI,KAAK,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE;YACzB,IAAI,CAAC,iBAAiB,EAAE,CAAC;SAC1B;IACH,CAAC;IAED,eAAe;;QACb,eAAe,CAAC,CAAC,IAAI,QAAE,IAAI,CAAC,MAAM,mCAAI,KAAK,CAAC,CAAC,CAAC;IAChD,CAAC;IAEO,iBAAiB;;QACvB,IAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,QAAC,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,0CAAE,MAAM,CAAA,EAAE;YAC9D,UAAU,CAAC,IAAI,CAAC,8DAA8D,EAAE,IAAI,CAAC,CAAC;SACvF;IACH,CAAC;CACF;AA1C6B;IAA3B,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;gDAAuC;AAE3C;IAAtB,SAAS,CAAC,UAAU,CAAC;8CAAyB","sourcesContent":["/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { html, property } from 'lit-element';\nimport { CdsIcon } from '@clr/core/icon/icon.element.js';\nimport { baseStyles, CdsBaseButton, querySlot, setAttributes, assignSlotNames } from '@clr/core/internal';\nimport { styles } from './control-action.element.css.js';\nimport { LogService } from '@clr/core/internal';\n\n/**\n * Control Action\n *\n * ```typescript\n * import '@clr/core/forms/register.js';\n * ```\n *\n * ```html\n * <cds-control-action>\n *\n * </cds-control-action>\n * ```\n * @internal\n * @element cds-control-action\n * @slot - For projecting text content or cds-icon\n */\nexport class CdsControlAction extends CdsBaseButton {\n  /** Set the action type placement within the supporting input control */\n  @property({ type: String }) action: 'label' | 'prefix' | 'suffix';\n\n  @querySlot('cds-icon') protected icon: CdsIcon;\n\n  static get styles() {\n    return [baseStyles, styles];\n  }\n\n  render() {\n    return html`\n      <div class=\"private-host\">\n        <slot></slot>\n      </div>\n      ${this.hiddenButtonTemplate}\n    `;\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    setAttributes(this, ['aria-hidden', 'true']);\n  }\n\n  updated(props: Map<string, any>) {\n    super.updated(props);\n    if (props.has('action')) {\n      this.setSlotLocation();\n    }\n\n    if (props.has('readonly')) {\n      this.validateAriaLabel();\n    }\n  }\n\n  setSlotLocation() {\n    assignSlotNames([this, this.action ?? false]);\n  }\n\n  private validateAriaLabel() {\n    if (!this.readonly && !this.getAttribute('aria-label')?.length) {\n      LogService.warn('A aria-label is required for interactive cds-control-actions', this);\n    }\n  }\n}\n"]}