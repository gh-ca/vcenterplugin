{"version":3,"file":"control-group.element.js","sourceRoot":"","sources":["../../../../src/forms/control-group/control-group.element.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { html, LitElement, query } from 'lit-element';\nimport {\n  baseStyles,\n  property,\n  querySlot,\n  querySlotAll,\n  id,\n  event,\n  EventEmitter,\n  syncDefinedProps,\n  describeElementByElements,\n  updateComponentLayout,\n  supportsResizeObserver,\n  setAttributes,\n} from '@clr/core/internal';\nimport { ClarityIcons } from '@clr/core/icon/icon.service.js';\nimport { exclamationCircleIcon } from '@clr/core/icon/shapes/exclamation-circle.js';\nimport { checkCircleIcon } from '@clr/core/icon/shapes/check-circle.js';\nimport { CdsControl } from '../control/control.element.js';\nimport { styles } from './control-group.element.css.js';\nimport { ControlStatus, FormLayout, ControlWidth } from '../utils/interfaces.js';\nimport { CdsControlMessage } from '../control-message/control-message.element.js';\nimport { CdsInternalControlInline } from './../control-inline/control-inline.element.js';\nimport { CdsInternalControlLabel } from '../control-label/control-label.element.js';\nimport {\n  getStatusIcon,\n  controlIsWrapped,\n  formLayouts,\n  inlineControlListIsWrapped,\n  defaultFormLayout,\n  defaultControlWidth,\n  getCurrentMessageStatus,\n} from '../utils/index.js';\n\n/**\n * Internal Control Group\n *\n * ```typescript\n * import '@clr/core/forms/register.js';\n * ```\n *\n * ```html\n * <cds-internal-control-group>\n *   <label>...</label>\n *   <cds-control>\n *     <label></label>\n *     <input ... />\n *   </cds-control>\n *   <cds-control>\n *     <label></label>\n *     <input ... />\n *   </cds-control>\n * </cds-internal-control-group>\n * ```\n *\n * @element cds-internal-control-group\n * @slot - For projecting control group\n */\nexport class CdsInternalControlGroup extends LitElement {\n  /**\n   * @type {neutral | error | success}\n   * Set the status of control group validation\n   */\n  @property({ type: String }) status: ControlStatus = 'neutral';\n\n  /** @type {horizontal | horizontal-inline | vertical | vertical-inline | compact} */\n  @property({ type: String }) layout: FormLayout = defaultFormLayout;\n\n  /** Align the labels of controls within group left or right */\n  @property({ type: String }) controlAlign: 'left' | 'right' = 'left';\n\n  /** Disable all controls within a control group or omit and disable controls individually */\n  @property({ type: Boolean }) disabled = false;\n\n  /**\n   * @type {stretch | shrink}\n   * Adjust the control from the default full width or the browser default width\n   */\n  @property({ type: String }) controlWidth: ControlWidth = defaultControlWidth;\n\n  /**\n   * By default forms will collapse to layout that prevents overflow.\n   * If disabled control layout may break or overflow in unexpected ways.\n   */\n  @property({ type: Boolean }) responsive = true;\n\n  @querySlot('label', {\n    assign: 'label',\n    required: 'warning',\n    requiredMessage: 'To meet a11y standards a <label> should be provided',\n  })\n  protected label: HTMLLabelElement;\n\n  @querySlotAll('cds-control, [cds-control], [cds-inline-control]', { assign: 'controls' })\n  protected controls: NodeListOf<CdsControl | CdsInternalControlInline>;\n\n  @querySlotAll('cds-control-message') protected messages: NodeListOf<CdsControlMessage>;\n\n  /** @private */\n  @query('cds-internal-control-label[action=primary]') controlLabel: CdsInternalControlLabel;\n\n  @query('.controls') private controlSlot: HTMLElement;\n\n  @query('.messages') private messageSlot: HTMLElement;\n\n  @id() private groupLabelId: string;\n\n  @event() protected layoutChange: EventEmitter<FormLayout>;\n\n  protected isInlineControlGroup = false;\n\n  protected isControlGroup = true;\n\n  protected observers: (MutationObserver | ResizeObserver)[] = [];\n\n  static get styles() {\n    return [baseStyles, styles];\n  }\n\n  protected get messagesTemplate() {\n    return html`\n      <div cds-layout=\"horizontal align:shrink ${this.messages?.length ? 'gap:sm' : ''}\" class=\"messages-container\">\n        ${!this.isInlineControlGroup ? getStatusIcon(this.status) : ''}\n        <div class=\"messages\">\n          <slot name=\"message\"></slot>\n        </div>\n      </div>\n    `;\n  }\n\n  protected get controlsTemplate() {\n    return this.isInlineControlGroup\n      ? html`\n          <div cds-layout=\"horizontal gap:sm align:horizontal-stretch\" class=\"input-container\">\n            <div class=\"controls\" cds-layout=\"horizontal align:horizontal-stretch\">\n              <slot name=\"controls\"></slot>\n            </div>\n            ${getStatusIcon(this.status)}\n          </div>\n        `\n      : html`\n          <div cds-layout=\"horizontal align:shrink\" class=\"input-container\">\n            <div class=\"controls\" cds-layout=\"${this.inlineControlLayout}\">\n              <slot name=\"controls\"></slot>\n            </div>\n          </div>\n        `;\n  }\n\n  private get inlineControlLayout(): string {\n    return !this.layout.includes('inline') && this.layout !== 'compact' ? 'vertical gap:sm' : 'horizontal gap:md';\n  }\n\n  private get primaryLabelLayout() {\n    return !this.layout.includes('vertical') ? 'horizontal gap:lg' : 'vertical gap:sm';\n  }\n\n  private get controlMessageLayout() {\n    return `${this.layout === 'compact' ? 'horizontal' : 'vertical'} gap:sm wrap:none align:stretch`;\n  }\n\n  render() {\n    return html`\n      <div class=\"private-host\" cds-layout=\"${this.primaryLabelLayout}\">\n        <cds-internal-control-label .disabled=${this.disabled} cds-layout=\"align:top\" action=\"primary\">\n          <slot name=\"label\"></slot>\n        </cds-internal-control-label>\n        <div cds-layout=\"${this.controlMessageLayout}\">\n          ${this.controlsTemplate} ${this.messagesTemplate}\n        </div>\n      </div>\n    `;\n  }\n\n  constructor() {\n    super();\n    ClarityIcons.addIcons(exclamationCircleIcon, checkCircleIcon);\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    setAttributes(this, ['role', 'group'], ['cds-control-group', '']);\n  }\n\n  firstUpdated(props: Map<string, any>) {\n    super.firstUpdated(props);\n    this.associateLabelAndGroup();\n    this.setupDescribedByUpdates();\n    this.setupResponsive();\n  }\n\n  updated(props: Map<string, any>) {\n    super.updated(props);\n    props.set('isControlGroup', true);\n    this.controls.forEach((c: any) => (c.isControlGroup = true));\n    syncDefinedProps(props, this, Array.from(this.controls));\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    this.observers.forEach(o => o.disconnect());\n  }\n\n  get layoutStable() {\n    return (\n      !inlineControlListIsWrapped(Array.from(this.controls), this.layout) &&\n      !controlIsWrapped(this.controlSlot, this.controlLabel, this.layout)\n    );\n  }\n\n  private associateLabelAndGroup() {\n    this.setAttribute('aria-labelledby', this.groupLabelId);\n    this.label.setAttribute('id', this.groupLabelId);\n  }\n\n  private setupDescribedByUpdates() {\n    this.messageSlot?.addEventListener('slotchange', () => {\n      describeElementByElements(this, Array.from(this.messages));\n      getCurrentMessageStatus(Array.from(this.messages)).then(s => (this.status = s));\n    });\n  }\n\n  private setupResponsive() {\n    if (supportsResizeObserver() && this.responsive) {\n      const layoutConfig = { layouts: formLayouts, initialLayout: this.layout };\n      const observer = updateComponentLayout(this, layoutConfig, () =>\n        this.layoutChange.emit(this.layout, { bubbles: true })\n      );\n      this.observers.push(observer);\n    }\n  }\n}\n"]}