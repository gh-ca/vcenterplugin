{"version":3,"file":"control-inline.element.js","sourceRoot":"","sources":["../../../../src/forms/control-inline/control-inline.element.ts"],"names":[],"mappings":"AAAA;;;;GAIG;;AAEH,OAAO,EAAE,IAAI,EAAE,gBAAgB,EAAE,MAAM,aAAa,CAAC;AACrD,OAAO,EAAE,QAAQ,EAAE,MAAM,oBAAoB,CAAC;AAC9C,OAAO,EAAE,MAAM,EAAE,MAAM,iCAAiC,CAAC;AACzD,OAAO,EAAE,UAAU,EAAE,MAAM,+BAA+B,CAAC;AAC3D,OAAO,EAAE,aAAa,EAAE,MAAM,mBAAmB,CAAC;AAElD;;;;;;;;;;;;;;;GAeG;AACH,MAAM,OAAO,wBAAyB,SAAQ,UAAU;IAAxD;;QACE,8DAA8D;QAClC,iBAAY,GAAqB,MAAM,CAAC;QAK1D,gCAA2B,GAAG,KAAK,CAAC;IAsChD,CAAC;IApCC,MAAM,KAAK,MAAM;QACf,OAAO,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;IACnC,CAAC;IAED,MAAM;;QACJ,OAAO,IAAI,CAAA;;uDAEwC,IAAI,CAAC,YAAY,KAAK,OAAO,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE;sCACrE,GAAG,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE;;;yBAG5C,IAAI,CAAC,QAAQ;;;;;;UAM5B,CAAC,IAAI,CAAC,cAAc;YACpB,CAAC,CAAC,IAAI,CAAA,0CAA0C,OAAA,IAAI,CAAC,QAAQ,0CAAE,MAAM,EAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE;gBAC/E,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC;;;;mBAIvB;YACT,CAAC,CAAC,EAAE;;;;;KAKT,CAAC;IACJ,CAAC;IAED,iBAAiB;QACf,KAAK,CAAC,iBAAiB,EAAE,CAAC;QAC1B,IAAI,CAAC,YAAY,CAAC,oBAAoB,EAAE,EAAE,CAAC,CAAC;IAC9C,CAAC;CACF;AA3C6B;IAA3B,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;8DAAyC;AAGhD;IAAnB,gBAAgB,EAAE;gEAAyB","sourcesContent":["/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { html, internalProperty } from 'lit-element';\nimport { property } from '@clr/core/internal';\nimport { styles } from './control-inline.element.css.js';\nimport { CdsControl } from '../control/control.element.js';\nimport { getStatusIcon } from '../utils/index.js';\n\n/**\n * Internal Control Inline\n *\n * ```typescript\n * import '@clr/core/forms/register.js';\n * ```\n *\n * ```html\n * <cds-internal-control-inline>\n *   <label>inline</label>\n *   <input type=\"radio\" />\n * </ds-internal-control-inline>\n * ```\n *\n * @slot - For projecting inline input and label\n */\nexport class CdsInternalControlInline extends CdsControl {\n  /** Align the labels of controls within group left or right */\n  @property({ type: String }) controlAlign: 'left' | 'right' = 'left';\n\n  /** @private */\n  @internalProperty() isControlGroup: boolean;\n\n  protected supportsPrefixSuffixActions = false;\n\n  static get styles() {\n    return [...super.styles, styles];\n  }\n\n  render() {\n    return html`\n      <div class=\"private-host\" cds-layout=\"vertical gap:sm\">\n        <div cds-layout=\"horizontal gap:sm wrap:none ${this.controlAlign === 'right' ? 'order:reverse' : ''}\">\n          <div class=\"input\" @click=${() => this.inputControl.click()}></div>\n          <cds-internal-control-label\n            action=\"secondary\"\n            .disabled=\"${this.disabled}\"\n            cds-layout=\"align:vertical-center\"\n          >\n            <slot name=\"label\"></slot>\n          </cds-internal-control-label>\n        </div>\n        ${!this.isControlGroup\n          ? html` <div cds-layout=\"horizontal wrap:none ${this.messages?.length ? 'gap:sm' : ''}\">\n              ${getStatusIcon(this.status)}\n              <div cds-layout=\"align:vertical-center\" class=\"messages\">\n                <slot name=\"message\"></slot>\n              </div>\n            </div>`\n          : ''}\n      </div>\n      <div cds-layout=\"display:screen-reader-only\">\n        <slot name=\"input\"></slot>\n      </div>\n    `;\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    this.setAttribute('cds-control-inline', '');\n  }\n}\n"]}