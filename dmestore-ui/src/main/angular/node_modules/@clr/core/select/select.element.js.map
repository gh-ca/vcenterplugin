{"version":3,"file":"select.element.js","sourceRoot":"","sources":["../../../src/select/select.element.ts"],"names":[],"mappings":"AAAA;;;;GAIG;;AAEH,OAAO,EAAE,IAAI,EAAE,MAAM,aAAa,CAAC;AACnC,OAAO,EAAE,WAAW,EAAE,gBAAgB,EAAE,wBAAwB,EAAE,MAAM,oBAAoB,CAAC;AAC7F,OAAO,EAAE,UAAU,EAAE,MAAM,iBAAiB,CAAC;AAC7C,OAAO,EAAE,WAAW,EAAE,MAAM,iBAAiB,CAAC;AAC9C,OAAO,EAAE,YAAY,EAAE,MAAM,gCAAgC,CAAC;AAC9D,OAAO,EAAE,SAAS,EAAE,MAAM,gCAAgC,CAAC;AAC3D,OAAO,EAAE,MAAM,IAAI,YAAY,EAAE,MAAM,wBAAwB,CAAC;AAChE,OAAO,EAAE,MAAM,EAAE,MAAM,yBAAyB,CAAC;AAEjD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA8BG;AACH,MAAM,OAAO,SAAU,SAAQ,UAAU;IAavC;QACE,KAAK,EAAE,CAAC;QALe,iBAAY,GAAG,YAAY,CAAC;QAES,aAAQ,GAAG,KAAK,CAAC;QAI7E,YAAY,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;IACnC,CAAC;IAfD,IAAc,qBAAqB;QACjC,OAAO,IAAI,CAAA,wGAAwG,CAAC;IACtH,CAAC;IAED,MAAM,KAAK,MAAM;QACf,OAAO,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,WAAW,EAAE,MAAM,CAAC,CAAC;IAChD,CAAC;IAWD,YAAY,CAAC,KAAuB;QAClC,KAAK,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;QAC1B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC;QAC3D,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,YAAY,EAAE,UAAU,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,GAAG,GAAG,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC;IACtH,CAAC;CACF;AAdgB;IAAd,WAAW,EAAE;+CAAuC;AAED;IAAnD,gBAAgB,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;2CAA4B","sourcesContent":["/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { html } from 'lit-element';\nimport { globalStyle, internalProperty, listenForAttributeChange } from '@clr/core/internal';\nimport { CdsControl } from '@clr/core/forms';\nimport { inputStyles } from '@clr/core/input';\nimport { ClarityIcons } from '@clr/core/icon/icon.service.js';\nimport { angleIcon } from '@clr/core/icon/shapes/angle.js';\nimport { styles as globalStyles } from './select.global.css.js';\nimport { styles } from './select.element.css.js';\n\n/**\n * Select\n *\n * ```typescript\n * import '@clr/core/select';\n * ```\n *\n * ```html\n * <cds-select>\n *   <label>Test</label>\n *   <select>\n *    <option>Option One</option>\n *    <option>Option Two</option>\n *    <option>Option Three</option>\n *   </select>\n * </cds-select>\n * ```\n *\n * @element cds-select\n * @slot - For projecting select and label\n * @cssprop --background\n * @cssprop --background-size\n * @cssprop --border\n * @cssprop --border-bottom\n * @cssprop --outline\n * @cssprop --padding\n * @cssprop --font-size\n * @cssprop --color\n * @cssprop --line-height\n * @cssprop --transition\n */\nexport class CdsSelect extends CdsControl {\n  protected get suffixDefaultTemplate() {\n    return html`<cds-control-action readonly><cds-icon shape=\"angle\" direction=\"down\"></cds-icon></cds-control-action>`;\n  }\n\n  static get styles() {\n    return [...super.styles, inputStyles, styles];\n  }\n\n  @globalStyle() protected globalStyles = globalStyles;\n\n  @internalProperty({ type: Boolean, reflect: true }) protected multiple = false;\n\n  constructor() {\n    super();\n    ClarityIcons.addIcons(angleIcon);\n  }\n\n  firstUpdated(props: Map<string, any>) {\n    super.firstUpdated(props);\n    this.multiple = this.inputControl.hasAttribute('multiple');\n    this.observers.push(listenForAttributeChange(this.inputControl, 'multiple', val => (this.multiple = val !== null)));\n  }\n}\n"]}