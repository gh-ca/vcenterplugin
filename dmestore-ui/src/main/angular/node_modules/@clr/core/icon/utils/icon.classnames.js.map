{"version":3,"file":"icon.classnames.js","sourceRoot":"","sources":["../../../../src/icon/utils/icon.classnames.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {\n  getEnumValues,\n  isString,\n  transformToSpacedString,\n  updateElementStyles,\n  removeClassnames,\n  addClassnames,\n  removeClassnamesUnless,\n} from '@clr/core/internal';\nimport isNil from 'ramda/es/isNil';\nimport { CdsIcon } from '../icon.element.js';\nimport { IconShapeCollection } from '../interfaces/icon.interfaces.js';\nimport { iconHasAlertedShapes, iconHasBadgedShapes, iconHasSolidShapes } from './icon.has-shape.js';\n\nexport enum IconSvgClassnames {\n  Badged = 'can-badge',\n  Alerted = 'can-alert',\n  Solid = 'has-solid',\n}\n\nexport enum IconDecorationClassnames {\n  Badge = 'clr-i-badge',\n  Alert = 'clr-i-alert',\n}\n\nexport enum IconShapeClassnames {\n  Outline = 'outline',\n  Solid = 'solid',\n  OutlineBadged = 'outline--badged',\n  OutlineAlerted = 'outline--alerted',\n  SolidBadged = 'solid--badged',\n  SolidAlerted = 'solid--alerted',\n}\n\nexport function getShapeClassname(shapeType: string) {\n  const classNamePrefix = 'clr-i-';\n  let className: string;\n\n  switch (shapeType) {\n    case 'solid':\n      className = `${classNamePrefix}${IconShapeClassnames.Solid}`;\n      break;\n    case 'outlineBadged':\n      className = `${classNamePrefix}${IconShapeClassnames.OutlineBadged}`;\n      break;\n    case 'outlineAlerted':\n      className = `${classNamePrefix}${IconShapeClassnames.OutlineAlerted}`;\n      break;\n    case 'solidBadged':\n      className = `${classNamePrefix}${IconShapeClassnames.SolidBadged}`;\n      break;\n    case 'solidAlerted':\n      className = `${classNamePrefix}${IconShapeClassnames.SolidAlerted}`;\n      break;\n    default:\n      className = `${classNamePrefix}${IconShapeClassnames.Outline}`;\n      break;\n  }\n\n  return className;\n}\n\nexport enum IconTshirtSizes {\n  ExtraSmall = 'xs',\n  Small = 'sm',\n  Medium = 'md',\n  Large = 'lg',\n  ExtraLarge = 'xl',\n  ExtraExtraLarge = 'xxl',\n}\n\nexport const iconTshirtSizeClassnamePrefix = 'clr-i-size-';\n\nexport function getIconTshirtSizeClassname(\n  sizeToLookup: string,\n  prefix = iconTshirtSizeClassnamePrefix,\n  sizes = IconTshirtSizes\n): string {\n  const tshirtSizesVals = getEnumValues(sizes);\n  const indexOfSize = tshirtSizesVals.indexOf(sizeToLookup);\n  if (indexOfSize > -1) {\n    return prefix + tshirtSizesVals[indexOfSize];\n  }\n  return '';\n}\n\nexport function getAllIconTshirtSizeClassnames(prefix = iconTshirtSizeClassnamePrefix, sizes = IconTshirtSizes) {\n  return getEnumValues(sizes).map(sz => prefix + sz);\n}\n\nexport function isIconTshirtSizeClassname(classname: string, sizes = IconTshirtSizes) {\n  return getEnumValues(sizes).indexOf(classname) > -1;\n}\n\nexport function getIconSvgClasses(icon: IconShapeCollection): string {\n  const testSolid = (i: IconShapeCollection) => (iconHasSolidShapes(i) ? IconSvgClassnames.Solid : '');\n  const testBadged = (i: IconShapeCollection) => (iconHasBadgedShapes(i) ? IconSvgClassnames.Badged : '');\n  const testAlerted = (i: IconShapeCollection) => (iconHasAlertedShapes(i) ? IconSvgClassnames.Alerted : '');\n  const tests = [testSolid, testBadged, testAlerted];\n  return transformToSpacedString(tests, icon);\n}\n\nexport enum SizeUpdateStrategies {\n  BadSizeValue = 'bad-value',\n  ValidSizeString = 'value-is-string',\n  ValidNumericString = 'value-is-numeric',\n  NilSizeValue = 'value-is-nil',\n}\n\nexport function getUpdateSizeStrategy(size: string) {\n  if (isNil(size) || size === '') {\n    return SizeUpdateStrategies.NilSizeValue;\n  }\n\n  if (isString(size) && isIconTshirtSizeClassname(size)) {\n    return SizeUpdateStrategies.ValidSizeString;\n  }\n\n  if (!isNaN(parseInt(size, 10))) {\n    return SizeUpdateStrategies.ValidNumericString;\n  }\n\n  return SizeUpdateStrategies.BadSizeValue;\n}\n\nexport function updateIconSizeStyleOrClassnames(el: CdsIcon, size: string) {\n  const updateStrategy = getUpdateSizeStrategy(size);\n  const newTshirtSize = getIconTshirtSizeClassname(size);\n\n  switch (updateStrategy) {\n    case SizeUpdateStrategies.ValidNumericString:\n      updateElementStyles(el, ['width', `${size}px`], ['height', `${size}px`]);\n      removeClassnames(el, ...getAllIconTshirtSizeClassnames());\n      return;\n    case SizeUpdateStrategies.ValidSizeString:\n      addClassnames(el, newTshirtSize);\n      removeClassnamesUnless(el, getAllIconTshirtSizeClassnames(), [newTshirtSize]);\n      updateElementStyles(el, ['width', ''], ['height', '']);\n      return;\n    case SizeUpdateStrategies.NilSizeValue: // nil values empty out all sizing\n      removeClassnames(el, ...getAllIconTshirtSizeClassnames());\n      updateElementStyles(el, ['width', ''], ['height', '']);\n      return;\n    case SizeUpdateStrategies.BadSizeValue:\n      // bad-value is ignored\n      return;\n    default:\n      return;\n  }\n}\n"]}