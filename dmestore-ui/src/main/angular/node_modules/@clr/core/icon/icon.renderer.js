/*
 * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
import { isString, transformToUnspacedString } from '@clr/core/internal';
import { decorateSvgWithClassnames, getIconSvgClosingTag, getIconSvgOpeningTag } from './utils/icon.svg-helpers.js';
export function getInnerSvgFromShapes(iconShapes) {
    const renderFns = [];
    for (const shape in iconShapes) {
        // eslint-disable-next-line no-prototype-builtins
        if (iconShapes.hasOwnProperty(shape)) {
            renderFns.push(() => decorateSvgWithClassnames(shape, iconShapes[shape]));
        }
    }
    return renderFns;
}
// keeping this for separation of concerns and also so we have a place to do
// proper string manipulation in the (near?) future
export function renderIconFromString(icon) {
    return icon;
}
export function renderIconFromShapes(icon) {
    let iconRender = [getIconSvgOpeningTag];
    iconRender = iconRender.concat(getInnerSvgFromShapes(icon));
    iconRender.push(getIconSvgClosingTag);
    return transformToUnspacedString(iconRender, icon);
}
export function renderIcon(shapeOrStringIcon) {
    if (isString(shapeOrStringIcon)) {
        return renderIconFromString(shapeOrStringIcon);
    }
    return renderIconFromShapes(shapeOrStringIcon);
}
//# sourceMappingURL=icon.renderer.js.map