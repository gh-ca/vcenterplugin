{"version":3,"file":"alert-actions.element.js","sourceRoot":"","sources":["../../../src/alert/alert-actions.element.ts"],"names":[],"mappings":"AAAA;;;;GAIG;;AAIH,OAAO,EAAE,eAAe,EAAE,UAAU,EAAE,YAAY,EAAE,gBAAgB,EAAE,MAAM,oBAAoB,CAAC;AACjG,OAAO,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,aAAa,CAAC;AAC/C,OAAO,EAAE,MAAM,EAAE,MAAM,gCAAgC,CAAC;AAExD;;;;;;;;;;;;;;;;;;;;;GAqBG;AACH,MAAM,OAAO,eAAgB,SAAQ,UAAU;IAA/C;;QACE;;;WAGG;QAEH,SAAI,GAAoB,OAAO,CAAC;IA2BlC,CAAC;IAtBC,MAAM;QACJ,OAAO,IAAI,CAAA;;WAEJ,CAAC;IACV,CAAC;IAED,iBAAiB;QACf,KAAK,CAAC,iBAAiB,EAAE,CAAC;QAC1B,eAAe,CAAC,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC,CAAC;IACrC,CAAC;IAED,OAAO,CAAC,KAAuB;QAC7B,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QACrB,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;YACvB,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC;YAC1D,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC;QAChD,CAAC,CAAC,CAAC;IACL,CAAC;IAED,MAAM,KAAK,MAAM;QACf,OAAO,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;IAC9B,CAAC;CACF;AA3BC;IADC,gBAAgB,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;6CAClB;AAGhC;IADC,YAAY,CAAC,YAAY,CAAC;gDACY","sourcesContent":["/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { AlertGroupTypes } from '@clr/core/alert';\nimport { CdsButton } from '@clr/core/button';\nimport { assignSlotNames, baseStyles, querySlotAll, internalProperty } from '@clr/core/internal';\nimport { html, LitElement } from 'lit-element';\nimport { styles } from './alert-actions.element.css.js';\n\n/**\n * Web component alert actions to be used inside default and banner alerts.\n *\n * ```typescript\n * import '@clr/core/alert/register.js';\n * ```\n *\n * ```html\n * <cds-alert>\n *   Lorem ipsum dolor sit amet\n *   <cds-alert-actions>\n *     <cds-button>Fix</cds-button>\n *   </cds-alert-actions>\n * </cds-alert>\n * ```\n *\n * @element cds-alert-actions\n * @slot\n * @cssprop --action-text-color\n * @cssprop --action-hover-text-color\n * @cssprop --action-font-size\n */\nexport class CdsAlertActions extends LitElement {\n  /**\n   * @type {default | banner | light}\n   * @private\n   */\n  @internalProperty({ type: String, reflect: true })\n  type: AlertGroupTypes = 'light';\n\n  @querySlotAll('cds-button')\n  private buttons: NodeListOf<CdsButton>;\n\n  render() {\n    return html`<div class=\"private-host\" cds-layout=\"horizontal wrap:none gap:sm align:vertical-center\">\n      <slot></slot>\n    </div>`;\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    assignSlotNames([this, 'actions']);\n  }\n\n  updated(props: Map<string, any>) {\n    super.updated(props);\n    this.buttons.forEach(b => {\n      b.status = this.type === 'banner' ? 'inverse' : 'primary';\n      b.size = this.type === 'banner' ? 'sm' : 'md';\n    });\n  }\n\n  static get styles() {\n    return [baseStyles, styles];\n  }\n}\n"]}