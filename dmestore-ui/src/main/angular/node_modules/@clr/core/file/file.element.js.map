{"version":3,"file":"file.element.js","sourceRoot":"","sources":["../../../src/file/file.element.ts"],"names":[],"mappings":"AAAA;;;;GAIG;;AAEH,OAAO,EAAE,IAAI,EAAE,gBAAgB,EAAE,MAAM,aAAa,CAAC;AACrD,OAAO,EAAE,oBAAoB,EAAE,MAAM,oBAAoB,CAAC;AAC1D,OAAO,EAAE,UAAU,EAAE,MAAM,iBAAiB,CAAC;AAC7C,OAAO,EAAE,YAAY,EAAE,MAAM,gCAAgC,CAAC;AAC9D,OAAO,EAAE,UAAU,EAAE,MAAM,iCAAiC,CAAC;AAC7D,OAAO,EAAE,MAAM,EAAE,MAAM,uBAAuB,CAAC;AAE/C;;;;;;;;;;;;;;;;GAgBG;AACH,MAAM,OAAO,OAAQ,SAAQ,UAAU;IAgDrC;QACE,KAAK,EAAE,CAAC;QAhDkB,gBAAW,GAAG,oBAAoB,CAAC,IAAI,CAAC,MAAM,CAAC;QAE7C,sBAAiB,GAAG,IAAI,CAAC;QAEzB,gCAA2B,GAAG,KAAK,CAAC;QA6ChE,YAAY,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;IACpC,CAAC;IA5CD,MAAM,KAAK,MAAM;QACf,OAAO,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;IACnC,CAAC;IAED,IAAc,aAAa;QACzB,OAAO,IAAI,CAAA;;yDAE0C,GAAG,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,eAAe,IAAI,CAAC,QAAQ;;YAEjG,IAAI,CAAC,WAAW;;UAElB,IAAI,CAAC,UAAU;;KAEpB,CAAC;IACJ,CAAC;IAED,IAAc,UAAU;;QACtB,OAAO,OAAA,IAAI,CAAC,YAAY,CAAC,KAAK,0CAAE,MAAM,EACpC,CAAC,CAAC,IAAI,CAAA;oBACQ,GAAG,EAAE,CAAC,IAAI,CAAC,WAAW,EAAE;wBACpB,oBAAoB,CAAC,IAAI,CAAC,UAAU;;;8BAG9B;YACxB,CAAC,CAAC,IAAI,CAAA,EAAE,CAAC;IACb,CAAC;IAED,YAAY,CAAC,KAAuB;QAClC,KAAK,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;QAC1B,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,WAAW,CAAE,CAAC,CAAC,MAAc,CAAC,KAAK,CAAC,CAAC,CAAC;IAC/F,CAAC;IAEO,WAAW,CAAC,KAAgB;QAClC,IAAI,KAAK,IAAI,KAAK,CAAC,MAAM,EAAE;YACzB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,MAAM,IAAI,oBAAoB,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;SAC5G;aAAM;YACL,IAAI,CAAC,WAAW,GAAG,oBAAoB,CAAC,IAAI,CAAC,MAAM,CAAC;YACpD,IAAI,CAAC,YAAY,CAAC,KAAK,GAAG,EAAE,CAAC;SAC9B;IACH,CAAC;CAMF;AAnDqB;IAAnB,gBAAgB,EAAE;4CAAwD;AAEvD;IAAnB,gBAAgB,EAAE;kDAAoC;AAEnC;IAAnB,gBAAgB,EAAE;4DAA+C","sourcesContent":["/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { html, internalProperty } from 'lit-element';\nimport { CommonStringsService } from '@clr/core/internal';\nimport { CdsControl } from '@clr/core/forms';\nimport { ClarityIcons } from '@clr/core/icon/icon.service.js';\nimport { folderIcon } from '@clr/core/icon/shapes/folder.js';\nimport { styles } from './file.element.css.js';\n\n/**\n * Time Input\n *\n * ```typescript\n * import '@clr/core/file/register.js';\n * ```\n *\n * ```html\n * <cds-file>\n *   <label>file</label>\n *   <input type=\"file\" />\n * </cds-file>\n * ```\n *\n * @element cds-file\n * @slot - For projecting file input and label\n */\nexport class CdsFile extends CdsControl {\n  @internalProperty() private buttonLabel = CommonStringsService.keys.browse;\n\n  @internalProperty() protected fixedControlWidth = true;\n\n  @internalProperty() protected supportsPrefixSuffixActions = false;\n\n  static get styles() {\n    return [...super.styles, styles];\n  }\n\n  protected get inputTemplate() {\n    return html`\n      <div>\n        <cds-button size=\"sm\" action=\"outline\" @click=\"${() => this.label.click()}\" ?disabled=${this.disabled}>\n          <cds-icon shape=\"folder\" aria-hidden=\"true\"></cds-icon>\n          ${this.buttonLabel}\n        </cds-button>\n        ${this.clearFiles}\n      </div>\n    `;\n  }\n\n  protected get clearFiles() {\n    return this.inputControl.files?.length\n      ? html` <cds-control-action\n          @click=\"${() => this.updateLabel()}\"\n          aria-label=\"${CommonStringsService.keys.removeFile}\"\n        >\n          <cds-icon shape=\"times\"></cds-icon>\n        </cds-control-action>`\n      : html``;\n  }\n\n  firstUpdated(props: Map<string, any>) {\n    super.firstUpdated(props);\n    this.inputControl.addEventListener('change', e => this.updateLabel((e.target as any).files));\n  }\n\n  private updateLabel(files?: FileList) {\n    if (files && files.length) {\n      this.buttonLabel = files.length > 1 ? `${files.length} ${CommonStringsService.keys.files}` : files[0].name;\n    } else {\n      this.buttonLabel = CommonStringsService.keys.browse;\n      this.inputControl.value = '';\n    }\n  }\n\n  constructor() {\n    super();\n    ClarityIcons.addIcons(folderIcon);\n  }\n}\n"]}