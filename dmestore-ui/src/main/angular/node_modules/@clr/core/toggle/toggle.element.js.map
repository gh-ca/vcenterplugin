{"version":3,"file":"toggle.element.js","sourceRoot":"","sources":["../../../src/toggle/toggle.element.ts"],"names":[],"mappings":"AAAA;;;;GAIG;;AAEH,OAAO,EAAE,gBAAgB,EAAE,MAAM,oBAAoB,CAAC;AACtD,OAAO,EAAE,wBAAwB,EAAE,MAAM,iBAAiB,CAAC;AAC3D,OAAO,EAAE,MAAM,EAAE,MAAM,yBAAyB,CAAC;AAEjD;;;;;;;;;;;;;;;;;;;;;;;;;GAyBG;AACH,MAAM,OAAO,SAAU,SAAQ,wBAAwB;IAAvD;;QACgE,YAAO,GAAG,KAAK,CAAC;IAWhF,CAAC;IATC,MAAM,KAAK,MAAM;QACf,OAAO,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;IACnC,CAAC;IAED,YAAY,CAAC,KAAuB;QAClC,KAAK,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;QAC1B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC;QACzC,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,QAAQ,EAAE,GAAG,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC;IACjG,CAAC;CACF;AAXqD;IAAnD,gBAAgB,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;0CAA2B","sourcesContent":["/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { internalProperty } from '@clr/core/internal';\nimport { CdsInternalControlInline } from '@clr/core/forms';\nimport { styles } from './toggle.element.css.js';\n\n/**\n * Toggle\n *\n * ```typescript\n * import '@clr/core/toggle/register.js';\n * ```\n *\n * ```html\n * <cds-toggle>\n *   <label>Toggle</label>\n *   <input type=\"checkbox\" />\n * </cds-toggle>\n * ```\n *\n * @element cds-toggle\n * @slot - For projecting checkbox\n * @cssprop --background\n * @cssprop --border\n * @cssprop --border-radius\n * @cssprop --height\n * @cssprop --width\n * @cssprop --anchor-background\n * @cssprop --anchor-border-radius\n * @cssprop --anchor-width\n * @cssprop --anchor-height\n */\nexport class CdsToggle extends CdsInternalControlInline {\n  @internalProperty({ type: Boolean, reflect: true }) protected checked = false;\n\n  static get styles() {\n    return [...super.styles, styles];\n  }\n\n  firstUpdated(props: Map<string, any>) {\n    super.firstUpdated(props);\n    this.checked = this.inputControl.checked;\n    this.inputControl.addEventListener('change', () => (this.checked = this.inputControl.checked));\n  }\n}\n"]}