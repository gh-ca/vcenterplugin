{"version":3,"file":"lit-element.js","sourceRoot":"","sources":["../../../../src/internal/utils/lit-element.ts"],"names":[],"mappings":"AAAA;;;;GAIG;AAIH;;GAEG;AACH,MAAM,UAAU,sBAAsB,CAAC,QAA+C;IACpF,OAAO,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;AACtE,CAAC;AAED;;;;;GAKG;AACH,MAAM,UAAU,gBAAgB,CAC9B,KAAuB,EACvB,MAA+B,EAC/B,OAAkC;IAElC,KAAK,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,GAAG,EAAE,EAAE,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,SAAS,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACtH,CAAC;AAED;;;;GAIG;AACH,MAAM,UAAU,SAAS,CACvB,MAA+B,EAC/B,MAA+B,EAC/B,UAAuC;IAEvC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC;SACpB,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;SAC1B,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3C,CAAC","sourcesContent":["/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { LitElement } from 'lit-element';\n\n/**\n * Returns a promise when all components have completed rendering one cycle.\n */\nexport function childrenUpdateComplete(elements: LitElement[] | NodeListOf<LitElement>) {\n  return Promise.all(Array.from(elements).map(e => e.updateComplete));\n}\n\n/**\n * Set all properties that are in common with a parent group and child components.\n * This is helpful when providing convenience group/wrapper components that set the state\n * of child slotted elements (cds-form-group, cds-control-group). Typically call\n * during the `firstUpdated` or `updated` lifecycle.\n */\nexport function syncDefinedProps(\n  props: Map<string, any>,\n  source: { [prop: string]: any },\n  targets: { [prop: string]: any }[]\n) {\n  props.forEach((_value, key) => targets.filter(t => t && t[key] !== undefined).forEach(t => (t[key] = source[key])));\n}\n\n/**\n * Set all common properties between two instances with given conditions. This is\n * helpful for setting child component properties from the parent given certain\n * conditions.\n */\nexport function syncProps(\n  target: { [prop: string]: any },\n  source: { [prop: string]: any },\n  conditions: { [prop: string]: boolean }\n) {\n  Object.keys(conditions)\n    .filter(c => conditions[c])\n    .forEach(c => (target[c] = source[c]));\n}\n"]}