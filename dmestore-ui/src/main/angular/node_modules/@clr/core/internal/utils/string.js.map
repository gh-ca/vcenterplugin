{"version":3,"file":"string.js","sourceRoot":"","sources":["../../../../src/internal/utils/string.ts"],"names":[],"mappings":"AAAA;;;;GAIG;AAEH,MAAM,UAAU,iBAAiB,CAAC,SAAiB,EAAE,GAAU,EAAE,GAAG,IAAW;IAC7E,OAAO,GAAG;SACP,GAAG,CAAC,EAAE,CAAC,EAAE;QACR,OAAO,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC;IACrB,CAAC,CAAC;SACD,IAAI,CAAC,SAAS,CAAC;SACf,IAAI,EAAE,CAAC;AACZ,CAAC;AAED,wEAAwE;AACxE,MAAM,UAAU,uBAAuB,CAAC,GAAU,EAAE,GAAG,IAAW;IAChE,OAAO,iBAAiB,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC;AAC9C,CAAC;AAED,MAAM,UAAU,yBAAyB,CAAC,GAAU,EAAE,GAAG,IAAW;IAClE,OAAO,iBAAiB,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC;AAC7C,CAAC;AAED,MAAM,UAAU,oBAAoB,CAAC,KAAa;IAChD,OAAO,KAAK,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC;AAC7D,CAAC;AAED,MAAM,UAAU,oBAAoB,CAAC,GAAW;IAC9C,OAAO,GAAG;SACP,KAAK,CAAC,GAAG,CAAC;SACV,GAAG,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;SACjG,IAAI,CAAC,EAAE,CAAC,CAAC;AACd,CAAC;AAED,MAAM,UAAU,qBAAqB,CAAC,MAAc;IAClD,MAAM,SAAS,GAAG,oBAAoB,CAAC,MAAM,CAAC,CAAC;IAC/C,OAAO,qBAAqB,CAAC,SAAS,CAAC,CAAC;AAC1C,CAAC;AAED;;;GAGG;AACH,MAAM,UAAU,SAAS,CAAC,MAAiC;IACzD,OAAO,wBAAwB,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,MAAM,CAAC,CAAC;AAC/D,CAAC;AAED,MAAM,UAAU,aAAa,CAAC,MAAiC;IAC7D,OAAO,wBAAwB,CAC7B,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,EACzD,MAAM,CACP,CAAC;AACJ,CAAC;AAED,SAAS,wBAAwB,CAAC,KAAe,EAAE,MAAiC;IAClF,OAAO,KAAK,CAAC,MAAM,CAAC,CAAC,SAAS,EAAE,IAAI,EAAE,EAAE,CAAC,GAAG,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,IAAI,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;AAChH,CAAC;AAED,MAAM,UAAU,qBAAqB,CAAC,MAAc;IAClD,OAAO,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AAC1D,CAAC;AAED,sEAAsE;AACtE,MAAM,CAAC,MAAM,QAAQ,GAAG,uBAAuB,CAAC;AAEhD,6EAA6E;AAC7E,MAAM,CAAC,MAAM,eAAe,GAAG,oBAAoB,CAAC","sourcesContent":["/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport function transformToString(delimiter: string, fns: any[], ...args: any[]): string {\n  return fns\n    .map(fn => {\n      return fn(...args);\n    })\n    .join(delimiter)\n    .trim();\n}\n\n// have to go this route because ramda curry throws typescript for loops\nexport function transformToSpacedString(fns: any[], ...args: any[]): string {\n  return transformToString(' ', fns, ...args);\n}\n\nexport function transformToUnspacedString(fns: any[], ...args: any[]): string {\n  return transformToString('', fns, ...args);\n}\n\nexport function camelCaseToKebabCase(value: string) {\n  return value.replace(/[A-Z]/g, l => `-${l.toLowerCase()}`);\n}\n\nexport function kebabCaseToCamelCase(str: string) {\n  return str\n    .split('-')\n    .map((item, index) => (index ? item.charAt(0).toUpperCase() + item.slice(1).toLowerCase() : item))\n    .join('');\n}\n\nexport function kebabCaseToPascalCase(string: string) {\n  const camelCase = kebabCaseToCamelCase(string);\n  return capitalizeFirstLetter(camelCase);\n}\n\n/**\n * Take a object map of css properties and if value concatenate string of all computed values\n * Useful for dynamic style tags in lit-html templates\n */\nexport function setStyles(styles: { [key: string]: string }) {\n  return createPropStyleSelectors(Object.keys(styles), styles);\n}\n\nexport function setPropStyles(styles: { [key: string]: string }) {\n  return createPropStyleSelectors(\n    Object.keys(styles).filter(prop => prop.startsWith('--')),\n    styles\n  );\n}\n\nfunction createPropStyleSelectors(props: string[], styles: { [key: string]: string }) {\n  return props.reduce((allStyles, prop) => `${allStyles}${styles[prop] ? `${prop}:${styles[prop]};` : ''}`, '');\n}\n\nexport function capitalizeFirstLetter(string: string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\n/** Used for Storybook docs to define knob group for css properties */\nexport const cssGroup = 'CSS Custom Properties';\n\n/** Used for Storybook docs to define knob group for JavaScript properties */\nexport const propertiesGroup = 'Default Properties';\n"]}