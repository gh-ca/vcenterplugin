{"version":3,"file":"property.js","sourceRoot":"","sources":["../../../../src/internal/decorators/property.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { property as prop } from 'lit-element';\nimport { camelCaseToKebabCase, kebabCaseToPascalCase, capitalizeFirstLetter } from '../utils/string.js';\nimport { LogService } from '../services/log.service.js';\nimport { getAngularVersion, getReactVersion, getVueVersion } from '../utils/framework.js';\nimport { isNilOrEmpty } from '../utils/identity.js';\n\nexport interface CustomPropertyConfig {\n  type: unknown;\n  required?: 'error' | 'warning';\n  requiredMessage?: string;\n}\n\nexport type PropertyConfig = PropertyDeclaration<unknown, unknown> & CustomPropertyConfig;\n\n/**\n * https://developers.google.com/web/fundamentals/web-components/best-practices\n */\nexport function getDefaultOptions(propertyKey: string, options?: PropertyConfig): PropertyDeclaration {\n  const type = options ? options.type : options;\n\n  switch (type) {\n    case Array:\n      return { reflect: false, ...options };\n    case Object:\n      return { reflect: false, ...options };\n    case String:\n      return {\n        reflect: true,\n        attribute: camelCaseToKebabCase(propertyKey),\n        converter: {\n          toAttribute: (value: string) => (value ? value : null),\n        },\n        ...options,\n      };\n    case Number:\n      return { reflect: true, attribute: camelCaseToKebabCase(propertyKey), ...options };\n    case Boolean:\n      return {\n        reflect: true,\n        attribute: camelCaseToKebabCase(propertyKey),\n        converter: {\n          // Mimic standard HTML boolean attributes + support \"false\" attribute values\n          // https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes\n          toAttribute: (value: string) => (value ? '' : null),\n          fromAttribute: (value: string) => value !== 'false' && value !== null,\n        },\n        ...options,\n      };\n    case Date: {\n      return {\n        // Parse date strings from attributes but do not reflect back into attribute\n        reflect: false,\n        converter: {\n          fromAttribute: (value: string) => new Date(value),\n        },\n        ...options,\n      };\n    }\n    default:\n      return options as PropertyDeclaration<unknown, unknown>;\n  }\n}\n\nexport function requirePropertyCheck(protoOrDescriptor: any, name: string, options?: PropertyConfig) {\n  const targetFirstUpdated: () => void = protoOrDescriptor.firstUpdated;\n\n  function firstUpdated(this: any, props: Map<string, any>): void {\n    if (options && options.required && isNilOrEmpty(this[name])) {\n      const message = options.requiredMessage || getRequiredMessage(options.required, name, this.tagName);\n      if (options.required === 'error') {\n        throw new Error(message);\n      } else {\n        LogService.warn(message, this);\n      }\n    }\n\n    if (targetFirstUpdated) {\n      targetFirstUpdated.apply(this, [props]);\n    }\n  }\n\n  protoOrDescriptor.firstUpdated = firstUpdated;\n}\n\nfunction getRequiredMessage(level = 'warning', propertyName: string, tagName: string) {\n  const tag = tagName.toLocaleLowerCase();\n  return (\n    `${capitalizeFirstLetter(\n      level\n    )}: ${propertyName} is required to use ${tag} component. Set the JS Property or HTML Attribute.\\n\\n` +\n    `${getAngularVersion() ? `Angular: <${tag} [${propertyName}]=\"...\"></${tag}>\\n` : ''}` +\n    `${getVueVersion() ? `Vue: <${tag} :${propertyName}=\"...\"></${tag}>\\n` : ''}` +\n    `${getReactVersion() ? `React: <${kebabCaseToPascalCase(tag)} ${propertyName}={...} />\\n` : ''}` +\n    `${`HTML: <${tag} ${camelCaseToKebabCase(propertyName)}=\"...\"></${tag}>\\n`}` +\n    `${`JavaScript: document.querySelector('${tag}').${propertyName} = '...';\\n\\n`}`\n  );\n}\n\n/**\n * lit-element @property decorator with custom defaults specific to Clarity.\n * https://lit-element.polymer-project.org/guide/properties#property-options\n *\n * A property decorator which creates a LitElement property which reflects a\n * corresponding attribute value. A PropertyDeclaration may optionally be\n * supplied to configure property features.\n *\n * @ExportDecoratedItems\n */\nexport function property(options?: PropertyConfig) {\n  return (protoOrDescriptor: any, name: string) => {\n    requirePropertyCheck(protoOrDescriptor, name, options);\n    return prop(getDefaultOptions(name, options))(protoOrDescriptor, name);\n  };\n}\n\nexport interface PropertyDeclaration<Type = unknown, TypeHint = unknown> {\n  noAccessor?: boolean;\n  attribute?: boolean | string;\n  type?: TypeHint;\n  reflect?: boolean;\n  converter?:\n    | ((value: string | null, type?: TypeHint) => Type)\n    | {\n        fromAttribute?(value: string | null, type?: TypeHint): Type;\n        toAttribute?(value: Type, type?: TypeHint): unknown;\n      };\n  hasChanged?(value: Type, oldValue: Type): boolean;\n}\n\n/**\n * lit-element @internalProperty decorator with custom defaults specific to Clarity.\n *\n * This is used for communication between internal component properties\n * that are not exposed as part of the public component API.\n *\n * A internalProperty decorator which creates a LitElement property which will\n * trigger a re-render when set but not allow the value to be updated through\n * public attributes.\n *\n * @ExportDecoratedItems\n */\nexport function internalProperty(options?: PropertyConfig) {\n  return (protoOrDescriptor: any, name: string) => {\n    const defaultOptions: any = getDefaultOptions(name, options);\n\n    if (defaultOptions) {\n      defaultOptions.reflect = options?.reflect ? options.reflect : false; // prevent attr reflection by default\n    }\n\n    return prop(defaultOptions)(protoOrDescriptor, name);\n  };\n}\n"]}