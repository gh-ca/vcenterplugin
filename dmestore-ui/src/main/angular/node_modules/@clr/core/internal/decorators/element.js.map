{"version":3,"file":"element.js","sourceRoot":"","sources":["../../../../src/internal/decorators/element.ts"],"names":[],"mappings":"AAAA;;;;GAIG;AAEH,OAAO,EAAE,qBAAqB,EAAE,MAAM,wBAAwB,CAAC;AAE/D;;;;;;;;;;;;;GAaG;AAEH,2BAA2B;AAC3B,MAAM,qBAAqB,GAAG,CAAC,OAAe,EAAE,UAA2B,EAAE,EAAE;IAC7E,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,GAAG,UAAU,CAAC;IACtC,OAAO;QACL,IAAI;QACJ,QAAQ;QACR,QAAQ,CAAC,QAAkC;YACzC,qBAAqB,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;QAC3C,CAAC;KACF,CAAC;AACJ,CAAC,CAAC;AAEF,sBAAsB;AACtB,MAAM,mBAAmB,GAAG,CAAC,OAAe,EAAE,QAAkC,EAAE,EAAE;IAClF,qBAAqB,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;IACzC,OAAO,QAAe,CAAC;AACzB,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,aAAa,GAAG,CAAC,OAAe,EAAE,EAAE,CAAC,CAAC,iBAA6D,EAAE,EAAE;IAClH,OAAO,OAAO,iBAAiB,KAAK,UAAU;QAC5C,CAAC,CAAC,mBAAmB,CAAC,OAAO,EAAE,iBAAiB,CAAC;QACjD,CAAC,CAAC,qBAAqB,CAAC,OAAO,EAAE,iBAAiB,CAAC,CAAC;AACxD,CAAC,CAAC","sourcesContent":["/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { registerElementSafely } from './../utils/register.js';\n\n/**\n * @experimental\n * experimental decorator, waiting on Angular issue to be resolved https://github.com/angular/angular/issues/31495\n * Class decorator factory that defines the decorated class as a custom element.\n *\n * ```\n * @customElement('my-element')\n * class MyElement {\n *   render() {\n *     return html``;\n *   }\n * }\n * ```\n */\n\n// TC39 Decorators proposal\nconst standardCustomElement = (tagName: string, descriptor: ClassDescriptor) => {\n  const { kind, elements } = descriptor;\n  return {\n    kind,\n    elements,\n    finisher(classDef: Constructor<HTMLElement>) {\n      registerElementSafely(tagName, classDef);\n    },\n  };\n};\n\n// Legacy TS Decorator\nconst legacyCustomElement = (tagName: string, classDef: Constructor<HTMLElement>) => {\n  registerElementSafely(tagName, classDef);\n  return classDef as any;\n};\n\nexport const customElement = (tagName: string) => (classOrDescriptor: Constructor<HTMLElement> | ClassDescriptor) => {\n  return typeof classOrDescriptor === 'function'\n    ? legacyCustomElement(tagName, classOrDescriptor)\n    : standardCustomElement(tagName, classOrDescriptor);\n};\n\n// TC39 Decorators proposal\ninterface ClassDescriptor {\n  kind: 'class';\n  elements: ClassElement[];\n  finisher?: <T>(classDef: Constructor<T>) => undefined | Constructor<T>;\n}\n\ninterface ClassElement {\n  kind: 'field' | 'method';\n  key: PropertyKey;\n  placement: 'static' | 'prototype' | 'own';\n  initializer?: Function;\n  extras?: ClassElement[];\n  finisher?: <T>(classDef: Constructor<T>) => undefined | Constructor<T>;\n  descriptor?: PropertyDescriptor;\n}\n\nexport type Constructor<T> = {\n  new (...args: any[]): T;\n};\n"]}