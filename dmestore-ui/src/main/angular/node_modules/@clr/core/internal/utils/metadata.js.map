{"version":3,"file":"metadata.js","sourceRoot":"","sources":["../../../../src/internal/utils/metadata.ts"],"names":[],"mappings":"AAAA;;;;GAIG;AAEH,OAAO,EAAE,aAAa,EAAE,MAAM,YAAY,CAAC;AAC3C,OAAO,EAAE,aAAa,EAAE,MAAM,aAAa,CAAC;AAE5C,MAAM,UAAU,2BAA2B,CAAC,OAAe,EAAE,sBAA2B;IACtF,MAAM,IAAI,GAAG,aAAa,CAAC,sBAAsB,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC,OAAO,CAAC,CAAC;IACzE,qDAAY,2BAA2B,CAAC,IAAI,CAAC,GAAK,2BAA2B,CAAC,IAAI,CAAC,GAAK,oBAAoB,CAAC,IAAI,CAAC,EAAG;AACvH,CAAC;AAED,MAAM,UAAU,uBAAuB,CAAC,IAAS;IAC/C,uCAAY,IAAI,KAAE,KAAK,EAAE,aAAa,CAAC,IAAI,CAAC,IAAG;AACjD,CAAC;AAED,SAAS,2BAA2B,CAAC,qBAA0B;;IAC7D,aAAO,qBAAqB,CAAC,aAAa,0CAAE,MAAM,CAAC,CAAC,GAAQ,EAAE,IAAsB,EAAE,EAAE;;QACtF,MAAM,IAAI,GAAG,OAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,IAAI,0CAAE,QAAQ,CAAC,OAAO,MAAK,IAAI,CAAC,IAAI,KAAK,cAAc,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC;QAC9F,uCAAY,GAAG,KAAE,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,OAAO,EAAE,EAAE,IAAI,EAAE,EAAE,IAAG;IACxD,CAAC,EAAE,EAAE,EAAE;AACT,CAAC;AAED,SAAS,2BAA2B,CAAC,qBAA0B;;IAC7D,aAAO,qBAAqB,CAAC,UAAU,0CACnC,MAAM,CAAC,CAAC,IAAS,EAAE,EAAE,wBAAC,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,IAAI,0CAAE,QAAQ,CAAC,KAAK,IAAC,EAClD,MAAM,CAAC,CAAC,GAAQ,EAAE,IAAoC,EAAE,EAAE;QACzD,MAAM,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC;QACtF,uCACK,GAAG,KACN,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;gBACX,OAAO,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE;gBACpC,YAAY,EAAE,OAAO,CAAC,CAAC,CAAC;aACzB,IACD;IACJ,CAAC,EAAE,EAAE,EAAE;AACX,CAAC;AAED,SAAS,oBAAoB,CAAC,qBAA0B;;IACtD,aAAO,qBAAqB,CAAC,KAAK,0CAAE,MAAM,CAAC,CAAC,GAAQ,EAAE,IAAsB,EAAE,EAAE;QAC9E,uCAAY,GAAG,KAAE,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,OAAO,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE,YAAY,EAAE,GAAG,IAAI,CAAC,IAAI,EAAE,EAAE,IAAG;IAC9F,CAAC,EAAE,EAAE,EAAE;AACT,CAAC","sourcesContent":["/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { arrayToObject } from './array.js';\nimport { setPropStyles } from './string.js';\n\nexport function getElementStorybookArgTypes(tagName: string, customElementsMetadata: any) {\n  const meta = arrayToObject(customElementsMetadata.tags, 'name')[tagName];\n  return { ...getPropOptionsStorybookArgs(meta), ...getCustomPropsStorybookArgs(meta), ...getSlotStorybookArgs(meta) };\n}\n\nexport function getElementStorybookArgs(args: any) {\n  return { ...args, style: setPropStyles(args) };\n}\n\nfunction getCustomPropsStorybookArgs(customElementMetadata: any) {\n  return customElementMetadata.cssProperties?.reduce((obj: any, prop: { name: string }) => {\n    const type = prop?.name?.includes('color') || prop.name === '--background' ? 'color' : 'text';\n    return { ...obj, [prop.name]: { control: { type } } };\n  }, {});\n}\n\nfunction getPropOptionsStorybookArgs(customElementMetadata: any) {\n  return customElementMetadata.properties\n    ?.filter((prop: any) => prop?.type?.includes(' | '))\n    .reduce((obj: any, prop: { name: string; type: string }) => {\n      const options = prop.type.split('|').map(p => p.replace(/\"/g, '').replace(/\\s/g, ''));\n      return {\n        ...obj,\n        [prop.name]: {\n          control: { type: 'select', options },\n          defaultValue: options[0],\n        },\n      };\n    }, {});\n}\n\nfunction getSlotStorybookArgs(customElementMetadata: any) {\n  return customElementMetadata.slots?.reduce((obj: any, prop: { name: string }) => {\n    return { ...obj, [prop.name]: { control: { type: 'text' }, defaultValue: `${prop.name}` } };\n  }, {});\n}\n"]}