{"version":3,"file":"event.js","sourceRoot":"","sources":["../../../../src/internal/decorators/event.ts"],"names":[],"mappings":"AAAA;;;;GAIG;AAWH,MAAM,OAAO,YAAY;IACvB,YAAoB,MAAmB,EAAU,SAAiB;QAA9C,WAAM,GAAN,MAAM,CAAa;QAAU,cAAS,GAAT,SAAS,CAAQ;IAAG,CAAC;IAEtE,IAAI,CAAC,KAAQ,EAAE,OAAsB;QACnC,IAAI,CAAC,MAAM,CAAC,aAAa,CACvB,IAAI,WAAW,CAAI,IAAI,CAAC,SAAS,kBAAI,MAAM,EAAE,KAAK,IAAK,OAAO,EAAG,CAClE,CAAC;IACJ,CAAC;CACF;AAED,sBAAsB;AACtB,SAAS,WAAW,CAAC,UAA8B,EAAE,iBAAqB,EAAE,IAAiB;IAC3F,MAAM,CAAC,cAAc,CAAC,iBAAiB,EAAE,IAAI,EAAE,UAAU,CAAC,CAAC;AAC7D,CAAC;AAED,2BAA2B;AAC3B,SAAS,aAAa,CAAC,UAA8B,EAAE,OAAwB;IAC7E,OAAO;QACL,IAAI,EAAE,QAAQ;QACd,SAAS,EAAE,WAAW;QACtB,GAAG,EAAE,OAAO,CAAC,GAAG;QAChB,UAAU;KACX,CAAC;AACJ,CAAC;AAED,MAAM,UAAU,KAAK;IACnB,OAAO,CAAC,iBAAsB,EAAE,IAAY,EAAO,EAAE;QACnD,MAAM,UAAU,GAAG;YACjB,GAAG;gBACD,OAAO,IAAI,YAAY,CAAC,IAAI,EAAE,IAAI,KAAK,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC;YACnF,CAAC;YACD,UAAU,EAAE,IAAI;YAChB,YAAY,EAAE,IAAI;SACnB,CAAC;QAEF,OAAO,IAAI,KAAK,SAAS;YACvB,CAAC,CAAC,WAAW,CAAC,UAAU,EAAE,iBAAiB,EAAE,IAAI,CAAC;YAClD,CAAC,CAAC,aAAa,CAAC,UAAU,EAAE,iBAAiB,CAAC,CAAC;IACnD,CAAC,CAAC;AACJ,CAAC","sourcesContent":["/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport interface EventOptions {\n  /** indicate if event bubbles up through the DOM or not */\n  bubbles?: boolean;\n  /** indicate if event is cancelable */\n  cancelable?: boolean;\n  /** indicate if event can bubble across the boundary between the shadow DOM and the light DOM */\n  composed?: boolean;\n}\n\nexport class EventEmitter<T> {\n  constructor(private target: HTMLElement, private eventName: string) {}\n\n  emit(value: T, options?: EventOptions) {\n    this.target.dispatchEvent(\n      new CustomEvent<T>(this.eventName, { detail: value, ...options })\n    );\n  }\n}\n\n// Legacy TS Decorator\nfunction legacyEvent(descriptor: PropertyDescriptor, protoOrDescriptor: {}, name: PropertyKey) {\n  Object.defineProperty(protoOrDescriptor, name, descriptor);\n}\n\n// TC39 Decorators proposal\nfunction standardEvent(descriptor: PropertyDescriptor, element: { key: string }) {\n  return {\n    kind: 'method',\n    placement: 'prototype',\n    key: element.key,\n    descriptor,\n  };\n}\n\nexport function event() {\n  return (protoOrDescriptor: any, name: string): any => {\n    const descriptor = {\n      get(this: HTMLElement) {\n        return new EventEmitter(this, name !== undefined ? name : protoOrDescriptor.key);\n      },\n      enumerable: true,\n      configurable: true,\n    };\n\n    return name !== undefined\n      ? legacyEvent(descriptor, protoOrDescriptor, name)\n      : standardEvent(descriptor, protoOrDescriptor);\n  };\n}\n"]}