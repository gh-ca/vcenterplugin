export interface FocusTrapElement extends HTMLElement {
    topReboundElement: HTMLElement;
    bottomReboundElement: HTMLElement;
}
export declare function focusElementIfInCurrentFocusTrapElement(focusedElement: HTMLElement, focusTrapElement: FocusTrapElement): void;
export declare function elementIsOutsideFocusTrapElement(focusedElement: HTMLElement, focusTrapElement: FocusTrapElement): boolean;
export declare function createFocusTrapReboundElement(): HTMLSpanElement;
export declare function addReboundElementsToFocusTrapElement(focusTrapElement: FocusTrapElement): void;
export declare function removeReboundElementsFromFocusTrapElement(focusTrapElement: FocusTrapElement): void;
export declare class FocusTrap {
    private focusTrapElement;
    private previousFocus;
    private onFocusInEvent;
    constructor(hostElement: HTMLElement);
    enableFocusTrap(): void;
    removeFocusTrap(): void;
    private onFocusIn;
}
