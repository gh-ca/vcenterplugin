{"version":3,"file":"responsive.js","sourceRoot":"","sources":["../../../../src/internal/utils/responsive.ts"],"names":[],"mappings":"AAAA;;;;GAIG;AAWH,MAAM,UAAU,aAAa,CAAC,OAAoB,EAAE,UAAsB;IACxE,MAAM,QAAQ,GAAG,IAAI,cAAc,CAAC,GAAG,EAAE,CAAC,UAAU,EAAE,CAAC,CAAC;IACxD,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;IACzB,QAAgB,CAAC,aAAa,GAAG,UAAU,CAAC,CAAC,kFAAkF;IAChI,OAAO,QAAQ,CAAC;AAClB,CAAC;AAED;;;;GAIG;AACH,MAAM,UAAU,qBAAqB,CAAC,SAA8B,EAAE,YAA0B,EAAE,EAAc;IAC9G,OAAO,aAAa,CAAC,SAAS,EAAE,GAAG,EAAE;QACnC,IAAI,SAAS,CAAC,UAAU,EAAE;YACxB,sBAAsB,CAAC,SAAS,EAAE,YAAY,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE;gBAC7D,IAAI,OAAO,EAAE;oBACX,EAAE,EAAE,CAAC;iBACN;YACH,CAAC,CAAC,CAAC;SACJ;IACH,CAAC,CAAC,CAAC;AACL,CAAC;AAED,SAAS,sBAAsB,CAAC,SAA8B,EAAE,YAA0B;IACxF,OAAO,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,EAAE;QACxC,MAAM,aAAa,GAAG,SAAS,CAAC,MAAM,CAAC;QACvC,SAAS,CAAC,MAAM,GAAG,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QAE3C,OAAO,YAAY,CAAC,OAAO;aACxB,MAAM,CAAC,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE;YACrB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE;gBACpB,IAAI,SAAS,CAAC,MAAM,KAAK,YAAY,CAAC,aAAa,EAAE;oBACnD,OAAO,IAAI,CAAC;iBACb;qBAAM;oBACL,MAAM,IAAI,GAAG,SAAS,CAAC,MAAM,CAAC;oBAC9B,SAAS,CAAC,MAAM,GAAG,IAAI,CAAC;oBAExB,OAAO,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,EAAE;wBACxC,SAAS,CAAC,MAAM,GAAG,SAAS,CAAC,YAAY,CAAC,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC;wBACpE,OAAO,IAAI,CAAC;oBACd,CAAC,CAAC,CAAC;iBACJ;YACH,CAAC,CAAC,CAAC;QACL,CAAC,EAAE,OAAO,CAAC,OAAO,CAAS,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;aACnD,IAAI,CAAC,GAAG,EAAE,CAAC,aAAa,KAAK,SAAS,CAAC,MAAM,CAAC,CAAC;IACpD,CAAC,CAAC,CAAC;AACL,CAAC","sourcesContent":["/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { LitElement } from 'lit-element';\n\nexport type ResponsiveComponent = LitElement & { layout: string; responsive: boolean; layoutStable: boolean };\n\nexport interface LayoutConfig {\n  layouts: string[];\n  initialLayout: string;\n}\n\nexport function elementResize(element: HTMLElement, callbackFn: () => void) {\n  const observer = new ResizeObserver(() => callbackFn());\n  observer.observe(element);\n  (observer as any).__testTrigger = callbackFn; // hook to trigger resize event as ResizeObserver does not run in headless chrome.\n  return observer;\n}\n\n/**\n * Given a ResponsiveComponent this function will loop through a list of layout\n * options and change the layout of the component until the components layout\n * condition is satisfied.\n */\nexport function updateComponentLayout(component: ResponsiveComponent, layoutConfig: LayoutConfig, fn: () => void) {\n  return elementResize(component, () => {\n    if (component.responsive) {\n      calculateOptimalLayout(component, layoutConfig).then(updated => {\n        if (updated) {\n          fn();\n        }\n      });\n    }\n  });\n}\n\nfunction calculateOptimalLayout(component: ResponsiveComponent, layoutConfig: LayoutConfig): Promise<boolean> {\n  return component.updateComplete.then(() => {\n    const currentLayout = component.layout;\n    component.layout = layoutConfig.layouts[0];\n\n    return layoutConfig.layouts\n      .reduce((prev, next) => {\n        return prev.then(() => {\n          if (component.layout === layoutConfig.initialLayout) {\n            return next;\n          } else {\n            const prev = component.layout;\n            component.layout = next;\n\n            return component.updateComplete.then(() => {\n              component.layout = component.layoutStable ? component.layout : prev;\n              return next;\n            });\n          }\n        });\n      }, Promise.resolve<string>(layoutConfig.layouts[0]))\n      .then(() => currentLayout !== component.layout);\n  });\n}\n"]}