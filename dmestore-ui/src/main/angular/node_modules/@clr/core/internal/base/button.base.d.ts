import { LitElement } from 'lit-element';
export declare const iconSpinnerCheck: import("lit-element").TemplateResult;
export declare const iconSpinner: import("lit-element").TemplateResult;
export declare const iconSlot: import("lit-element").TemplateResult;
export declare const badgeSlot: import("lit-element").TemplateResult;
export declare class CdsBaseButton extends LitElement {
    readonly: boolean;
    type: 'button' | 'submit';
    name: string;
    value: string;
    disabled: boolean;
    protected tabIndexAttr: number | null;
    protected focused: boolean;
    protected role: string | null;
    /** @deprecated slotted anchor deprecated in 4.0 in favor of wrapping element */
    protected containsAnchor: boolean;
    /** @deprecated slotted anchor deprecated in 4.0 in favor of wrapping element */
    protected anchor: HTMLAnchorElement;
    protected isAnchor: boolean;
    protected icon: HTMLElement;
    protected badge: HTMLElement;
    protected get hiddenButtonTemplate(): import("lit-element").TemplateResult;
    private templateButton;
    private hiddenButton;
    protected render(): import("lit-element").TemplateResult;
    connectedCallback(): void;
    protected firstUpdated(props: Map<string, any>): void;
    protected updated(props: Map<string, any>): void;
    private setupAnchorFocus;
    /**
     * We have to append a hidden button outside the web component in the light DOM
     * This allows us to trigger native submit events within a form element.
     */
    private setupNativeButtonBehavior;
    private triggerNativeButtonBehavior;
    private appendHiddenButton;
    private emulateKeyBoardEventBehavior;
    private updateButtonAttributes;
}
