{"version":3,"file":"checkbox.element.js","sourceRoot":"","sources":["../../../src/checkbox/checkbox.element.ts"],"names":[],"mappings":"AAAA;;;;GAIG;;AAEH,OAAO,EAAE,gBAAgB,EAAE,wBAAwB,EAAE,MAAM,oBAAoB,CAAC;AAChF,OAAO,EAAE,wBAAwB,EAAE,MAAM,iBAAiB,CAAC;AAC3D,OAAO,EAAE,MAAM,EAAE,MAAM,2BAA2B,CAAC;AAEnD;;;;;;;;;;;;;;;;;;;;;GAqBG;AACH,MAAM,OAAO,WAAY,SAAQ,wBAAwB;IAAzD;;QACgE,YAAO,GAAG,KAAK,CAAC;QAEhB,kBAAa,GAAG,KAAK,CAAC;IAwBtF,CAAC;IAtBC,MAAM,KAAK,MAAM;QACf,OAAO,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;IACnC,CAAC;IAED,YAAY,CAAC,KAAuB;QAClC,KAAK,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;QAC1B,IAAI,CAAC,2BAA2B,EAAE,CAAC;QACnC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC;QACzC,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,QAAQ,EAAE,GAAG,EAAE;YAChD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC;YACzC,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC7B,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,2BAA2B;QACjC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,YAAY,CAAC,aAAa,IAAI,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC;QACxG,IAAI,CAAC,YAAY,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC;QAErD,IAAI,CAAC,SAAS,CAAC,IAAI,CACjB,wBAAwB,CAAC,IAAI,CAAC,YAAY,EAAE,eAAe,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,GAAG,GAAG,KAAK,IAAI,CAAC,CAAC,CACzG,CAAC;IACJ,CAAC;CACF;AA1BqD;IAAnD,gBAAgB,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;4CAA2B;AAE1B;IAAnD,gBAAgB,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;kDAAiC","sourcesContent":["/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { internalProperty, listenForAttributeChange } from '@clr/core/internal';\nimport { CdsInternalControlInline } from '@clr/core/forms';\nimport { styles } from './checkbox.element.css.js';\n\n/**\n * Checkbox\n *\n * ```typescript\n * import '@clr/core/checkbox/register.js';\n * ```\n *\n * ```html\n * <cds-checkbox>\n *   <label>checkbox</label>\n *   <input type=\"checkbox\" />\n *   <cds-control-message>message text</cds-control-message>\n * </cds-checkbox>\n * ```\n *\n * @element cds-checkbox\n * @slot - For projecting checkbox\n * @cssprop --color\n * @cssprop --check-color\n * @cssprop --background\n * @cssprop --border-radius\n */\nexport class CdsCheckbox extends CdsInternalControlInline {\n  @internalProperty({ type: Boolean, reflect: true }) protected checked = false;\n\n  @internalProperty({ type: Boolean, reflect: true }) protected indeterminate = false;\n\n  static get styles() {\n    return [...super.styles, styles];\n  }\n\n  firstUpdated(props: Map<string, any>) {\n    super.firstUpdated(props);\n    this.listenForIndeterminateState();\n    this.checked = this.inputControl.checked;\n    this.inputControl.addEventListener('change', () => {\n      this.checked = this.inputControl.checked;\n      this.indeterminate = false;\n    });\n  }\n\n  private listenForIndeterminateState() {\n    this.indeterminate = this.inputControl.indeterminate || this.inputControl.hasAttribute('indeterminate');\n    this.inputControl.indeterminate = this.indeterminate;\n\n    this.observers.push(\n      listenForAttributeChange(this.inputControl, 'indeterminate', val => (this.indeterminate = val !== null))\n    );\n  }\n}\n"]}