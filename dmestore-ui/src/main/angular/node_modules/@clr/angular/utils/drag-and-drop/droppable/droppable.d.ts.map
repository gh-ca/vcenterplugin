{"version":3,"file":"droppable.d.ts","sources":["droppable.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ElementRef, EventEmitter, OnDestroy, OnInit, Renderer2 } from '@angular/core';\nimport { DomAdapter } from '../../dom-adapter/dom-adapter';\nimport { ClrDragEvent } from '../drag-event';\nimport { ClrDropToleranceInterface } from '../interfaces/drop-tolerance.interface';\nimport { DragAndDropEventBusService } from '../providers/drag-and-drop-event-bus.service';\nexport declare class ClrDroppable<T> implements OnInit, OnDestroy {\n    private el;\n    private eventBus;\n    private domAdapter;\n    private renderer;\n    private dragStartSubscription;\n    private dragMoveSubscription;\n    private dragEndSubscription;\n    private droppableEl;\n    private clientRect;\n    constructor(el: ElementRef, eventBus: DragAndDropEventBusService<T>, domAdapter: DomAdapter, renderer: Renderer2);\n    isDraggableMatch: boolean;\n    private _isDraggableOver;\n    set isDraggableOver(value: boolean);\n    private _group;\n    set group(value: string | string[]);\n    private _dropTolerance;\n    private dropToleranceGenerator;\n    set dropTolerance(value: number | string | ClrDropToleranceInterface);\n    dragStartEmitter: EventEmitter<ClrDragEvent<T>>;\n    dragMoveEmitter: EventEmitter<ClrDragEvent<T>>;\n    dragEndEmitter: EventEmitter<ClrDragEvent<T>>;\n    dragLeaveEmitter: EventEmitter<ClrDragEvent<T>>;\n    dragEnterEmitter: EventEmitter<ClrDragEvent<T>>;\n    dropEmitter: EventEmitter<ClrDragEvent<T>>;\n    private unsubscribeFrom;\n    private checkGroupMatch;\n    private isInDropArea;\n    private onDragStart;\n    private onDragMove;\n    private onDragEnd;\n    ngOnInit(): void;\n    ngOnDestroy(): void;\n}\n"]}