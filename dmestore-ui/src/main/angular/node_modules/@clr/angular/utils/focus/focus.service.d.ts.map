{"version":3,"file":"focus.service.d.ts","sources":["focus.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { Optional, Renderer2 } from '@angular/core';\nimport { ArrowKeyDirection } from './arrow-key-direction.enum';\nimport { FocusableItem } from './focusable-item/focusable-item';\nexport declare class FocusService {\n    private renderer;\n    constructor(renderer: Renderer2);\n    private _unlistenFuncs;\n    private _current;\n    get current(): FocusableItem;\n    reset(first: FocusableItem): void;\n    listenToArrowKeys(el: HTMLElement): void;\n    registerContainer(el: HTMLElement): void;\n    moveTo(item: FocusableItem): void;\n    move(direction: ArrowKeyDirection): boolean;\n    activateCurrent(): boolean;\n    detachListeners(): void;\n}\nexport declare function clrFocusServiceFactory(existing: FocusService, renderer: Renderer2): FocusService;\nexport declare const FOCUS_SERVICE_PROVIDER: {\n    provide: typeof FocusService;\n    useFactory: typeof clrFocusServiceFactory;\n    deps: (typeof Renderer2 | Optional[])[];\n};\n"]}