{"version":3,"file":"drag-event-listener.service.d.ts","sources":["drag-event-listener.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { NgZone, Renderer2 } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { DragEventInterface, DragPointPosition } from '../interfaces/drag-event.interface';\nimport { DragAndDropEventBusService } from './drag-and-drop-event-bus.service';\nexport declare class DragEventListenerService<T> {\n    private ngZone;\n    private renderer;\n    private eventBus;\n    private draggableEl;\n    private listeners;\n    private nestedListeners;\n    private checkDragStartBoundaryListener;\n    private dragStart;\n    private dragMove;\n    private dragEnd;\n    private hasDragStarted;\n    private dragStartDelayTimeout;\n    get dragStarted(): Observable<DragEventInterface<T>>;\n    get dragMoved(): Observable<DragEventInterface<T>>;\n    get dragEnded(): Observable<DragEventInterface<T>>;\n    get dragStartPosition(): DragPointPosition;\n    constructor(ngZone: NgZone, renderer: Renderer2, eventBus: DragAndDropEventBusService<T>);\n    private initialPosition;\n    dragDataTransfer?: T;\n    group?: string | string[];\n    dragStartDelay: number;\n    ghostElement?: any;\n    dropPointPosition?: DragPointPosition;\n    attachDragListeners(draggableEl: Node): void;\n    detachDragListeners(): void;\n    private getNativeEventObject;\n    private customDragEvent;\n    private checkDragStartBoundary;\n    private broadcast;\n    private generateDragEvent;\n}\n"]}