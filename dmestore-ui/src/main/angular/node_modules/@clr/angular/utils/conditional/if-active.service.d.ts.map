{"version":3,"file":"if-active.service.d.ts","sources":["if-active.service.d.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { InjectionToken } from '@angular/core';\nimport { Observable } from 'rxjs';\nexport declare const IF_ACTIVE_ID: InjectionToken<number>;\nexport declare function tokenFactory(): number;\nexport declare const IF_ACTIVE_ID_PROVIDER: {\n    provide: InjectionToken<number>;\n    useFactory: typeof tokenFactory;\n};\nexport declare class IfActiveService {\n    /********\n     * @property _currentChange\n     *\n     * @description\n     * A RXJS Subject that updates and provides subscriptions to for the current current state of a component template\n     * implemting the IfActive structural directive.\n     *\n     */\n    private _currentChange;\n    /*********\n     * @property _current\n     *\n     * @description\n     * A property holding the current value for current/closed state of an IfActive structural directive.\n     */\n    private _current;\n    /*********\n     *\n     * @description\n     * A getter function that provides an observable for the _current Subject.\n     *\n     */\n    get currentChange(): Observable<number>;\n    /*********\n     *\n     * @description\n     * A setter function that updates the current state of _current for this instance of IfActive structural directive.\n     * And, broadcasts the new value to all subscribers.\n     *\n     * @param value\n     */\n    set current(value: number);\n    /*********\n     *\n     * @description\n     * A getter that returns the current value of this IfActive instance.\n     * @returns\n     */\n    get current(): number;\n}\n"]}