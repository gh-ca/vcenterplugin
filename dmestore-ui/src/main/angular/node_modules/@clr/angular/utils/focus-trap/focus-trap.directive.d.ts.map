{"version":3,"file":"focus-trap.directive.d.ts","sources":["focus-trap.directive.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { AfterViewInit, ElementRef, Injector, OnDestroy, Renderer2, OnInit } from '@angular/core';\nimport { FocusTrapTracker } from './focus-trap-tracker.service';\nimport { FocusTrapConfig } from './focus-trap-config.interface';\nexport declare const FOCUSABLES = \"[href]:not([tabindex=\\\"-1\\\"]), button:not([disabled]):not([tabindex=\\\"-1\\\"]), input:not([disabled]):not([tabindex=\\\"-1\\\"]), select:not([disabled]):not([tabindex=\\\"-1\\\"]), textarea:not([disabled]):not([tabindex=\\\"-1\\\"]), [contenteditable=\\\"true\\\"]:not([tabindex=\\\"-1\\\"]), [tabindex]:not([tabindex=\\\"-1\\\"]) \";\nexport declare class FocusTrapDirective implements OnInit, AfterViewInit, OnDestroy {\n    private el;\n    private injector;\n    private focusTrapsTracker;\n    private renderer;\n    private platformId;\n    private previousActiveElement;\n    private localFocusEscaped;\n    private document;\n    private parentElement;\n    private topReboundEl;\n    private bottomReboundEl;\n    private firstFocusableEl;\n    private lastFocusableEl;\n    constructor(el: ElementRef, injector: Injector, focusTrapsTracker: FocusTrapTracker, renderer: Renderer2, platformId: any);\n    private _config;\n    set config(config: FocusTrapConfig);\n    onFocusIn(event: any): void;\n    private createFocusableOffScreenEl;\n    private addReboundEls;\n    private removeReboundEls;\n    setPreviousFocus(): void;\n    ngOnInit(): void;\n    ngAfterViewInit(): void;\n    private get potentiallyFocusableEls();\n    private focusFirstFocusable;\n    private focusLastFocusable;\n    private focusTrapElIfOutside;\n    private focusElement;\n    ngOnDestroy(): void;\n}\n"]}