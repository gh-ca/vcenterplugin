import { Observable, Subject } from 'rxjs';
import { LoadingListener } from '../loading/loading-listener';
import { ClrLoadingState } from '../loading/loading';
import * as ɵngcc0 from '@angular/core';
export declare class IfExpandService implements LoadingListener {
    expandable: number;
    protected _loading: boolean;
    get loading(): boolean;
    set loading(value: boolean);
    protected _expanded: boolean;
    get expanded(): boolean;
    set expanded(value: boolean);
    toggle(): void;
    protected _expandChange: Subject<boolean>;
    get expandChange(): Observable<boolean>;
    loadingStateChange(state: ClrLoadingState): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<IfExpandService, never>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<IfExpandService>;
}

//# sourceMappingURL=if-expanded.service.d.ts.map