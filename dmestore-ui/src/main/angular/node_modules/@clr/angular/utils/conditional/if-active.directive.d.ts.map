{"version":3,"file":"if-active.directive.d.ts","sources":["if-active.directive.d.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { EventEmitter, OnDestroy, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { IfActiveService } from './if-active.service';\nexport declare class ClrIfActive implements OnDestroy {\n    private ifActiveService;\n    private id;\n    private template;\n    private container;\n    private subscription;\n    private wasActive;\n    constructor(ifActiveService: IfActiveService, id: number, template: TemplateRef<any>, container: ViewContainerRef);\n    private checkAndUpdateView;\n    /*********\n     *\n     * @description\n     * A setter that updates IfActiveService.active with value.\n     *\n     * @param value\n     */\n    set active(value: boolean);\n    /********\n     *\n     * @description\n     * A getter that returns the current IfActiveService.active value.\n     */\n    get active(): boolean;\n    /**********\n     * @property activeChange\n     *\n     * @description\n     * An event emitter that emits when the active property is set to allow for 2way binding when the directive is\n     * used with de-structured / de-sugared syntax.\n     *\n     */\n    activeChange: EventEmitter<boolean>;\n    /*********\n     *\n     * @description\n     * Function that takes a any value and either created an embedded view for the associated ViewContainerRef or,\n     * Clears all views from the ViewContainerRef\n     * @param value\n     */\n    updateView(value: boolean): void;\n    ngOnDestroy(): void;\n}\n"]}