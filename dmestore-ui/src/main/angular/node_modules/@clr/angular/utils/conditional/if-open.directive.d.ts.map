{"version":3,"file":"if-open.directive.d.ts","sources":["if-open.directive.d.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { EventEmitter, OnDestroy, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { ClrPopoverToggleService } from '../popover/providers/popover-toggle.service';\nexport declare class ClrIfOpen implements OnDestroy {\n    private toggleService;\n    private template;\n    private container;\n    static ngAcceptInputType_open: boolean | '';\n    private subscription;\n    /*********\n     *\n     * @description\n     * A setter that updates ClrPopoverToggleService.open with value.\n     *\n     * @param value\n     */\n    set open(value: boolean);\n    /********\n     *\n     * @description\n     * A getter that returns the current ClrPopoverToggleService.open value.\n     *\n     */\n    get open(): boolean;\n    /**********\n     * @property openChange\n     *\n     * @description\n     * An event emitter that emits when the open property is set to allow for 2way binding when the directive is\n     * used with de-structured / de-sugared syntax.\n     */\n    openChange: EventEmitter<boolean>;\n    constructor(toggleService: ClrPopoverToggleService, template: TemplateRef<any>, container: ViewContainerRef);\n    /*********\n     *\n     * @description\n     * Function that takes a boolean value and either created an embedded view for the associated ViewContainerRef or,\n     * Clears all views from the ViewContainerRef\n     * @param value\n     */\n    updateView(value: boolean): void;\n    ngOnDestroy(): void;\n}\n"]}