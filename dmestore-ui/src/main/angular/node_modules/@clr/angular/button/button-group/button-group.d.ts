import { QueryList } from '@angular/core';
import { ButtonInGroupService } from '../providers/button-in-group.service';
import { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';
import { ClrPopoverPosition } from '../../utils/popover/interfaces/popover-position.interface';
import { ClrPopoverToggleService } from '../../utils/popover/providers/popover-toggle.service';
import { ClrButton } from './button';
import * as ɵngcc0 from '@angular/core';
export declare class ClrButtonGroup {
    buttonGroupNewService: ButtonInGroupService;
    private toggleService;
    popoverId: string;
    commonStrings: ClrCommonStringsService;
    buttons: QueryList<ClrButton>;
    constructor(buttonGroupNewService: ButtonInGroupService, toggleService: ClrPopoverToggleService, popoverId: string, commonStrings: ClrCommonStringsService);
    popoverPosition: ClrPopoverPosition;
    get open(): boolean;
    inlineButtons: ClrButton[];
    menuButtons: ClrButton[];
    /**
     * 1. Initializes the initial Button Group View
     * 2. Subscribes to changes on the ContentChildren
     *    in case the user content projection changes
     */
    ngAfterContentInit(): void;
    /**
     * Moves the button into the other ViewContainer
     * when an update is received.
     *
     * @param button
     */
    rearrangeButton(button: ClrButton): void;
    /**
     * Author: Eudes
     *
     * Finds the order of a button w.r.t other buttons
     *
     * @param buttonToMove
     * @returns
     */
    getMoveIndex(buttonToMove: ClrButton): number;
    initializeButtons(): void;
    /**
     * Overflow Menu
     *
     */
    private _menuPosition;
    get menuPosition(): string;
    set menuPosition(pos: string);
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ClrButtonGroup, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<ClrButtonGroup, "clr-button-group", never, { "menuPosition": "clrMenuPosition"; }, {}, ["buttons"], never>;
}

//# sourceMappingURL=button-group.d.ts.map