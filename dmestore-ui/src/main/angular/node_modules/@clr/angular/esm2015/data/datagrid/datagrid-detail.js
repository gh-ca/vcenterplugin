/*
 * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
import { Component, ContentChild, HostListener } from '@angular/core';
import { DetailService } from './providers/detail.service';
import { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';
import { ClrDatagridDetailHeader } from './datagrid-detail-header';
export class ClrDatagridDetail {
    constructor(detailService, commonStrings) {
        this.detailService = detailService;
        this.commonStrings = commonStrings;
    }
    closeCheck() {
        this.detailService.close();
    }
}
ClrDatagridDetail.ctorParameters = () => [
    { type: DetailService },
    { type: ClrCommonStringsService }
];
ClrDatagridDetail.decorators = [
    { type: Component, args: [{
                selector: 'clr-dg-detail',
                host: {
                    '[class.datagrid-detail-pane]': 'true',
                },
                // We put the *ngIf on the clrFocusTrap so it doesn't always exist on the page
                // have to test for presence of header for aria-describedby because it was causing unit tests to crash
                template: `
    <div
      [clrFocusTrap]="{ strict: false }"
      class="datagrid-detail-pane-content"
      *ngIf="detailService.isOpen"
      role="dialog"
      [id]="detailService.id"
      aria-modal="true"
      [attr.aria-describedby]="header ? header.titleId : ''"
    >
      <div class="clr-sr-only">{{ commonStrings.keys.detailPaneStart }}</div>
      <ng-content></ng-content>
      <div class="clr-sr-only">{{ commonStrings.keys.detailPaneEnd }}</div>
    </div>
  `
            },] }
];
ClrDatagridDetail.ctorParameters = () => [
    { type: DetailService },
    { type: ClrCommonStringsService }
];
ClrDatagridDetail.propDecorators = {
    header: [{ type: ContentChild, args: [ClrDatagridDetailHeader,] }],
    closeCheck: [{ type: HostListener, args: ['document:keyup.esc',] }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0YWdyaWQtZGV0YWlsLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcGFja2FnZXMvYW5ndWxhci9wcm9qZWN0cy9jbHItYW5ndWxhci9zcmMvZGF0YS9kYXRhZ3JpZC9kYXRhZ3JpZC1kZXRhaWwudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7R0FJRztBQUNILE9BQU8sRUFBRSxTQUFTLEVBQUUsWUFBWSxFQUFFLFlBQVksRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN0RSxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sNEJBQTRCLENBQUM7QUFDM0QsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0seUNBQXlDLENBQUM7QUFDbEYsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUF5Qm5FLE1BQU0sT0FBTyxpQkFBaUI7SUFHNUIsWUFBbUIsYUFBNEIsRUFBUyxhQUFzQztRQUEzRSxrQkFBYSxHQUFiLGFBQWEsQ0FBZTtRQUFTLGtCQUFhLEdBQWIsYUFBYSxDQUF5QjtJQUFHLENBQUM7SUFHbEcsVUFBVTtRQUNSLElBQUksQ0FBQyxhQUFhLENBQUMsS0FBSyxFQUFFLENBQUM7SUFDN0IsQ0FBQzs7O1lBTGlDLGFBQWE7WUFBd0IsdUJBQXVCOzs7WUExQi9GLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsZUFBZTtnQkFDekIsSUFBSSxFQUFFO29CQUNKLDhCQUE4QixFQUFFLE1BQU07aUJBQ3ZDO2dCQUNELDhFQUE4RTtnQkFDOUUsc0dBQXNHO2dCQUN0RyxRQUFRLEVBQUU7Ozs7Ozs7Ozs7Ozs7O0dBY1Q7YUFDRjs7O1lBMUJRLGFBQWE7WUFDYix1QkFBdUI7OztxQkEyQjdCLFlBQVksU0FBQyx1QkFBdUI7eUJBSXBDLFlBQVksU0FBQyxvQkFBb0IiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogQ29weXJpZ2h0IChjKSAyMDE2LTIwMjAgVk13YXJlLCBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBUaGlzIHNvZnR3YXJlIGlzIHJlbGVhc2VkIHVuZGVyIE1JVCBsaWNlbnNlLlxuICogVGhlIGZ1bGwgbGljZW5zZSBpbmZvcm1hdGlvbiBjYW4gYmUgZm91bmQgaW4gTElDRU5TRSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBwcm9qZWN0LlxuICovXG5pbXBvcnQgeyBDb21wb25lbnQsIENvbnRlbnRDaGlsZCwgSG9zdExpc3RlbmVyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBEZXRhaWxTZXJ2aWNlIH0gZnJvbSAnLi9wcm92aWRlcnMvZGV0YWlsLnNlcnZpY2UnO1xuaW1wb3J0IHsgQ2xyQ29tbW9uU3RyaW5nc1NlcnZpY2UgfSBmcm9tICcuLi8uLi91dGlscy9pMThuL2NvbW1vbi1zdHJpbmdzLnNlcnZpY2UnO1xuaW1wb3J0IHsgQ2xyRGF0YWdyaWREZXRhaWxIZWFkZXIgfSBmcm9tICcuL2RhdGFncmlkLWRldGFpbC1oZWFkZXInO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdjbHItZGctZGV0YWlsJyxcbiAgaG9zdDoge1xuICAgICdbY2xhc3MuZGF0YWdyaWQtZGV0YWlsLXBhbmVdJzogJ3RydWUnLFxuICB9LFxuICAvLyBXZSBwdXQgdGhlICpuZ0lmIG9uIHRoZSBjbHJGb2N1c1RyYXAgc28gaXQgZG9lc24ndCBhbHdheXMgZXhpc3Qgb24gdGhlIHBhZ2VcbiAgLy8gaGF2ZSB0byB0ZXN0IGZvciBwcmVzZW5jZSBvZiBoZWFkZXIgZm9yIGFyaWEtZGVzY3JpYmVkYnkgYmVjYXVzZSBpdCB3YXMgY2F1c2luZyB1bml0IHRlc3RzIHRvIGNyYXNoXG4gIHRlbXBsYXRlOiBgXG4gICAgPGRpdlxuICAgICAgW2NsckZvY3VzVHJhcF09XCJ7IHN0cmljdDogZmFsc2UgfVwiXG4gICAgICBjbGFzcz1cImRhdGFncmlkLWRldGFpbC1wYW5lLWNvbnRlbnRcIlxuICAgICAgKm5nSWY9XCJkZXRhaWxTZXJ2aWNlLmlzT3BlblwiXG4gICAgICByb2xlPVwiZGlhbG9nXCJcbiAgICAgIFtpZF09XCJkZXRhaWxTZXJ2aWNlLmlkXCJcbiAgICAgIGFyaWEtbW9kYWw9XCJ0cnVlXCJcbiAgICAgIFthdHRyLmFyaWEtZGVzY3JpYmVkYnldPVwiaGVhZGVyID8gaGVhZGVyLnRpdGxlSWQgOiAnJ1wiXG4gICAgPlxuICAgICAgPGRpdiBjbGFzcz1cImNsci1zci1vbmx5XCI+e3sgY29tbW9uU3RyaW5ncy5rZXlzLmRldGFpbFBhbmVTdGFydCB9fTwvZGl2PlxuICAgICAgPG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PlxuICAgICAgPGRpdiBjbGFzcz1cImNsci1zci1vbmx5XCI+e3sgY29tbW9uU3RyaW5ncy5rZXlzLmRldGFpbFBhbmVFbmQgfX08L2Rpdj5cbiAgICA8L2Rpdj5cbiAgYCxcbn0pXG5leHBvcnQgY2xhc3MgQ2xyRGF0YWdyaWREZXRhaWwge1xuICBAQ29udGVudENoaWxkKENsckRhdGFncmlkRGV0YWlsSGVhZGVyKSBwdWJsaWMgaGVhZGVyOiBDbHJEYXRhZ3JpZERldGFpbEhlYWRlcjtcblxuICBjb25zdHJ1Y3RvcihwdWJsaWMgZGV0YWlsU2VydmljZTogRGV0YWlsU2VydmljZSwgcHVibGljIGNvbW1vblN0cmluZ3M6IENsckNvbW1vblN0cmluZ3NTZXJ2aWNlKSB7fVxuXG4gIEBIb3N0TGlzdGVuZXIoJ2RvY3VtZW50OmtleXVwLmVzYycpXG4gIGNsb3NlQ2hlY2soKTogdm9pZCB7XG4gICAgdGhpcy5kZXRhaWxTZXJ2aWNlLmNsb3NlKCk7XG4gIH1cbn1cbiJdfQ==