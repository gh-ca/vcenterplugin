{"version":3,"file":"tree-node.d.ts","sources":["tree-node.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { EventEmitter, Injector, OnDestroy, OnInit } from '@angular/core';\nimport { IfExpandService } from '../../utils/conditional/if-expanded.service';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { ClrSelectedState } from './models/selected-state.enum';\nimport { TreeNodeModel } from './models/tree-node.model';\nimport { TreeFeaturesService } from './tree-features.service';\nimport { TreeFocusManagerService } from './tree-focus-manager.service';\nimport { ClrTreeNodeLink } from './tree-node-link';\nexport declare class ClrTreeNode<T> implements OnInit, OnDestroy {\n    nodeId: string;\n    private platformId;\n    featuresService: TreeFeaturesService<T>;\n    expandService: IfExpandService;\n    commonStrings: ClrCommonStringsService;\n    private focusManager;\n    STATES: typeof ClrSelectedState;\n    private skipEmitChange;\n    constructor(nodeId: string, platformId: any, parent: ClrTreeNode<T>, featuresService: TreeFeaturesService<T>, expandService: IfExpandService, commonStrings: ClrCommonStringsService, focusManager: TreeFocusManagerService<T>, injector: Injector);\n    _model: TreeNodeModel<T>;\n    isExpandable(): boolean;\n    get selected(): ClrSelectedState | boolean;\n    set selected(value: ClrSelectedState | boolean);\n    selectedChange: EventEmitter<ClrSelectedState>;\n    get ariaSelected(): boolean;\n    expandable: boolean | undefined;\n    get expanded(): boolean;\n    set expanded(value: boolean);\n    expandedChange: EventEmitter<boolean>;\n    private subscriptions;\n    contentContainerTabindex: number;\n    private contentContainer;\n    ngOnInit(): void;\n    ngOnDestroy(): void;\n    private treeNodeLinkList;\n    get treeNodeLink(): ClrTreeNodeLink;\n    private setTabIndex;\n    private checkTabIndex;\n    focusTreeNode(): void;\n    broadcastFocusOnContainer(): void;\n    onKeyDown(event: KeyboardEvent): void;\n    private expandOrFocusFirstChild;\n    private collapseOrFocusParent;\n    private triggerDefaultAction;\n}\n"]}