{"version":3,"file":"recursive-children.d.ts","sources":["recursive-children.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { Subscription } from 'rxjs';\nimport { IfExpandService } from '../../utils/conditional/if-expanded.service';\nimport { TreeFeaturesService } from './tree-features.service';\nimport { TreeNodeModel } from './models/tree-node.model';\nimport { ClrRecursiveForOfContext } from './recursive-for-of';\nexport declare class RecursiveChildren<T> {\n    featuresService: TreeFeaturesService<T>;\n    private expandService;\n    constructor(featuresService: TreeFeaturesService<T>, expandService: IfExpandService);\n    shouldRender(): boolean;\n    parent: TreeNodeModel<T>;\n    children: TreeNodeModel<T>[];\n    getContext(node: TreeNodeModel<T>): ClrRecursiveForOfContext<T>;\n    subscription: Subscription;\n    ngOnDestroy(): void;\n}\n"]}