{"version":3,"file":"datagrid-string-filter.d.ts","sources":["datagrid-string-filter.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { AfterViewInit, ElementRef, EventEmitter, OnDestroy } from '@angular/core';\nimport { ClrDatagridFilter } from '../../datagrid-filter';\nimport { ClrDatagridStringFilterInterface } from '../../interfaces/string-filter.interface';\nimport { CustomFilter } from '../../providers/custom-filter';\nimport { FiltersProvider, RegisteredFilter } from '../../providers/filters';\nimport { DomAdapter } from '../../../../utils/dom-adapter/dom-adapter';\nimport { DatagridFilterRegistrar } from '../../utils/datagrid-filter-registrar';\nimport { DatagridStringFilterImpl } from './datagrid-string-filter-impl';\nimport { ClrPopoverToggleService } from '../../../../utils/popover/providers/popover-toggle.service';\nexport declare class DatagridStringFilter<T = any> extends DatagridFilterRegistrar<T, DatagridStringFilterImpl<T>> implements CustomFilter, AfterViewInit, OnDestroy {\n    private domAdapter;\n    private smartToggleService;\n    private subs;\n    constructor(filters: FiltersProvider<T>, domAdapter: DomAdapter, smartToggleService: ClrPopoverToggleService);\n    /**\n     * Customizable filter logic based on a search text\n     */\n    set customStringFilter(value: ClrDatagridStringFilterInterface<T> | RegisteredFilter<T, DatagridStringFilterImpl<T>>);\n    /**\n     * Indicates if the filter dropdown is open\n     */\n    open: boolean;\n    /**\n     * We need the actual input element to automatically focus on it\n     */\n    input: ElementRef;\n    /**\n     * We grab the ClrDatagridFilter we wrap to register this StringFilter to it.\n     */\n    filterContainer: ClrDatagridFilter<T>;\n    ngAfterViewInit(): void;\n    ngOnDestroy(): void;\n    private initFilterValue;\n    /**\n     * Common setter for the input value\n     */\n    get value(): string;\n    set value(value: string);\n    filterValueChange: EventEmitter<any>;\n}\n"]}