{"version":3,"file":"datagrid-filter.d.ts","sources":["datagrid-filter.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { EventEmitter, OnDestroy, ElementRef } from '@angular/core';\nimport { ClrDatagridFilterInterface } from './interfaces/filter.interface';\nimport { CustomFilter } from './providers/custom-filter';\nimport { FiltersProvider, RegisteredFilter } from './providers/filters';\nimport { DatagridFilterRegistrar } from './utils/datagrid-filter-registrar';\nimport { ClrPopoverPosition } from '../../utils/popover/interfaces/popover-position.interface';\nimport { ClrPopoverToggleService } from '../../utils/popover/providers/popover-toggle.service';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\n/**\n * Custom filter that can be added in any column to override the default object property string filter.\n * The reason this is not just an input on DatagridColumn is because we need the filter's template to be projected,\n * since it can be anything (not just a text input).\n */\nexport declare class ClrDatagridFilter<T = any> extends DatagridFilterRegistrar<T, ClrDatagridFilterInterface<T>> implements CustomFilter, OnDestroy {\n    commonStrings: ClrCommonStringsService;\n    private smartToggleService;\n    private platformId;\n    popoverId: string;\n    private subs;\n    ariaExpanded: boolean;\n    constructor(_filters: FiltersProvider<T>, commonStrings: ClrCommonStringsService, smartToggleService: ClrPopoverToggleService, platformId: any, popoverId: string);\n    anchor: ElementRef;\n    smartPosition: ClrPopoverPosition;\n    private _open;\n    get open(): boolean;\n    set open(open: boolean);\n    openChange: EventEmitter<boolean>;\n    set customFilter(filter: ClrDatagridFilterInterface<T> | RegisteredFilter<T, ClrDatagridFilterInterface<T>>);\n    /**\n     * Indicates if the filter is currently active\n     */\n    get active(): boolean;\n    ngOnDestroy(): void;\n}\n"]}