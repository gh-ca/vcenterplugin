import { AfterContentInit, ElementRef, OnDestroy } from '@angular/core';
import { TreeFocusManagerService } from './tree-focus-manager.service';
import { TreeFeaturesService } from './tree-features.service';
import * as ɵngcc0 from '@angular/core';
export declare class ClrTree<T> implements AfterContentInit, OnDestroy {
    featuresService: TreeFeaturesService<T>;
    private focusManagerService;
    private el;
    constructor(featuresService: TreeFeaturesService<T>, focusManagerService: TreeFocusManagerService<T>, el: ElementRef);
    private subscriptions;
    set lazy(value: boolean);
    tabindex: number;
    get isMultiSelectable(): boolean;
    onFocusIn(event: FocusEvent): void;
    private rootNodes;
    ngAfterContentInit(): void;
    private setRootNodes;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ClrTree<any>, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<ClrTree<any>, "clr-tree", never, { "lazy": "clrLazy"; }, {}, ["rootNodes"], ["*"]>;
}

//# sourceMappingURL=tree.d.ts.map