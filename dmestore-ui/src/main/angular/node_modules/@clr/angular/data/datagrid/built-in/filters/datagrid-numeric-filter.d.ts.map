{"version":3,"file":"datagrid-numeric-filter.d.ts","sources":["datagrid-numeric-filter.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { AfterViewInit, ElementRef, EventEmitter } from '@angular/core';\nimport { ClrDatagridFilter } from '../../datagrid-filter';\nimport { ClrDatagridNumericFilterInterface } from '../../interfaces/numeric-filter.interface';\nimport { CustomFilter } from '../../providers/custom-filter';\nimport { FiltersProvider, RegisteredFilter } from '../../providers/filters';\nimport { DomAdapter } from '../../../../utils/dom-adapter/dom-adapter';\nimport { DatagridFilterRegistrar } from '../../utils/datagrid-filter-registrar';\nimport { DatagridNumericFilterImpl } from './datagrid-numeric-filter-impl';\nimport { ClrCommonStringsService } from '../../../../utils/i18n/common-strings.service';\nimport { ClrPopoverToggleService } from '../../../../utils/popover/providers/popover-toggle.service';\nexport declare class DatagridNumericFilter<T = any> extends DatagridFilterRegistrar<T, DatagridNumericFilterImpl<T>> implements CustomFilter, AfterViewInit {\n    private domAdapter;\n    commonStrings: ClrCommonStringsService;\n    private popoverToggleService;\n    constructor(filters: FiltersProvider<T>, domAdapter: DomAdapter, commonStrings: ClrCommonStringsService, popoverToggleService: ClrPopoverToggleService);\n    private subscriptions;\n    ngOnDestroy(): void;\n    /**\n     * Customizable filter logic based on high and low values\n     */\n    set customNumericFilter(value: ClrDatagridNumericFilterInterface<T> | RegisteredFilter<T, DatagridNumericFilterImpl<T>>);\n    /**\n     * Indicates if the filter dropdown is open\n     */\n    open: boolean;\n    /**\n     * We need the actual input element to automatically focus on it\n     */\n    input: ElementRef;\n    /**\n     * We grab the ClrDatagridFilter we wrap to register this StringFilter to it.\n     */\n    filterContainer: ClrDatagridFilter<T>;\n    ngAfterViewInit(): void;\n    private initFilterValues;\n    /**\n     * Common setter for the input values\n     */\n    get value(): [number, number];\n    set value(values: [number, number]);\n    get low(): number | string;\n    set low(low: number | string);\n    get high(): number | string;\n    set high(high: number | string);\n    filterValueChange: EventEmitter<any>;\n}\n"]}