import { EventEmitter, OnInit } from '@angular/core';
import { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';
import * as ɵngcc0 from '@angular/core';
export declare class ClrStackBlock implements OnInit {
    private parent;
    uniqueId: string;
    commonStrings: ClrCommonStringsService;
    expanded: boolean;
    expandedChange: EventEmitter<boolean>;
    expandable: boolean;
    focused: boolean;
    private _changedChildren;
    private _fullyInitialized;
    private _changed;
    get getChangedValue(): boolean;
    set setChangedValue(value: boolean);
    /**
     * Depth of the stack view starting from 1 for first level
     */
    ariaLevel: number;
    /**
     * Total number of rows in a given group
     */
    ariaSetsize: number;
    /**
     * The position of the row inside the grouped by level rows
     */
    ariaPosinset: number;
    constructor(parent: ClrStackBlock, uniqueId: string, commonStrings: ClrCommonStringsService);
    ngOnInit(): void;
    addChild(): void;
    toggleExpand(): void;
    get caretDirection(): string;
    get role(): string;
    get tabIndex(): string;
    get onStackLabelFocus(): boolean;
    get ariaExpanded(): string;
    getStackChildrenId(): string;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ClrStackBlock, [{ optional: true; skipSelf: true; }, null, null]>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<ClrStackBlock, "clr-stack-block", never, { "expanded": "clrSbExpanded"; "expandable": "clrSbExpandable"; "setChangedValue": "clrSbNotifyChange"; "ariaLevel": "clrStackViewLevel"; "ariaSetsize": "clrStackViewSetsize"; "ariaPosinset": "clrStackViewPosinset"; }, { "expandedChange": "clrSbExpandedChange"; }, never, ["clr-stack-label", "*", "clr-stack-block"]>;
}

//# sourceMappingURL=stack-block.d.ts.map