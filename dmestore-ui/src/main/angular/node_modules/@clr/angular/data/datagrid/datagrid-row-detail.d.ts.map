{"version":3,"file":"datagrid-row-detail.d.ts","sources":["datagrid-row-detail.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { AfterContentInit, OnDestroy, QueryList } from '@angular/core';\nimport { ClrDatagridCell } from './datagrid-cell';\nimport { ExpandableRowsCount } from './providers/global-expandable-rows';\nimport { RowActionService } from './providers/row-action-service';\nimport { Selection } from './providers/selection';\nimport { SelectionType } from './enums/selection-type';\nimport { DatagridIfExpandService } from './datagrid-if-expanded.service';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\n/**\n * Generic bland container serving various purposes for Datagrid.\n * For instance, it can help span a text over multiple rows in detail view.\n */\nexport declare class ClrDatagridRowDetail implements AfterContentInit, OnDestroy {\n    selection: Selection;\n    rowActionService: RowActionService;\n    expand: DatagridIfExpandService;\n    expandableRows: ExpandableRowsCount;\n    commonStrings: ClrCommonStringsService;\n    SELECTION_TYPE: typeof SelectionType;\n    constructor(selection: Selection, rowActionService: RowActionService, expand: DatagridIfExpandService, expandableRows: ExpandableRowsCount, commonStrings: ClrCommonStringsService);\n    cells: QueryList<ClrDatagridCell>;\n    set replace(value: boolean);\n    private subscriptions;\n    replacedRow: boolean;\n    ngAfterContentInit(): void;\n    ngOnDestroy(): void;\n    _beginningOfExpandableContentAriaText: string;\n    get beginningOfExpandableContentAriaText(): string;\n    _endOfExpandableContentAriaText: string;\n    get endOfExpandableContentAriaText(): string;\n}\n"]}