{"version":3,"file":"header-renderer.d.ts","sources":["header-renderer.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ElementRef, EventEmitter, OnDestroy, Renderer2 } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { DomAdapter } from '../../../utils/dom-adapter/dom-adapter';\nimport { ColumnResizerService } from '../providers/column-resizer.service';\nimport { DatagridRenderOrganizer } from './render-organizer';\nimport { ColumnState } from '../interfaces/column-state.interface';\nimport { ColumnsService } from '../providers/columns.service';\nexport declare class DatagridHeaderRenderer implements OnDestroy {\n    private el;\n    private renderer;\n    private organizer;\n    private domAdapter;\n    private columnResizerService;\n    private columnsService;\n    private columnState;\n    constructor(el: ElementRef, renderer: Renderer2, organizer: DatagridRenderOrganizer, domAdapter: DomAdapter, columnResizerService: ColumnResizerService, columnsService: ColumnsService, columnState: BehaviorSubject<ColumnState>);\n    resizeEmitter: EventEmitter<number>;\n    /**\n     * Indicates if the column has a strict width, so it doesn't shrink or expand based on the content.\n     */\n    private widthSet;\n    private autoSet;\n    private subscriptions;\n    ngOnDestroy(): void;\n    private stateChanges;\n    private clearWidth;\n    private detectStrictWidth;\n    private computeWidth;\n    getColumnWidthState(): Partial<ColumnState>;\n    setColumnState(index: number): void;\n    private setWidth;\n    private setHidden;\n}\n"]}