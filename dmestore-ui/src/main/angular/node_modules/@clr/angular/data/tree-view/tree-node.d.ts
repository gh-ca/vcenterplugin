import { EventEmitter, Injector, OnDestroy, OnInit } from '@angular/core';
import { IfExpandService } from '../../utils/conditional/if-expanded.service';
import { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';
import { ClrSelectedState } from './models/selected-state.enum';
import { TreeNodeModel } from './models/tree-node.model';
import { TreeFeaturesService } from './tree-features.service';
import { TreeFocusManagerService } from './tree-focus-manager.service';
import { ClrTreeNodeLink } from './tree-node-link';
import * as ɵngcc0 from '@angular/core';
export declare class ClrTreeNode<T> implements OnInit, OnDestroy {
    nodeId: string;
    private platformId;
    featuresService: TreeFeaturesService<T>;
    expandService: IfExpandService;
    commonStrings: ClrCommonStringsService;
    private focusManager;
    STATES: typeof ClrSelectedState;
    private skipEmitChange;
    constructor(nodeId: string, platformId: any, parent: ClrTreeNode<T>, featuresService: TreeFeaturesService<T>, expandService: IfExpandService, commonStrings: ClrCommonStringsService, focusManager: TreeFocusManagerService<T>, injector: Injector);
    _model: TreeNodeModel<T>;
    isExpandable(): boolean;
    get selected(): ClrSelectedState | boolean;
    set selected(value: ClrSelectedState | boolean);
    selectedChange: EventEmitter<ClrSelectedState>;
    get ariaSelected(): boolean;
    expandable: boolean | undefined;
    get expanded(): boolean;
    set expanded(value: boolean);
    expandedChange: EventEmitter<boolean>;
    private subscriptions;
    contentContainerTabindex: number;
    private contentContainer;
    ngOnInit(): void;
    ngOnDestroy(): void;
    private treeNodeLinkList;
    get treeNodeLink(): ClrTreeNodeLink;
    private setTabIndex;
    private checkTabIndex;
    focusTreeNode(): void;
    broadcastFocusOnContainer(): void;
    onKeyDown(event: KeyboardEvent): void;
    private expandOrFocusFirstChild;
    private collapseOrFocusParent;
    private triggerDefaultAction;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ClrTreeNode<any>, [null, null, { optional: true; skipSelf: true; }, null, null, null, null, null]>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<ClrTreeNode<any>, "clr-tree-node", never, { "selected": "clrSelected"; "expanded": "clrExpanded"; "expandable": "clrExpandable"; }, { "selectedChange": "clrSelectedChange"; "expandedChange": "clrExpandedChange"; }, ["treeNodeLinkList"], ["*", "clr-tree-node", "[clrIfExpanded]"]>;
}

//# sourceMappingURL=tree-node.d.ts.map