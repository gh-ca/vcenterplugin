import { Observable } from 'rxjs';
import { TreeNodeModel } from './models/tree-node.model';
import * as ɵngcc0 from '@angular/core';
export declare class TreeFocusManagerService<T> {
    rootNodeModels: TreeNodeModel<T>[];
    private focusedNodeId;
    private _focusRequest;
    private _focusChange;
    get focusRequest(): Observable<string>;
    get focusChange(): Observable<string>;
    private findSiblings;
    private findLastVisibleInNode;
    private findNextFocusable;
    private findLastVisibleInTree;
    private findNodeAbove;
    private findNodeBelow;
    focusNode(model: TreeNodeModel<T>): void;
    broadcastFocusedNode(nodeId: string): void;
    focusParent(model: TreeNodeModel<T>): void;
    focusFirstVisibleNode(): void;
    focusLastVisibleNode(): void;
    focusNodeAbove(model: TreeNodeModel<T>): void;
    focusNodeBelow(model: TreeNodeModel<T>): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<TreeFocusManagerService<any>, never>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<TreeFocusManagerService<any>>;
}

//# sourceMappingURL=tree-focus-manager.service.d.ts.map