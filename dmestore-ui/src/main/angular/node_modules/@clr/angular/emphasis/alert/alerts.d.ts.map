{"version":3,"file":"alerts.d.ts","sources":["alerts.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { AfterContentInit, EventEmitter, OnDestroy, QueryList } from '@angular/core';\nimport { ClrAlert } from './alert';\nimport { MultiAlertService } from './providers/multi-alert.service';\nexport declare class ClrAlerts implements AfterContentInit, OnDestroy {\n    multiAlertService: MultiAlertService;\n    private subscriptions;\n    set allAlerts(value: QueryList<ClrAlert>);\n    /**\n     * Input/Output to support two way binding on current alert index\n     */\n    set _inputCurrentIndex(index: number);\n    currentAlertIndexChange: EventEmitter<number>;\n    set currentAlertIndex(index: number);\n    get currentAlertIndex(): number;\n    /**\n     * Input/Output to support two way binding on current alert instance\n     */\n    set currentAlert(alert: ClrAlert);\n    get currentAlert(): ClrAlert;\n    currentAlertChange: EventEmitter<ClrAlert>;\n    /**\n     * Ensure we are only dealing with alerts that have not been closed yet\n     */\n    get alerts(): ClrAlert[];\n    get currentAlertType(): string;\n    constructor(multiAlertService: MultiAlertService);\n    ngAfterContentInit(): void;\n    ngOnDestroy(): void;\n}\n"]}