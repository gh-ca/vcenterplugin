{"version":3,"file":"dropdown-focus-handler.service.d.ts","sources":["dropdown-focus-handler.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { Renderer2 } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ClrPopoverToggleService } from '../../../utils/popover/providers/popover-toggle.service';\nimport { FocusService } from '../../../utils/focus/focus.service';\nimport { FocusableItem } from '../../../utils/focus/focusable-item/focusable-item';\nexport declare class DropdownFocusHandler implements FocusableItem {\n    id: string;\n    private renderer;\n    private parent;\n    private toggleService;\n    private focusService;\n    private platformId;\n    constructor(id: string, renderer: Renderer2, parent: DropdownFocusHandler, toggleService: ClrPopoverToggleService, focusService: FocusService, platformId: any);\n    private _unlistenFuncs;\n    /**\n     * If the dropdown was opened by clicking on the trigger, we automatically move to the first item\n     */\n    moveToFirstItemWhenOpen(): void;\n    private focusBackOnTrigger;\n    /**\n     * Focus on the menu when it opens, and focus back on the root trigger when the whole dropdown becomes closed\n     */\n    handleRootFocus(): void;\n    private _trigger;\n    get trigger(): HTMLElement;\n    set trigger(el: HTMLElement);\n    private _container;\n    get container(): HTMLElement;\n    set container(el: HTMLElement);\n    focus(): void;\n    blur(): void;\n    activate(): void;\n    private children;\n    right?: Observable<FocusableItem>;\n    down?: Observable<FocusableItem>;\n    up?: Observable<FocusableItem>;\n    private openAndGetChildren;\n    private closeAndGetThis;\n    resetChildren(): void;\n    addChildren(children: FocusableItem[]): void;\n    ngOnDestroy(): void;\n}\nexport declare const DROPDOWN_FOCUS_HANDLER_PROVIDER: ({\n    provide: import(\"@angular/core\").InjectionToken<string>;\n    useFactory: typeof import(\"../../../utils/id-generator/id-generator.service\").uniqueIdFactory;\n} | import(\"@angular/core\").Type<DropdownFocusHandler> | {\n    provide: typeof FocusableItem;\n    useExisting: import(\"@angular/core\").Type<DropdownFocusHandler>;\n})[];\n"]}