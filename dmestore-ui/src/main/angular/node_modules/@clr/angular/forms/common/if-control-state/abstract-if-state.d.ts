import { Subscription } from 'rxjs';
import { NgControlService } from '../providers/ng-control.service';
import { NgControl } from '@angular/forms';
import { IfControlStateService, CONTROL_STATE } from './if-control-state.service';
import * as ɵngcc0 from '@angular/core';
export declare abstract class AbstractIfState {
    protected ifControlStateService: IfControlStateService;
    protected ngControlService: NgControlService;
    protected subscriptions: Subscription[];
    protected displayedContent: boolean;
    protected control: NgControl;
    constructor(ifControlStateService: IfControlStateService, ngControlService: NgControlService);
    ngOnDestroy(): void;
    protected handleState(state: CONTROL_STATE): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<AbstractIfState, [{ optional: true; }, { optional: true; }]>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<AbstractIfState, never, never, {}, {}, never>;
}

//# sourceMappingURL=abstract-if-state.d.ts.map