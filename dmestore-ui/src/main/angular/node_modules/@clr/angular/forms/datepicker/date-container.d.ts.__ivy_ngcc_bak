import { OnDestroy, AfterViewInit, ElementRef } from '@angular/core';
import { NgControl } from '@angular/forms';
import { ClrPopoverToggleService } from '../../utils/popover/providers/popover-toggle.service';
import { DynamicWrapper } from '../../utils/host-wrapping/dynamic-wrapper';
import { ControlClassService } from '../common/providers/control-class.service';
import { FocusService } from '../common/providers/focus.service';
import { LayoutService } from '../common/providers/layout.service';
import { NgControlService } from '../common/providers/ng-control.service';
import { ClrLabel } from '../common/label';
import { DateFormControlService } from './providers/date-form-control.service';
import { DateNavigationService } from './providers/date-navigation.service';
import { DatepickerEnabledService } from './providers/datepicker-enabled.service';
import { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';
import { ClrPopoverPosition } from '../../utils/popover/interfaces/popover-position.interface';
import { ViewManagerService } from './providers/view-manager.service';
import { IfControlStateService, CONTROL_STATE } from '../common/if-control-state/if-control-state.service';
import { ClrControlSuccess } from '../common/success';
export declare class ClrDateContainer implements DynamicWrapper, OnDestroy, AfterViewInit {
    private toggleService;
    private dateNavigationService;
    private datepickerEnabledService;
    private dateFormControlService;
    commonStrings: ClrCommonStringsService;
    private focusService;
    private viewManagerService;
    private controlClassService;
    private layoutService;
    private ngControlService;
    private ifControlStateService;
    _dynamic: boolean;
    showInvalid: boolean;
    showHelper: boolean;
    focus: boolean;
    showValid: boolean;
    state: CONTROL_STATE;
    control: NgControl;
    label: ClrLabel;
    controlSuccessComponent: ClrControlSuccess;
    set clrPosition(position: string);
    get popoverPosition(): ClrPopoverPosition;
    get open(): boolean;
    private toggleButton;
    set actionButton(button: ElementRef);
    private subscriptions;
    constructor(toggleService: ClrPopoverToggleService, dateNavigationService: DateNavigationService, datepickerEnabledService: DatepickerEnabledService, dateFormControlService: DateFormControlService, commonStrings: ClrCommonStringsService, focusService: FocusService, viewManagerService: ViewManagerService, controlClassService: ControlClassService, layoutService: LayoutService, ngControlService: NgControlService, ifControlStateService: IfControlStateService);
    ngOnInit(): void;
    ngAfterViewInit(): void;
    /**
     * Returns the classes to apply to the control
     */
    controlClass(): string;
    /**
     * Determines if the control needs to add grid classes
     */
    addGrid(): boolean;
    /**
     * Returns if the Datepicker is enabled or not. If disabled, hides the datepicker trigger.
     */
    get isEnabled(): boolean;
    /**
     * Return if Datepicker is diabled or not as Form Control
     */
    get isInputDateDisabled(): boolean;
    /**
     * Processes the user input and Initializes the Calendar everytime the datepicker popover is open.
     */
    private initializeCalendar;
    /**
     * Unsubscribe from subscriptions.
     */
    ngOnDestroy(): void;
}
