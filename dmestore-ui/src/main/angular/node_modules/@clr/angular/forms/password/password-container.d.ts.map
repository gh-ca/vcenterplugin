{"version":3,"file":"password-container.d.ts","sources":["password-container.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { InjectionToken } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { ControlClassService } from '../common/providers/control-class.service';\nimport { FocusService } from '../common/providers/focus.service';\nimport { LayoutService } from '../common/providers/layout.service';\nimport { NgControlService } from '../common/providers/ng-control.service';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { ClrAbstractContainer } from '../common/abstract-container';\nimport { IfControlStateService } from '../common/if-control-state/if-control-state.service';\nexport declare const TOGGLE_SERVICE: InjectionToken<BehaviorSubject<boolean>>;\nexport declare function ToggleServiceFactory(): BehaviorSubject<boolean>;\nexport declare const TOGGLE_SERVICE_PROVIDER: {\n    provide: InjectionToken<BehaviorSubject<boolean>>;\n    useFactory: typeof ToggleServiceFactory;\n};\nexport declare class ClrPasswordContainer extends ClrAbstractContainer {\n    focusService: FocusService;\n    private toggleService;\n    commonStrings: ClrCommonStringsService;\n    show: boolean;\n    focus: boolean;\n    private _toggle;\n    set clrToggle(state: boolean);\n    get clrToggle(): boolean;\n    constructor(ifControlStateService: IfControlStateService, layoutService: LayoutService, controlClassService: ControlClassService, ngControlService: NgControlService, focusService: FocusService, toggleService: BehaviorSubject<boolean>, commonStrings: ClrCommonStringsService);\n    toggle(): void;\n}\n"]}