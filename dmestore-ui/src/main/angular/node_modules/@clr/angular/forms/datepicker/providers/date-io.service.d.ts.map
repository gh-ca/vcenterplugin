{"version":3,"file":"date-io.service.d.ts","sources":["date-io.service.d.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { LocaleHelperService } from './locale-helper.service';\nimport { DateRange } from '../interfaces/date-range.interface';\nexport declare class DateIOService {\n    private _localeHelperService;\n    disabledDates: DateRange;\n    cldrLocaleDateFormat: string;\n    private localeDisplayFormat;\n    private delimiters;\n    constructor(_localeHelperService: LocaleHelperService);\n    setMinDate(date: string): void;\n    setMaxDate(date: string): void;\n    private initializeLocaleDisplayFormat;\n    private extractDelimiters;\n    toLocaleDisplayFormatString(date: Date): string;\n    get placeholderText(): string;\n    /**\n     * Checks if the month entered by the user is valid or not.\n     * Note: Month is 0 based.\n     */\n    private isValidMonth;\n    /**\n     * Checks if the date is valid depending on the year and month provided.\n     */\n    private isValidDate;\n    /**\n     * Validates the parameters provided and returns the date.\n     * If the parameters are not\n     * valid then return null.\n     * NOTE: (Month here is 1 based since the user has provided that as an input)\n     */\n    private validateAndGetDate;\n    getDateValueFromDateString(date: string): Date;\n}\n"]}