{"version":3,"file":"wrapped-control.d.ts","sources":["wrapped-control.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { InjectionToken, Injector, OnInit, Type, ViewContainerRef, Renderer2, ElementRef, OnDestroy, AfterViewInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { DynamicWrapper } from '../../utils/host-wrapping/dynamic-wrapper';\nimport { ControlIdService } from './providers/control-id.service';\nimport { NgControlService } from './providers/ng-control.service';\nimport { NgControl } from '@angular/forms';\nexport declare class WrappedFormControl<W extends DynamicWrapper> implements OnInit, AfterViewInit, OnDestroy {\n    protected vcr: ViewContainerRef;\n    protected wrapperType: Type<W>;\n    private ngControl;\n    protected ngControlService: NgControlService;\n    private ifControlStateService;\n    private controlClassService;\n    private markControlService;\n    protected renderer: Renderer2;\n    protected el: ElementRef<any>;\n    protected subscriptions: Subscription[];\n    protected index: number;\n    protected controlIdService: ControlIdService;\n    _id: string;\n    constructor(vcr: ViewContainerRef, wrapperType: Type<W>, injector: Injector, ngControl: NgControl, renderer: Renderer2, el: ElementRef);\n    get id(): string;\n    set id(value: string);\n    triggerValidation(): void;\n    private _containerInjector;\n    protected getProviderFromContainer<T>(token: Type<T> | InjectionToken<T>, notFoundValue?: T): T;\n    ngOnInit(): void;\n    ngAfterViewInit(): void;\n    ngOnDestroy(): void;\n    private listenForErrorStateChanges;\n    private setAriaDescribedBy;\n    private getAriaDescribedById;\n}\n"]}