{"version":3,"file":"options.d.ts","sources":["options.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { ElementRef, QueryList, AfterViewInit, OnDestroy } from '@angular/core';\nimport { OptionSelectionService } from './providers/option-selection.service';\nimport { AriaService } from '../../utils/aria/aria.service';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { LoadingListener } from '../../utils/loading/loading-listener';\nimport { ClrLoadingState } from '../../utils/loading/loading';\nimport { ClrOption } from './option';\nimport { ComboboxFocusHandler } from './providers/combobox-focus-handler.service';\nimport { ClrPopoverToggleService } from '../../utils/popover/providers/popover-toggle.service';\nexport declare class ClrOptions<T> implements AfterViewInit, LoadingListener, OnDestroy {\n    optionSelectionService: OptionSelectionService<T>;\n    id: number;\n    private ariaService;\n    private el;\n    commonStrings: ClrCommonStringsService;\n    private focusHandler;\n    private toggleService;\n    private document;\n    loading: boolean;\n    private subscriptions;\n    constructor(optionSelectionService: OptionSelectionService<T>, id: number, ariaService: AriaService, el: ElementRef, commonStrings: ClrCommonStringsService, focusHandler: ComboboxFocusHandler<T>, toggleService: ClrPopoverToggleService, parentHost: ElementRef, document: any);\n    searchText(input: string): string;\n    /**\n     * Tests if the list of options is empty, meaning it doesn't contain any items\n     */\n    get emptyOptions(): boolean;\n    set optionsId(id: string);\n    get optionsId(): string;\n    _items: QueryList<ClrOption<T>>;\n    set items(items: QueryList<ClrOption<T>>);\n    get items(): QueryList<ClrOption<T>>;\n    loadingStateChange(state: ClrLoadingState): void;\n    ngAfterViewInit(): void;\n    ngOnDestroy(): void;\n}\n"]}