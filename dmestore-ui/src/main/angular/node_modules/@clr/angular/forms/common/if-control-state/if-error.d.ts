import { TemplateRef, ViewContainerRef } from '@angular/core';
import { NgControlService } from '../providers/ng-control.service';
import { IfControlStateService, CONTROL_STATE } from './if-control-state.service';
import { AbstractIfState } from './abstract-if-state';
import * as ɵngcc0 from '@angular/core';
export declare class ClrIfError extends AbstractIfState {
    private template;
    private container;
    error: string;
    constructor(ifControlStateService: IfControlStateService, ngControlService: NgControlService, template: TemplateRef<any>, container: ViewContainerRef);
    /**
     * @param state CONTROL_STATE
     */
    protected handleState(state: CONTROL_STATE): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ClrIfError, [{ optional: true; }, { optional: true; }, null, null]>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<ClrIfError, "[clrIfError]", never, { "error": "clrIfError"; }, {}, never>;
}

//# sourceMappingURL=if-error.d.ts.map