{"version":3,"file":"date-input.d.ts","sources":["date-input.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { AfterViewInit, ElementRef, EventEmitter, Injector, OnDestroy, OnInit, Renderer2, ViewContainerRef } from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { FocusService } from '../common/providers/focus.service';\nimport { WrappedFormControl } from '../common/wrapped-control';\nimport { ClrDateContainer } from './date-container';\nimport { DateFormControlService } from './providers/date-form-control.service';\nimport { DateIOService } from './providers/date-io.service';\nimport { DateNavigationService } from './providers/date-navigation.service';\nimport { DatepickerEnabledService } from './providers/datepicker-enabled.service';\nimport { DatepickerFocusService } from './providers/datepicker-focus.service';\nexport declare class ClrDateInput extends WrappedFormControl<ClrDateContainer> implements OnInit, AfterViewInit, OnDestroy {\n    protected el: ElementRef;\n    protected renderer: Renderer2;\n    protected control: NgControl;\n    private container;\n    private dateIOService;\n    private dateNavigationService;\n    private datepickerEnabledService;\n    private dateFormControlService;\n    private platformId;\n    private focusService;\n    private datepickerFocusService;\n    static ngAcceptInputType_date: Date | null;\n    placeholder: string;\n    dateChange: EventEmitter<Date>;\n    set date(date: Date);\n    set min(dateString: string);\n    set max(dateString: string);\n    protected index: number;\n    private initialClrDateInputValue;\n    private previousDateChange;\n    constructor(viewContainerRef: ViewContainerRef, injector: Injector, el: ElementRef, renderer: Renderer2, control: NgControl, container: ClrDateContainer, dateIOService: DateIOService, dateNavigationService: DateNavigationService, datepickerEnabledService: DatepickerEnabledService, dateFormControlService: DateFormControlService, platformId: any, focusService: FocusService, datepickerFocusService: DatepickerFocusService);\n    ngOnInit(): void;\n    ngAfterViewInit(): void;\n    setFocusStates(): void;\n    triggerValidation(): void;\n    get placeholderText(): string;\n    get inputType(): string;\n    onValueChange(target: HTMLInputElement): void;\n    set disabled(value: boolean | string);\n    get disabled(): boolean | string;\n    private usingClarityDatepicker;\n    private usingNativeDatepicker;\n    private setFocus;\n    private populateServicesFromContainerComponent;\n    private processInitialInputs;\n    private updateDate;\n    private updateInput;\n    private getValidDateValueFromDate;\n    private emitDateOutput;\n    private datepickerHasFormControl;\n    private listenForControlValueChanges;\n    private listenForUserSelectedDayChanges;\n    private listenForTouchChanges;\n    private listenForDirtyChanges;\n    private listenForInputRefocus;\n}\n"]}