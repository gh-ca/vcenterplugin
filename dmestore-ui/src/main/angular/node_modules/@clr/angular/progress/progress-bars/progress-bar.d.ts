import * as ɵngcc0 from '@angular/core';
export declare class ClrProgressBar {
    /**
     * Handle component ID
     */
    private _ID;
    externalId: string;
    set id(value: string);
    get id(): string;
    max: number;
    displayval: string;
    private _value;
    get value(): number;
    set value(value: number);
    get progressClass(): boolean;
    private _labeled;
    get labeledClass(): boolean;
    set clrLabeled(value: boolean | string);
    private _fade;
    get fadeClass(): boolean;
    set clrFade(value: boolean | string);
    private _loop;
    get loopClass(): boolean;
    set clrLoop(value: boolean | string);
    private _success;
    get successClass(): boolean;
    /** @deprecated since 2.0, remove in 4.0 */
    set clrSuccess(value: boolean | string);
    private _danger;
    get dangerClass(): boolean;
    /** @deprecated since 2.0, remove in 4.0 */
    set clrDanger(value: boolean | string);
    private _flash;
    get flashClass(): boolean;
    set clrFlash(value: boolean | string);
    private _flashDanger;
    get flashDangerClass(): boolean;
    /** @deprecated since 2.0, remove in 4.0 */
    set clrFlashDanger(value: boolean | string);
    /**
     * Display optional text only when labeled is eneabled
     */
    displayStringValue(): boolean;
    /**
     * Make sure that we always will have something that is readable
     * for the screen reader
     */
    get displayValue(): string;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ClrProgressBar, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<ClrProgressBar, "clr-progress-bar", never, { "max": "clrMax"; "id": "id"; "value": "clrValue"; "clrLabeled": "clrLabeled"; "clrFade": "clrFade"; "clrLoop": "clrLoop"; "clrSuccess": "clrSuccess"; "clrDanger": "clrDanger"; "clrFlash": "clrFlash"; "clrFlashDanger": "clrFlashDanger"; "displayval": "clrDisplayval"; }, {}, never, never>;
}

//# sourceMappingURL=progress-bar.d.ts.map