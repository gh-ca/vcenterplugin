{"version":3,"file":"ngx-echarts-core.directive.d.ts","sources":["ngx-echarts-core.directive.d.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { AfterViewInit, DoCheck, ElementRef, EventEmitter, NgZone, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\nimport { EChartOption, ECharts } from 'echarts';\nexport declare class NgxEchartsCoreDirective implements OnChanges, OnDestroy, OnInit, DoCheck, AfterViewInit {\n    private el;\n    private ngZone;\n    options: EChartOption;\n    theme: string;\n    loading: boolean;\n    initOpts: {\n        devicePixelRatio?: number;\n        renderer?: string;\n        width?: number | string;\n        height?: number | string;\n    };\n    merge: EChartOption;\n    autoResize: boolean;\n    loadingType: string;\n    loadingOpts: object;\n    detectEventChanges: boolean;\n    chartInit: EventEmitter<ECharts>;\n    chartClick: EventEmitter<{}>;\n    chartDblClick: EventEmitter<{}>;\n    chartMouseDown: EventEmitter<{}>;\n    chartMouseMove: EventEmitter<{}>;\n    chartMouseUp: EventEmitter<{}>;\n    chartMouseOver: EventEmitter<{}>;\n    chartMouseOut: EventEmitter<{}>;\n    chartGlobalOut: EventEmitter<{}>;\n    chartContextMenu: EventEmitter<{}>;\n    chartLegendSelectChanged: EventEmitter<{}>;\n    chartLegendSelected: EventEmitter<{}>;\n    chartLegendUnselected: EventEmitter<{}>;\n    chartLegendScroll: EventEmitter<{}>;\n    chartDataZoom: EventEmitter<{}>;\n    chartDataRangeSelected: EventEmitter<{}>;\n    chartTimelineChanged: EventEmitter<{}>;\n    chartTimelinePlayChanged: EventEmitter<{}>;\n    chartRestore: EventEmitter<{}>;\n    chartDataViewChanged: EventEmitter<{}>;\n    chartMagicTypeChanged: EventEmitter<{}>;\n    chartPieSelectChanged: EventEmitter<{}>;\n    chartPieSelected: EventEmitter<{}>;\n    chartPieUnselected: EventEmitter<{}>;\n    chartMapSelectChanged: EventEmitter<{}>;\n    chartMapSelected: EventEmitter<{}>;\n    chartMapUnselected: EventEmitter<{}>;\n    chartAxisAreaSelected: EventEmitter<{}>;\n    chartFocusNodeAdjacency: EventEmitter<{}>;\n    chartUnfocusNodeAdjacency: EventEmitter<{}>;\n    chartBrush: EventEmitter<{}>;\n    chartBrushSelected: EventEmitter<{}>;\n    chartRendered: EventEmitter<{}>;\n    chartFinished: EventEmitter<{}>;\n    private chart;\n    private currentOffsetWidth;\n    private currentOffsetHeight;\n    private currentWindowWidth;\n    private resizeSub;\n    constructor(el: ElementRef, ngZone: NgZone);\n    ngOnChanges(changes: SimpleChanges): void;\n    ngOnInit(): void;\n    ngOnDestroy(): void;\n    ngDoCheck(): void;\n    ngAfterViewInit(): void;\n    private dispose;\n    private resize;\n    private toggleLoading;\n    private setOption;\n    private refreshChart;\n    private createChart;\n    private initChart;\n    private onOptionsChange;\n    private createLazyEvent;\n}\n"]}