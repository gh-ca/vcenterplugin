{"version":3,"file":"field.type.d.ts","sources":["field.type.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { OnInit, OnDestroy, AfterViewInit, TemplateRef } from '@angular/core';\nimport { FieldType as CoreFieldType, FormlyFieldConfig } from '@ngx-formly/core';\nimport { Subject } from 'rxjs';\nimport { MatFormField, MatFormFieldControl } from '@angular/material/form-field';\nimport { FormlyErrorStateMatcher } from './formly.error-state-matcher';\nexport declare abstract class FieldType<F extends FormlyFieldConfig = FormlyFieldConfig> extends CoreFieldType<F> implements OnInit, AfterViewInit, OnDestroy, MatFormFieldControl<any> {\n    matPrefix: TemplateRef<any>;\n    matSuffix: TemplateRef<any>;\n    formFieldControl: MatFormFieldControl<any>;\n    errorStateMatcher: FormlyErrorStateMatcher;\n    stateChanges: Subject<void>;\n    _errorState: boolean;\n    private _control;\n    ngOnInit(): void;\n    ngAfterViewInit(): void;\n    ngOnDestroy(): void;\n    setDescribedByIds(ids: string[]): void;\n    onContainerClick(event: MouseEvent): void;\n    readonly errorState: boolean;\n    readonly controlType: string;\n    readonly focused: boolean;\n    readonly disabled: boolean;\n    readonly required: boolean;\n    readonly placeholder: string;\n    readonly shouldPlaceholderFloat: boolean;\n    value: any;\n    readonly ngControl: any;\n    readonly empty: boolean;\n    readonly shouldLabelFloat: boolean;\n    readonly formField: MatFormField;\n}\n"]}