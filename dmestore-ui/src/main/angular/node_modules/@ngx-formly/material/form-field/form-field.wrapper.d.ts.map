{"version":3,"file":"form-field.wrapper.d.ts","sources":["form-field.wrapper.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA","sourcesContent":["import { OnInit, OnDestroy, Renderer2, AfterViewInit, AfterContentChecked, TemplateRef, ElementRef, ViewContainerRef } from '@angular/core';\nimport { FieldWrapper, FormlyFieldConfig, FormlyConfig } from '@ngx-formly/core';\nimport { MatFormField } from '@angular/material/form-field';\nimport { MatFormFieldControl } from '@angular/material/form-field';\nimport { Subject } from 'rxjs';\nimport { FocusMonitor } from '@angular/cdk/a11y';\ninterface MatFormlyFieldConfig extends FormlyFieldConfig {\n    _matprefix: TemplateRef<any>;\n    _matsuffix: TemplateRef<any>;\n    __formField__: FormlyWrapperFormField;\n}\nexport declare class FormlyWrapperFormField extends FieldWrapper<MatFormlyFieldConfig> implements OnInit, OnDestroy, MatFormFieldControl<any>, AfterViewInit, AfterContentChecked {\n    private config;\n    private renderer;\n    private elementRef;\n    private focusMonitor;\n    fieldComponent: ViewContainerRef;\n    formField: MatFormField;\n    stateChanges: Subject<void>;\n    _errorState: boolean;\n    private initialGapCalculated;\n    constructor(config: FormlyConfig, renderer: Renderer2, elementRef: ElementRef, focusMonitor: FocusMonitor);\n    ngOnInit(): void;\n    ngAfterContentChecked(): void;\n    ngAfterViewInit(): void;\n    ngOnDestroy(): void;\n    setDescribedByIds(ids: string[]): void;\n    onContainerClick(event: MouseEvent): void;\n    readonly errorState: boolean;\n    readonly controlType: string | undefined;\n    readonly focused: boolean;\n    readonly disabled: boolean;\n    readonly required: boolean;\n    readonly placeholder: string;\n    readonly shouldPlaceholderFloat: boolean;\n    readonly value: any;\n    readonly ngControl: any;\n    readonly empty: boolean;\n    readonly shouldLabelFloat: boolean;\n    readonly formlyField: MatFormlyFieldConfig;\n}\nexport {};\n"]}