{"version":3,"file":"ngx-formly-material-native-select.js.map","sources":["ng://@ngx-formly/material/native-select/native-select.type.ts","ng://@ngx-formly/material/native-select/native-select.module.ts"],"sourcesContent":["import { Component, ViewChild } from '@angular/core';\nimport { FieldType } from '@ngx-formly/material/form-field';\nimport { MatInput } from '@angular/material/input';\n\n@Component({\n  selector: 'formly-field-mat-native-select',\n  template: `\n    <select matNativeControl\n      [id]=\"id\"\n      [readonly]=\"to.readonly\"\n      [required]=\"to.required\"\n      [errorStateMatcher]=\"errorStateMatcher\"\n      [formControl]=\"formControl\"\n      [formlyAttributes]=\"field\">\n      <option *ngIf=\"to.placeholder\" [ngValue]=\"null\">{{ to.placeholder }}</option>\n      <ng-container *ngIf=\"to.options | formlySelectOptions:field | async as opts\">\n        <ng-container *ngIf=\"to._flatOptions else grouplist\">\n          <ng-container *ngFor=\"let opt of opts\">\n            <option [ngValue]=\"opt.value\" [disabled]=\"opt.disabled\">{{ opt.label }}</option>\n          </ng-container>\n        </ng-container>\n\n        <ng-template #grouplist>\n          <ng-container *ngFor=\"let opt of opts\">\n            <option *ngIf=\"!opt.group else optgroup\" [ngValue]=\"opt.value\" [disabled]=\"opt.disabled\">{{ opt.label }}</option>\n            <ng-template #optgroup>\n              <optgroup [label]=\"opt.label\">\n                <option *ngFor=\"let child of opt.group\" [ngValue]=\"child.value\" [disabled]=\"child.disabled\">\n                  {{ child.label }}\n                </option>\n              </optgroup>\n            </ng-template>\n          </ng-container>\n        </ng-template>\n      </ng-container>\n    </select>\n  `,\n})\nexport class FormlyFieldNativeSelect extends FieldType {\n  @ViewChild(MatInput, <any> { static: true }) formFieldControl!: MatInput;\n  defaultOptions = {\n    templateOptions: {\n      options: [],\n    },\n  };\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormlyModule } from '@ngx-formly/core';\nimport { FormlySelectModule } from '@ngx-formly/core/select';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { FormlyMatFormFieldModule } from '@ngx-formly/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\n\nimport { FormlyFieldNativeSelect } from './native-select.type';\n\n@NgModule({\n  declarations: [FormlyFieldNativeSelect],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    MatInputModule,\n\n    FormlyMatFormFieldModule,\n    FormlySelectModule,\n    FormlyModule.forChild({\n      types: [\n        {\n          name: 'native-select',\n          component: FormlyFieldNativeSelect,\n          wrappers: ['form-field'],\n        },\n      ],\n    }),\n  ],\n})\nexport class FormlyMatNativeSelectModule { }\n"],"names":[],"mappings":";;;;;;;;;;;;AAAA,MAsCa,uBAAwB,SAAQ,SAAS;IAlCtD;;QAoCE,mBAAc,GAAG;YACf,eAAe,EAAE;gBACf,OAAO,EAAE,EAAE;aACZ;SACF,CAAC;KACH;;;YAzCA,SAAS,SAAC;gBACT,QAAQ,EAAE,gCAAgC;gBAC1C,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA8BT;aACF;;;+BAEE,SAAS,SAAC,QAAQ,qBAAQ,EAAE,MAAM,EAAE,IAAI,EAAE;;;;;;;ACvC7C,MA+Ba,2BAA2B;;;YApBvC,QAAQ,SAAC;gBACR,YAAY,EAAE,CAAC,uBAAuB,CAAC;gBACvC,OAAO,EAAE;oBACP,YAAY;oBACZ,mBAAmB;oBACnB,cAAc;oBAEd,wBAAwB;oBACxB,kBAAkB;oBAClB,YAAY,CAAC,QAAQ,CAAC;wBACpB,KAAK,EAAE;4BACL;gCACE,IAAI,EAAE,eAAe;gCACrB,SAAS,EAAE,uBAAuB;gCAClC,QAAQ,EAAE,CAAC,YAAY,CAAC;6BACzB;yBACF;qBACF,CAAC;iBACH;aACF;;;;;;;;;;;;;;;"}
