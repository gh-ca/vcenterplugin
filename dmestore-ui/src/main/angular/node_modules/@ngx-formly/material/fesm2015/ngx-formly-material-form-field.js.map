{"version":3,"file":"ngx-formly-material-form-field.js.map","sources":["ng://@ngx-formly/material/form-field/formly.error-state-matcher.ts","ng://@ngx-formly/material/form-field/field.type.ts","ng://@ngx-formly/material/form-field/form-field.wrapper.ts","ng://@ngx-formly/material/form-field/form-field.module.ts"],"sourcesContent":["import { FormControl, FormGroupDirective, NgForm } from '@angular/forms';\nimport { ErrorStateMatcher } from '@angular/material/core';\nimport { FieldType } from '@ngx-formly/core';\n\nexport class FormlyErrorStateMatcher implements ErrorStateMatcher {\n  constructor(private field: FieldType) {}\n\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    return this.field && this.field.showError;\n  }\n}\n","import { OnInit, OnDestroy, AfterViewInit, TemplateRef, ViewChild, Type } from '@angular/core';\nimport { FieldType as CoreFieldType, ÉµdefineHiddenProp as defineHiddenProp, FormlyFieldConfig } from '@ngx-formly/core';\nimport { Subject } from 'rxjs';\nimport { MatFormField, MatFormFieldControl } from '@angular/material/form-field';\nimport { FormlyErrorStateMatcher } from './formly.error-state-matcher';\n\nexport abstract class FieldType<F extends FormlyFieldConfig = FormlyFieldConfig> extends CoreFieldType<F> implements OnInit, AfterViewInit, OnDestroy, MatFormFieldControl<any> {\n  @ViewChild('matPrefix') matPrefix!: TemplateRef<any>;\n  @ViewChild('matSuffix') matSuffix!: TemplateRef<any>;\n\n  get formFieldControl() { return this._control || this; }\n  set formFieldControl(control: MatFormFieldControl<any>) {\n    this._control = control;\n    if (this.formField && control !== this.formField._control) {\n      this.formField._control = control;\n    }\n  }\n\n  errorStateMatcher = new FormlyErrorStateMatcher(this);\n  stateChanges = new Subject<void>();\n  _errorState = false;\n  private _control!: MatFormFieldControl<any>;\n\n  ngOnInit() {\n    if (this.formField) {\n      this.formField._control = this.formFieldControl;\n    }\n  }\n\n  ngAfterViewInit() {\n    if (this.matPrefix || this.matSuffix) {\n      setTimeout(() => {\n        defineHiddenProp(this.field, '_matprefix', this.matPrefix);\n        defineHiddenProp(this.field, '_matsuffix', this.matSuffix);\n        (<any> this.options)._markForCheck(this.field);\n      });\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.formField) {\n      delete this.formField._control;\n    }\n    this.stateChanges.complete();\n  }\n\n  setDescribedByIds(ids: string[]): void { }\n  onContainerClick(event: MouseEvent): void {\n    this.field.focus = true;\n    this.stateChanges.next();\n  }\n\n  get errorState() {\n    const showError = this.options!.showError!(this);\n    if (showError !== this._errorState) {\n      this._errorState = showError;\n      this.stateChanges.next();\n    }\n\n    return showError;\n  }\n\n  get controlType() {\n    if (this.to.type) {\n      return this.to.type;\n    }\n\n    if ((<any> this.field.type) instanceof Type) {\n      return this.field.type!.constructor.name;\n    }\n\n    return this.field.type!;\n  }\n  get focused() { return !!this.field.focus && !this.disabled; }\n  get disabled() { return !!this.to.disabled; }\n  get required() { return !!this.to.required; }\n  get placeholder() { return this.to.placeholder || ''; }\n  get shouldPlaceholderFloat() { return this.shouldLabelFloat; }\n  get value() { return this.formControl.value; }\n  set value(value) { this.formControl.patchValue(value); }\n  get ngControl() { return this.formControl as any; }\n  get empty() { return this.value === undefined || this.value === null || this.value === ''; }\n  get shouldLabelFloat() { return this.focused || !this.empty; }\n  get formField(): MatFormField { return this.field ? (<any>this.field)['__formField__'] : null; }\n}\n","import { Component, ViewChild, OnInit, OnDestroy, Renderer2, AfterViewInit, AfterContentChecked, TemplateRef, ElementRef, ViewContainerRef } from '@angular/core';\nimport { FieldWrapper, ÉµdefineHiddenProp as defineHiddenProp, FormlyFieldConfig, FormlyConfig } from '@ngx-formly/core';\nimport { MatFormField } from '@angular/material/form-field';\nimport { MatFormFieldControl } from '@angular/material/form-field';\nimport { Subject } from 'rxjs';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { FieldType } from './field.type';\n\ninterface MatFormlyFieldConfig extends FormlyFieldConfig {\n  _matprefix: TemplateRef<any>;\n  _matsuffix: TemplateRef<any>;\n  __formField__: FormlyWrapperFormField;\n}\n\n@Component({\n  selector: 'formly-wrapper-mat-form-field',\n  template: `\n    <!-- fix https://github.com/angular/material2/pull/7083 by setting width to 100% -->\n    <mat-form-field\n      [hideRequiredMarker]=\"true\"\n      [floatLabel]=\"to.floatLabel\"\n      [appearance]=\"to.appearance\"\n      [color]=\"to.color\"\n      [style.width]=\"'100%'\">\n      <ng-container #fieldComponent></ng-container>\n      <mat-label *ngIf=\"to.label && to.hideLabel !== true\">\n        {{ to.label }}\n        <span *ngIf=\"to.required && to.hideRequiredMarker !== true\" class=\"mat-form-field-required-marker\">*</span>\n      </mat-label>\n\n      <ng-container matPrefix>\n        <ng-container *ngTemplateOutlet=\"to.prefix ? to.prefix : formlyField._matprefix\"></ng-container>\n      </ng-container>\n\n      <ng-container matSuffix>\n        <ng-container *ngTemplateOutlet=\"to.suffix ? to.suffix : formlyField._matsuffix\"></ng-container>\n      </ng-container>\n\n      <!-- fix https://github.com/angular/material2/issues/7737 by setting id to null  -->\n      <mat-error [id]=\"null\">\n        <formly-validation-message [field]=\"field\"></formly-validation-message>\n      </mat-error>\n      <!-- fix https://github.com/angular/material2/issues/7737 by setting id to null  -->\n      <mat-hint *ngIf=\"to.description\" [id]=\"null\">{{ to.description }}</mat-hint>\n    </mat-form-field>\n  `,\n  providers: [{ provide: MatFormFieldControl, useExisting: FormlyWrapperFormField }],\n})\nexport class FormlyWrapperFormField extends FieldWrapper<MatFormlyFieldConfig> implements OnInit, OnDestroy, MatFormFieldControl<any>, AfterViewInit, AfterContentChecked {\n  // TODO: remove `any`, once dropping angular `V7` support.\n  @ViewChild('fieldComponent', <any>{ read: ViewContainerRef, static: true }) fieldComponent!: ViewContainerRef;\n\n  // TODO: remove `any`, once dropping angular `V7` support.\n  @ViewChild(MatFormField, <any> { static: true }) formField!: MatFormField;\n\n  stateChanges = new Subject<void>();\n  _errorState = false;\n  private initialGapCalculated = false;\n\n  constructor(\n    private config: FormlyConfig,\n    private renderer: Renderer2,\n    private elementRef: ElementRef,\n    private focusMonitor: FocusMonitor,\n  ) {\n    super();\n  }\n\n  ngOnInit() {\n    this.formField._control = this;\n    defineHiddenProp(this.field, '__formField__', this.formField);\n\n    const ref = this.config.resolveFieldTypeRef(this.formlyField);\n    if (ref && !(ref.instance instanceof FieldType)) {\n      console.warn(`Component '${ref.componentType.name}' must extend 'FieldType' from '@ngx-formly/material/form-field'.`);\n    }\n\n    // fix for https://github.com/angular/material2/issues/11437\n    if (this.formlyField.hide && this.formlyField.templateOptions!.appearance === 'outline') {\n      this.initialGapCalculated = true;\n    }\n\n    this.focusMonitor.monitor(this.elementRef, true).subscribe(origin => {\n      if (!origin && this.field.focus) {\n        this.field.focus = false;\n      }\n\n      this.stateChanges.next();\n    });\n  }\n\n  ngAfterContentChecked() {\n    if (!this.initialGapCalculated || this.formlyField.hide) {\n      return;\n    }\n\n    this.formField.updateOutlineGap();\n    this.initialGapCalculated = true;\n  }\n\n  ngAfterViewInit() {\n    // temporary fix for https://github.com/angular/material2/issues/7891\n    if (this.formField.appearance !== 'outline' && this.to.hideFieldUnderline === true) {\n      const underlineElement = this.formField._elementRef.nativeElement.querySelector('.mat-form-field-underline');\n      underlineElement && this.renderer.removeChild(underlineElement.parentNode, underlineElement);\n    }\n  }\n\n  ngOnDestroy() {\n    delete this.formlyField.__formField__;\n    this.stateChanges.complete();\n    this.focusMonitor.stopMonitoring(this.elementRef);\n  }\n\n  setDescribedByIds(ids: string[]): void { }\n  onContainerClick(event: MouseEvent): void {\n    this.formlyField.focus = true;\n    this.stateChanges.next();\n  }\n\n  get errorState() {\n    const showError = this.options!.showError!(this);\n    if (showError !== this._errorState) {\n      this._errorState = showError;\n      this.stateChanges.next();\n    }\n\n    return showError;\n  }\n  get controlType() { return this.to.type; }\n  get focused() { return !!this.formlyField.focus && !this.disabled; }\n  get disabled() { return !!this.to.disabled; }\n  get required() { return !!this.to.required; }\n  get placeholder() { return this.to.placeholder || ''; }\n  get shouldPlaceholderFloat() { return this.shouldLabelFloat; }\n  get value() { return this.formControl.value; }\n  get ngControl() { return this.formControl as any; }\n  get empty() { return !this.formControl.value; }\n  get shouldLabelFloat() { return this.focused || !this.empty; }\n\n  get formlyField() { return this.field as MatFormlyFieldConfig; }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormlyModule } from '@ngx-formly/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { FormlyWrapperFormField } from './form-field.wrapper';\n\n@NgModule({\n  declarations: [FormlyWrapperFormField],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    FormlyModule.forChild({\n      wrappers: [{\n        name: 'form-field',\n        component: FormlyWrapperFormField,\n      }],\n    }),\n  ],\n})\nexport class FormlyMatFormFieldModule { }\n"],"names":["FieldType","CoreFieldType","defineHiddenProp"],"mappings":"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"}
