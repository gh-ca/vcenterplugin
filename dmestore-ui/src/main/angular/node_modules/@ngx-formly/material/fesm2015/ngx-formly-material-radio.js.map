{"version":3,"file":"ngx-formly-material-radio.js.map","sources":["ng://@ngx-formly/material/radio/radio.type.ts","ng://@ngx-formly/material/radio/radio.module.ts"],"sourcesContent":["import { Component, ViewChild, AfterViewInit, OnDestroy } from '@angular/core';\nimport { FieldType } from '@ngx-formly/material/form-field';\nimport { MatRadioGroup } from '@angular/material/radio';\nimport { ÉµwrapProperty as wrapProperty } from '@ngx-formly/core';\n\n@Component({\n  selector: 'formly-field-mat-radio',\n  template: `\n    <mat-radio-group\n      [formControl]=\"formControl\"\n      [formlyAttributes]=\"field\"\n      [required]=\"to.required\"\n      [tabindex]=\"to.tabindex\">\n      <mat-radio-button *ngFor=\"let option of to.options | formlySelectOptions:field | async; let i = index;\"\n        [id]=\"id + '_' + i\"\n        [color]=\"to.color\"\n        [labelPosition]=\"to.labelPosition\"\n        [value]=\"option.value\">\n        {{ option.label }}\n      </mat-radio-button>\n    </mat-radio-group>\n  `,\n})\nexport class FormlyFieldRadio extends FieldType implements AfterViewInit, OnDestroy {\n  @ViewChild(MatRadioGroup) radioGroup!: MatRadioGroup;\n  defaultOptions = {\n    templateOptions: {\n      hideFieldUnderline: true,\n      floatLabel: 'always',\n      options: [],\n      tabindex: -1,\n    },\n  };\n\n  private focusObserver!: Function;\n  ngAfterViewInit() {\n    this.focusObserver = wrapProperty(this.field, 'focus', ({ currentValue }) => {\n      if (\n        this.to.tabindex === -1\n        && currentValue\n        && this.radioGroup._radios.length > 0\n      ) {\n        const radio = this.radioGroup.selected\n          ? this.radioGroup.selected\n          : this.radioGroup._radios.first;\n\n        radio.focus();\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.focusObserver && this.focusObserver();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormlyModule } from '@ngx-formly/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormlySelectModule } from '@ngx-formly/core/select';\n\nimport { FormlyMatFormFieldModule } from '@ngx-formly/material/form-field';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { FormlyFieldRadio } from './radio.type';\n\n@NgModule({\n  declarations: [FormlyFieldRadio],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    MatRadioModule,\n\n    FormlyMatFormFieldModule,\n    FormlySelectModule,\n    FormlyModule.forChild({\n      types: [{\n        name: 'radio',\n        component: FormlyFieldRadio,\n        wrappers: ['form-field'],\n      }],\n    }),\n  ],\n})\nexport class FormlyMatRadioModule { }\n"],"names":["wrapProperty"],"mappings":";;;;;;;;;;;;AAAA,MAuBa,gBAAiB,SAAQ,SAAS;IAlB/C;;QAoBE,mBAAc,GAAG;YACf,eAAe,EAAE;gBACf,kBAAkB,EAAE,IAAI;gBACxB,UAAU,EAAE,QAAQ;gBACpB,OAAO,EAAE,EAAE;gBACX,QAAQ,EAAE,CAAC,CAAC;aACb;SACF,CAAC;KAsBH;;;;IAnBC,eAAe;QACb,IAAI,CAAC,aAAa,GAAGA,aAAY,CAAC,IAAI,CAAC,KAAK,EAAE,OAAO;;;;QAAE,CAAC,EAAE,YAAY,EAAE;YACtE,IACE,IAAI,CAAC,EAAE,CAAC,QAAQ,KAAK,CAAC,CAAC;mBACpB,YAAY;mBACZ,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EACrC;;sBACM,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ;sBAClC,IAAI,CAAC,UAAU,CAAC,QAAQ;sBACxB,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,KAAK;gBAEjC,KAAK,CAAC,KAAK,EAAE,CAAC;aACf;SACF,EAAC,CAAC;KACJ;;;;IAED,WAAW;QACT,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,aAAa,EAAE,CAAC;KAC5C;;;YAhDF,SAAS,SAAC;gBACT,QAAQ,EAAE,wBAAwB;gBAClC,QAAQ,EAAE;;;;;;;;;;;;;;GAcT;aACF;;;yBAEE,SAAS,SAAC,aAAa;;;;;;;ACxB1B,MA6Ba,oBAAoB;;;YAlBhC,QAAQ,SAAC;gBACR,YAAY,EAAE,CAAC,gBAAgB,CAAC;gBAChC,OAAO,EAAE;oBACP,YAAY;oBACZ,mBAAmB;oBACnB,cAAc;oBAEd,wBAAwB;oBACxB,kBAAkB;oBAClB,YAAY,CAAC,QAAQ,CAAC;wBACpB,KAAK,EAAE,CAAC;gCACN,IAAI,EAAE,OAAO;gCACb,SAAS,EAAE,gBAAgB;gCAC3B,QAAQ,EAAE,CAAC,YAAY,CAAC;6BACzB,CAAC;qBACH,CAAC;iBACH;aACF;;;;;;;;;;;;;;;"}
