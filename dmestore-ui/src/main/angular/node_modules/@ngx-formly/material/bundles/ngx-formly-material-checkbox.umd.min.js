!function(e,r){"object"==typeof exports&&"undefined"!=typeof module?r(exports,require("@angular/common"),require("@ngx-formly/core"),require("@angular/forms"),require("@angular/core"),require("@ngx-formly/material/form-field"),require("@angular/material/checkbox")):"function"==typeof define&&define.amd?define("@ngx-formly/material/checkbox",["exports","@angular/common","@ngx-formly/core","@angular/forms","@angular/core","@ngx-formly/material/form-field","@angular/material/checkbox"],r):r((e["ngx-formly"]=e["ngx-formly"]||{},e["ngx-formly"].material=e["ngx-formly"].material||{},e["ngx-formly"].material.checkbox={}),e.ng.common,e.core,e.ng.forms,e.ng.core,e["ngx-formly"].material["form-field"],e.ng.material.checkbox)}(this,function(e,r,o,t,n,i,a){"use strict";var l=function(e,r){return(l=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,r){e.__proto__=r}||function(e,r){for(var o in r)r.hasOwnProperty(o)&&(e[o]=r[o])})(e,r)};var c=function(o){function e(e){var r=o.call(this)||this;return r.renderer=e,r.defaultOptions={templateOptions:{hideFieldUnderline:!0,indeterminate:!0,floatLabel:"always",hideLabel:!0,align:"start",color:"accent"}},r}return function t(e,r){function o(){this.constructor=e}l(e,r),e.prototype=null===r?Object.create(r):(o.prototype=r.prototype,new o)}(e,o),e.prototype.onContainerClick=function(e){this.checkbox.focus(),o.prototype.onContainerClick.call(this,e)},e.prototype.ngAfterViewChecked=function(){if(this.required!==this._required&&this.checkbox&&this.checkbox._inputElement){this._required=this.required;var e=this.checkbox._inputElement.nativeElement;this.required?this.renderer.setAttribute(e,"required","required"):this.renderer.removeAttribute(e,"required")}},e.decorators=[{type:n.Component,args:[{selector:"formly-field-mat-checkbox",template:'\n    <mat-checkbox\n      [formControl]="formControl"\n      [id]="id"\n      [formlyAttributes]="field"\n      [tabindex]="to.tabindex"\n      [indeterminate]="to.indeterminate && formControl.value === null"\n      [color]="to.color"\n      [labelPosition]="to.align || to.labelPosition">\n      {{ to.label }}\n      <span *ngIf="to.required && to.hideRequiredMarker !== true" class="mat-form-field-required-marker">*</span>\n    </mat-checkbox>\n  '}]}],e.ctorParameters=function(){return[{type:n.Renderer2}]},e.propDecorators={checkbox:[{type:n.ViewChild,args:[a.MatCheckbox]}]},e}(i.FieldType),m=function(){function e(){}return e.decorators=[{type:n.NgModule,args:[{declarations:[c],imports:[r.CommonModule,t.ReactiveFormsModule,a.MatCheckboxModule,i.FormlyMatFormFieldModule,o.FormlyModule.forChild({types:[{name:"checkbox",component:c,wrappers:["form-field"]}]})]}]}],e}();e.FormlyMatCheckboxModule=m,e.FormlyFieldCheckbox=c,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=ngx-formly-material-checkbox.umd.min.js.map