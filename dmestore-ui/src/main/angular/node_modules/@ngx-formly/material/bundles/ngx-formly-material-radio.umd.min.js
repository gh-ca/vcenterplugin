!function(o,r){"object"==typeof exports&&"undefined"!=typeof module?r(exports,require("@angular/common"),require("@angular/forms"),require("@ngx-formly/core/select"),require("@angular/core"),require("@ngx-formly/material/form-field"),require("@angular/material/radio"),require("@ngx-formly/core")):"function"==typeof define&&define.amd?define("@ngx-formly/material/radio",["exports","@angular/common","@angular/forms","@ngx-formly/core/select","@angular/core","@ngx-formly/material/form-field","@angular/material/radio","@ngx-formly/core"],r):r((o["ngx-formly"]=o["ngx-formly"]||{},o["ngx-formly"].material=o["ngx-formly"].material||{},o["ngx-formly"].material.radio={}),o.ng.common,o.ng.forms,o.select,o.ng.core,o["ngx-formly"].material["form-field"],o.ng.material.radio,o.core$1)}(this,function(o,r,e,t,n,i,a,l){"use strict";var u=function(o,r){return(u=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(o,r){o.__proto__=r}||function(o,r){for(var e in r)r.hasOwnProperty(e)&&(o[e]=r[e])})(o,r)};var d=function(r){function o(){var o=null!==r&&r.apply(this,arguments)||this;return o.defaultOptions={templateOptions:{hideFieldUnderline:!0,floatLabel:"always",options:[],tabindex:-1}},o}return function t(o,r){function e(){this.constructor=o}u(o,r),o.prototype=null===r?Object.create(r):(e.prototype=r.prototype,new e)}(o,r),o.prototype.ngAfterViewInit=function(){var e=this;this.focusObserver=l.ÉµwrapProperty(this.field,"focus",function(o){var r=o.currentValue;-1===e.to.tabindex&&r&&0<e.radioGroup._radios.length&&(e.radioGroup.selected?e.radioGroup.selected:e.radioGroup._radios.first).focus()})},o.prototype.ngOnDestroy=function(){this.focusObserver&&this.focusObserver()},o.decorators=[{type:n.Component,args:[{selector:"formly-field-mat-radio",template:'\n    <mat-radio-group\n      [formControl]="formControl"\n      [formlyAttributes]="field"\n      [required]="to.required"\n      [tabindex]="to.tabindex">\n      <mat-radio-button *ngFor="let option of to.options | formlySelectOptions:field | async; let i = index;"\n        [id]="id + \'_\' + i"\n        [color]="to.color"\n        [labelPosition]="to.labelPosition"\n        [value]="option.value">\n        {{ option.label }}\n      </mat-radio-button>\n    </mat-radio-group>\n  '}]}],o.propDecorators={radioGroup:[{type:n.ViewChild,args:[a.MatRadioGroup]}]},o}(i.FieldType),f=function(){function o(){}return o.decorators=[{type:n.NgModule,args:[{declarations:[d],imports:[r.CommonModule,e.ReactiveFormsModule,a.MatRadioModule,i.FormlyMatFormFieldModule,t.FormlySelectModule,l.FormlyModule.forChild({types:[{name:"radio",component:d,wrappers:["form-field"]}]})]}]}],o}();o.FormlyMatRadioModule=f,o.FormlyFieldRadio=d,Object.defineProperty(o,"__esModule",{value:!0})});
//# sourceMappingURL=ngx-formly-material-radio.umd.min.js.map