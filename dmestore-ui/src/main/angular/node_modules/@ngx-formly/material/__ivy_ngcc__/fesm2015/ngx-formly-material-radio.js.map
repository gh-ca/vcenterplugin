{"version":3,"file":"ngx-formly-material-radio.js","sources":["ng:/@ngx-formly/material/radio/radio.type.ts","ng:/@ngx-formly/material/radio/radio.module.ts"],"names":["wrapProperty"],"mappings":"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","sourcesContent":["import { Component, ViewChild, AfterViewInit, OnDestroy } from '@angular/core';\nimport { FieldType } from '@ngx-formly/material/form-field';\nimport { MatRadioGroup } from '@angular/material/radio';\nimport { ÉµwrapProperty as wrapProperty } from '@ngx-formly/core';\n\n@Component({\n  selector: 'formly-field-mat-radio',\n  template: `\n    <mat-radio-group\n      [formControl]=\"formControl\"\n      [formlyAttributes]=\"field\"\n      [required]=\"to.required\"\n      [tabindex]=\"to.tabindex\">\n      <mat-radio-button *ngFor=\"let option of to.options | formlySelectOptions:field | async; let i = index;\"\n        [id]=\"id + '_' + i\"\n        [color]=\"to.color\"\n        [labelPosition]=\"to.labelPosition\"\n        [value]=\"option.value\">\n        {{ option.label }}\n      </mat-radio-button>\n    </mat-radio-group>\n  `,\n})\nexport class FormlyFieldRadio extends FieldType implements AfterViewInit, OnDestroy {\n  @ViewChild(MatRadioGroup) radioGroup!: MatRadioGroup;\n  defaultOptions = {\n    templateOptions: {\n      hideFieldUnderline: true,\n      floatLabel: 'always',\n      options: [],\n      tabindex: -1,\n    },\n  };\n\n  private focusObserver!: Function;\n  ngAfterViewInit() {\n    this.focusObserver = wrapProperty(this.field, 'focus', ({ currentValue }) => {\n      if (\n        this.to.tabindex === -1\n        && currentValue\n        && this.radioGroup._radios.length > 0\n      ) {\n        const radio = this.radioGroup.selected\n          ? this.radioGroup.selected\n          : this.radioGroup._radios.first;\n\n        radio.focus();\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.focusObserver && this.focusObserver();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormlyModule } from '@ngx-formly/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormlySelectModule } from '@ngx-formly/core/select';\n\nimport { FormlyMatFormFieldModule } from '@ngx-formly/material/form-field';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { FormlyFieldRadio } from './radio.type';\n\n@NgModule({\n  declarations: [FormlyFieldRadio],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    MatRadioModule,\n\n    FormlyMatFormFieldModule,\n    FormlySelectModule,\n    FormlyModule.forChild({\n      types: [{\n        name: 'radio',\n        component: FormlyFieldRadio,\n        wrappers: ['form-field'],\n      }],\n    }),\n  ],\n})\nexport class FormlyMatRadioModule { }\n"]}