{"version":3,"file":"ngx-formly-core-select.js","sources":["ng:/@ngx-formly/core/select/select-options.pipe.ts","ng:/@ngx-formly/core/select/select.module.ts"],"names":["observableOf"],"mappings":"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":["import { Pipe, PipeTransform } from '@angular/core';\nimport { Observable, of as observableOf } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { FormlyFieldConfig } from '@ngx-formly/core';\n\n@Pipe({ name: 'formlySelectOptions' })\nexport class FormlySelectOptionsPipe implements PipeTransform {\n  transform(options, field?: FormlyFieldConfig) {\n    if (!(options instanceof Observable)) {\n      options = observableOf(options);\n    }\n\n    return (options as Observable<any>).pipe(\n      map(value => this.toOptions(value, field || {})),\n    );\n  }\n\n  private toOptions(options, field: FormlyFieldConfig) {\n    const gOptions: any[] = [],\n      groups: { [key: string]: any[] } = {},\n      to = field.templateOptions || {};\n\n    to._flatOptions = true;\n    options.map((option: any) => {\n      if (!this.getGroupProp(option, to)) {\n        gOptions.push(this.toOption(option, to));\n      } else {\n        to._flatOptions = false;\n        if (!groups[this.getGroupProp(option, to)]) {\n          groups[this.getGroupProp(option, to)] = [];\n          gOptions.push({\n            label: this.getGroupProp(option, to),\n            group: groups[this.getGroupProp(option, to)],\n          });\n        }\n        groups[this.getGroupProp(option, to)].push(this.toOption(option, to));\n      }\n    });\n\n    return gOptions;\n  }\n\n  private toOption(item, to) {\n    return {\n      label: this.getLabelProp(item, to),\n      value: this.getValueProp(item, to),\n      disabled: this.getDisabledProp(item, to) || false,\n    };\n  }\n\n  private getLabelProp(item, to): string {\n    if (typeof to.labelProp === 'function') {\n      return to.labelProp(item);\n    }\n\n    if (this.shouldUseLegacyOption(item, to)) {\n      console.warn(`NgxFormly: legacy select option '{key, value}' is deprecated since v5.5, use '{value, label}' instead.`);\n      return item.value;\n    }\n\n    return item[to.labelProp || 'label'];\n  }\n\n  private getValueProp(item, to): string {\n    if (typeof to.valueProp === 'function') {\n      return to.valueProp(item);\n    }\n\n    if (this.shouldUseLegacyOption(item, to)) {\n      return item.key;\n    }\n\n    return item[to.valueProp || 'value'];\n  }\n\n  private getDisabledProp(item, to): string {\n    if (typeof to.disabledProp === 'function') {\n      return to.disabledProp(item);\n    }\n    return item[to.disabledProp || 'disabled'];\n  }\n\n  private getGroupProp(item, to): string {\n    if (typeof to.groupProp === 'function') {\n      return to.groupProp(item);\n    }\n\n    return item[to.groupProp || 'group'];\n  }\n\n  private shouldUseLegacyOption(item, to) {\n    return !to.valueProp\n      && !to.labelProp\n      && item != null\n      && typeof item === 'object'\n      && 'key' in item\n      && 'value' in item;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { FormlySelectOptionsPipe } from './select-options.pipe';\n\n@NgModule({\n  declarations: [FormlySelectOptionsPipe],\n  exports: [FormlySelectOptionsPipe],\n})\nexport class FormlySelectModule { }\n"]}