{"version":3,"file":"ngx-formly-core.js","sources":["ng:/@ngx-formly/core/lib/utils.ts","ng:/@ngx-formly/core/lib/services/formly.config.ts","ng:/@ngx-formly/core/lib/services/formly.form.builder.ts","ng:/@ngx-formly/core/lib/components/formly.form.ts","ng:/@ngx-formly/core/lib/components/formly.field.ts","ng:/@ngx-formly/core/lib/components/formly.attributes.ts","ng:/@ngx-formly/core/lib/templates/field.type.ts","ng:/@ngx-formly/core/lib/extensions/field-form/utils.ts","ng:/@ngx-formly/core/lib/templates/field-array.type.ts","ng:/@ngx-formly/core/lib/templates/field.wrapper.ts","ng:/@ngx-formly/core/lib/templates/formly.group.ts","ng:/@ngx-formly/core/lib/templates/formly.validation-message.ts","ng:/@ngx-formly/core/lib/templates/field-template.type.ts","ng:/@ngx-formly/core/lib/extensions/field-expression/utils.ts","ng:/@ngx-formly/core/lib/extensions/field-expression/field-expression.ts","ng:/@ngx-formly/core/lib/extensions/field-validation/field-validation.ts","ng:/@ngx-formly/core/lib/extensions/field-form/field-form.ts","ng:/@ngx-formly/core/lib/extensions/core/core.ts","ng:/@ngx-formly/core/lib/core.module.ts"],"names":["updateValidity","updateControlValidity"],"mappings":"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A,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AACA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AACA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AACA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AACA,AAAA,AACA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAxKA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAVA,AAAA,AAHA,AAAA,AADA,AAAA,AACA,AAAA,AA4CA,AAAA,AAAA,AAAA,AA7BA,AAAA,AAIA,AAAA,AAIA,AAAA,AAIA,AAAA,AAIA,AAAA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,ACpCA,AAaA,AAAA,AAkCA,AACA,AAAA,AACA,AAAA,AACA,AAAA,AAFA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AA/BA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AACA,AAAA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AAAA,AAOA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AACA,AAAA,AAWA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAVA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAUA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AACA,AAAA,AACA,AACA,AAAA,AAAA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AACA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AACA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AACA,AAUA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AACA,AACA,AAAA,AAAA,AACA,AAEA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AACA,AAEA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AACA,AAEA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AACA,AAEA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AACA,AAEA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AACA,AAEA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AA1LA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AACA,AAZA,AAAA,AAAA,AAAA,AAkDA,AAAA,AAAA,AAAA,AApCA,AAAA,AAAA,AAAA,AACA,AAAA,ACfzBA,AAAA,AAGA,AAAA,AAIA,AAAA,AAIA,AAAA,AAoBA,AAAA,AAAA,AAAA,AAAA,AACA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AACA,ACzCA,AAMA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AACA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AACA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AACA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AACA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAIA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AACA,AAKA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AACA,AC5JA,AASA,AAAA,AAAA,AAAA,AAAA,AAMA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AALA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAKA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AACA,AAEA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA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","sourcesContent":["import { FormlyFieldConfig } from './core';\nimport { isObservable } from 'rxjs';\nimport { AbstractControl } from '@angular/forms';\nimport { FormlyFieldConfigCache } from './components/formly.field.config';\n\nexport function getFieldId(formId: string, field: FormlyFieldConfig, index: string|number) {\n  if (field.id) return field.id;\n  let type = field.type;\n  if (!type && field.template) type = 'template';\n  return [formId, type, field.key, index].join('_');\n}\n\nexport function getKeyPath(field: FormlyFieldConfigCache): string[] {\n  if (!field.key) {\n    return [];\n  }\n\n  /* We store the keyPath in the field for performance reasons. This function will be called frequently. */\n  if (!field._keyPath || field._keyPath.key !== field.key) {\n    let path: string[] = [];\n    if (typeof field.key === 'string') {\n      const key = field.key.indexOf('[') === -1\n        ? field.key\n        : field.key.replace(/\\[(\\w+)\\]/g, '.$1');\n      path = key.indexOf('.') !== -1 ? key.split('.') : [key];\n    } else if (Array.isArray(field.key)) {\n      path = field.key.slice(0);\n    } else {\n      path = [`${field.key}`];\n    }\n\n    field._keyPath = { key: field.key, path };\n  }\n\n  return field._keyPath.path.slice(0);\n}\n\nexport const FORMLY_VALIDATORS = ['required', 'pattern', 'minLength', 'maxLength', 'min', 'max'];\n\nexport function assignFieldValue(field: FormlyFieldConfigCache, value: any) {\n  let paths = getKeyPath(field);\n  while (field.parent) {\n    field = field.parent;\n    paths = [...getKeyPath(field), ...paths];\n  }\n\n  if (value == null && field['autoClear'] && !field.formControl.parent) {\n    const k = paths.pop();\n    const m = paths.reduce((model, path) => model[path] || {}, field.parent.model);\n    delete m[k];\n    return;\n  }\n\n  assignModelValue(field.model, paths, value);\n}\n\nexport function assignModelValue(model: any, paths: string[], value: any) {\n  for (let i = 0; i < (paths.length - 1); i++) {\n    const path = paths[i];\n    if (!model[path] || !isObject(model[path])) {\n      model[path] = /^\\d+$/.test(paths[i + 1]) ? [] : {};\n    }\n\n    model = model[path];\n  }\n\n  model[paths[paths.length - 1]] = clone(value);\n}\n\nexport function getFieldInitialValue(field: FormlyFieldConfig) {\n  let value = field.options['_initialModel'];\n  let paths = getKeyPath(field);\n  while (field.parent) {\n    field = field.parent;\n    paths = [...getKeyPath(field), ...paths];\n  }\n\n  for (const path of paths) {\n    if (!value) {\n      return undefined;\n    }\n    value = value[path];\n  }\n\n  return value;\n}\n\nexport function getFieldValue(field: FormlyFieldConfig): any {\n  let model = field.parent.model;\n  for (const path of getKeyPath(field)) {\n    if (!model) {\n      return model;\n    }\n    model = model[path];\n  }\n\n  return model;\n}\n\nexport function reverseDeepMerge(dest: any, ...args: any[]) {\n  args.forEach(src => {\n    for (let srcArg in src) {\n      if (isNullOrUndefined(dest[srcArg]) || isBlankString(dest[srcArg])) {\n        dest[srcArg] = clone(src[srcArg]);\n      } else if (objAndSameType(dest[srcArg], src[srcArg])) {\n        reverseDeepMerge(dest[srcArg], src[srcArg]);\n      }\n    }\n  });\n  return dest;\n}\n\nexport function isNullOrUndefined(value: any) {\n  return value === undefined || value === null;\n}\n\nexport function isUndefined(value: any) {\n  return value === undefined;\n}\n\nexport function isBlankString(value: any) {\n  return value === '';\n}\n\nexport function isFunction(value: any) {\n  return typeof(value) === 'function';\n}\n\nexport function objAndSameType(obj1: any, obj2: any) {\n  return isObject(obj1) && isObject(obj2)\n    && Object.getPrototypeOf(obj1) === Object.getPrototypeOf(obj2)\n    && !(Array.isArray(obj1) || Array.isArray(obj2));\n}\n\nexport function isObject(x: any) {\n  return x != null && typeof x === 'object';\n}\n\nexport function isPromise(obj: any): obj is Promise<any> {\n  return !!obj && typeof obj.then === 'function';\n}\n\nexport function clone(value: any): any {\n  if (\n    !isObject(value)\n    || isObservable(value)\n    || /* instanceof SafeHtmlImpl */ value.changingThisBreaksApplicationSecurity\n    || ['RegExp', 'FileList', 'File', 'Blob'].indexOf(value.constructor.name) !== -1\n  ) {\n    return value;\n  }\n\n  // https://github.com/moment/moment/blob/master/moment.js#L252\n  if (value._isAMomentObject && isFunction(value.clone)) {\n    return value.clone();\n  }\n\n  if (value instanceof AbstractControl) {\n    return null;\n  }\n\n  if (value instanceof Date) {\n    return new Date(value.getTime());\n  }\n\n  if (Array.isArray(value)) {\n    return value.slice(0).map(v => clone(v));\n  }\n\n  // best way to clone a js object maybe\n  // https://stackoverflow.com/questions/41474986/how-to-clone-a-javascript-es6-class-instance\n  const proto = Object.getPrototypeOf(value);\n  let c = Object.create(proto);\n  c = Object.setPrototypeOf(c, proto);\n  // need to make a deep copy so we dont use Object.assign\n  // also Object.assign wont copy property descriptor exactly\n  return Object.keys(value).reduce((newVal, prop) => {\n    const propDesc = Object.getOwnPropertyDescriptor(value, prop);\n    if (propDesc.get) {\n      Object.defineProperty(newVal, prop, propDesc);\n    } else {\n      newVal[prop] = clone(value[prop]);\n    }\n\n    return newVal;\n  }, c);\n}\n\nexport function defineHiddenProp(field: any, prop: string, defaultValue: any) {\n  Object.defineProperty(field, prop, { enumerable: false, writable: true, configurable: true });\n  field[prop] = defaultValue;\n}\n\nexport function wrapProperty<T = any>(\n  o: any,\n  prop: string,\n  setFn: (change: {currentValue: T, previousValue?: T, firstChange: boolean}) => void,\n) {\n  if (!o._observers) {\n    defineHiddenProp(o, '_observers', {});\n  }\n\n  if (!o._observers[prop]) {\n    o._observers[prop] = [];\n  }\n\n  let fns: typeof setFn[] = o._observers[prop];\n  if (fns.indexOf(setFn) === -1) {\n    fns.push(setFn);\n    setFn({ currentValue: o[prop], firstChange: true });\n    if (fns.length === 1) {\n      defineHiddenProp(o, `___$${prop}`, o[prop]);\n      Object.defineProperty(o, prop, {\n        configurable: true,\n        get: () => o[`___$${prop}`],\n        set: currentValue => {\n          if (currentValue !== o[`___$${prop}`]) {\n            const previousValue = o[`___$${prop}`];\n            o[`___$${prop}`] = currentValue;\n            fns.forEach(changeFn => changeFn({ previousValue, currentValue, firstChange: false }));\n          }\n        },\n      });\n    }\n  }\n\n  return () => fns.splice(fns.indexOf(setFn), 1);\n}\n\nexport function reduceFormUpdateValidityCalls(form: any, action: Function) {\n  const updateValidity = form._updateTreeValidity.bind(form);\n\n  let updateValidityArgs = { called: false, emitEvent: false };\n  form._updateTreeValidity = ({ emitEvent } = { emitEvent: true }) => updateValidityArgs = { called: true, emitEvent: emitEvent || updateValidityArgs.emitEvent };\n  action();\n\n  updateValidityArgs.called && updateValidity({ emitEvent: updateValidityArgs.emitEvent });\n  form._updateTreeValidity = updateValidity;\n}\n","import { Injectable, InjectionToken, ComponentRef } from '@angular/core';\nimport { ValidationErrors, AbstractControl } from '@angular/forms';\nimport { FieldType } from './../templates/field.type';\nimport { reverseDeepMerge, defineHiddenProp } from './../utils';\nimport { FormlyFieldConfig, FormlyFieldConfigCache } from '../components/formly.field.config';\nimport { Observable } from 'rxjs';\n\nexport const FORMLY_CONFIG = new InjectionToken<FormlyConfig>('FORMLY_CONFIG');\n\n/** @experimental */\nexport interface FormlyExtension {\n  prePopulate?(field: FormlyFieldConfig): void;\n  onPopulate?(field: FormlyFieldConfig): void;\n  postPopulate?(field: FormlyFieldConfig): void;\n}\n\n/**\n * Maintains list of formly field directive types. This can be used to register new field templates.\n */\n@Injectable({ providedIn: 'root' })\nexport class FormlyConfig {\n  types: {[name: string]: TypeOption} = {};\n  validators: { [name: string]: ValidatorOption } = {};\n  wrappers: { [name: string]: WrapperOption } = {};\n  messages: { [name: string]: ValidationMessageOption['message'] } = {};\n  templateManipulators: {\n    preWrapper: ManipulatorWrapper[];\n    postWrapper: ManipulatorWrapper[];\n  } = {\n    preWrapper: [],\n    postWrapper: [],\n  };\n  extras: ConfigOption['extras'] = {\n    checkExpressionOn: 'changeDetectionCheck',\n    showError: function(field: FieldType) {\n      return field.formControl && field.formControl.invalid && (field.formControl.touched || (field.options.parentForm && field.options.parentForm.submitted) || !!(field.field.validation && field.field.validation.show));\n    },\n  };\n  extensions: { [name: string]: FormlyExtension } = {};\n\n  addConfig(config: ConfigOption) {\n    if (config.types) {\n      config.types.forEach(type => this.setType(type));\n    }\n    if (config.validators) {\n      config.validators.forEach(validator => this.setValidator(validator));\n    }\n    if (config.wrappers) {\n      config.wrappers.forEach(wrapper => this.setWrapper(wrapper));\n    }\n    if (config.manipulators) {\n      console.warn(`NgxFormly: passing 'manipulators' config is deprecated, use custom extension instead.`);\n      config.manipulators.forEach(manipulator => this.setManipulator(manipulator));\n    }\n    if (config.validationMessages) {\n      config.validationMessages.forEach(validation => this.addValidatorMessage(validation.name, validation.message));\n    }\n    if (config.extensions) {\n      config.extensions.forEach(c => this.extensions[c.name] = c.extension);\n    }\n    if (config.extras) {\n      this.extras = { ...this.extras, ...config.extras };\n    }\n  }\n\n  setType(options: TypeOption | TypeOption[]) {\n    if (Array.isArray(options)) {\n      options.forEach((option) => this.setType(option));\n    } else {\n      if (!this.types[options.name]) {\n        this.types[options.name] = <TypeOption>{ name: options.name };\n      }\n\n      ['component', 'extends', 'defaultOptions'].forEach(prop => {\n        if (options.hasOwnProperty(prop)) {\n          this.types[options.name][prop] = options[prop];\n        }\n      });\n\n      if (options.wrappers) {\n        options.wrappers.forEach((wrapper) => this.setTypeWrapper(options.name, wrapper));\n      }\n    }\n  }\n\n  getType(name: string): TypeOption {\n    if (!this.types[name]) {\n      throw new Error(`[Formly Error] The type \"${name}\" could not be found. Please make sure that is registered through the FormlyModule declaration.`);\n    }\n\n    this.mergeExtendedType(name);\n\n    return this.types[name];\n  }\n\n  getMergedField(field: FormlyFieldConfig = {}): any {\n    const type = this.getType(field.type);\n    if (type.defaultOptions) {\n      reverseDeepMerge(field, type.defaultOptions);\n    }\n\n    const extendDefaults = type.extends && this.getType(type.extends).defaultOptions;\n    if (extendDefaults) {\n      reverseDeepMerge(field, extendDefaults);\n    }\n\n    if (field && field.optionsTypes) {\n      field.optionsTypes.forEach(option => {\n        const defaultOptions = this.getType(option).defaultOptions;\n        if (defaultOptions) {\n          reverseDeepMerge(field, defaultOptions);\n        }\n      });\n    }\n\n    const componentRef = this.resolveFieldTypeRef(field);\n    if (componentRef && componentRef.instance && componentRef.instance.defaultOptions) {\n      reverseDeepMerge(field, componentRef.instance.defaultOptions);\n    }\n\n    if (!field.wrappers && type.wrappers) {\n      field.wrappers = [...type.wrappers];\n    }\n  }\n\n  /** @internal */\n  resolveFieldTypeRef(field: FormlyFieldConfigCache = {}): ComponentRef<FieldType> {\n    if (!field.type) {\n      return null;\n    }\n\n    const type = this.getType(field.type);\n    if (!type.component || type['_componentRef']) {\n      return type['_componentRef'];\n    }\n\n    const { _resolver, _injector } = field.parent.options;\n    defineHiddenProp(\n      type,\n      '_componentRef',\n      _resolver.resolveComponentFactory<FieldType>(type.component).create(_injector),\n    );\n\n    return type['_componentRef'];\n  }\n\n  setWrapper(options: WrapperOption) {\n    this.wrappers[options.name] = options;\n    if (options.types) {\n      options.types.forEach((type) => {\n        this.setTypeWrapper(type, options.name);\n      });\n    }\n  }\n\n  getWrapper(name: string): WrapperOption {\n    if (!this.wrappers[name]) {\n      throw new Error(`[Formly Error] The wrapper \"${name}\" could not be found. Please make sure that is registered through the FormlyModule declaration.`);\n    }\n\n    return this.wrappers[name];\n  }\n\n  setTypeWrapper(type: string, name: string) {\n    if (!this.types[type]) {\n      this.types[type] = <TypeOption>{};\n    }\n    if (!this.types[type].wrappers) {\n      this.types[type].wrappers = [];\n    }\n    if (this.types[type].wrappers.indexOf(name) === -1) {\n      this.types[type].wrappers.push(name);\n    }\n  }\n\n  setValidator(options: ValidatorOption) {\n    this.validators[options.name] = options;\n  }\n\n  getValidator(name: string): ValidatorOption {\n    if (!this.validators[name]) {\n      throw new Error(`[Formly Error] The validator \"${name}\" could not be found. Please make sure that is registered through the FormlyModule declaration.`);\n    }\n\n    return this.validators[name];\n  }\n\n  addValidatorMessage(name: string, message: ValidationMessageOption['message']) {\n    this.messages[name] = message;\n  }\n\n  getValidatorMessage(name: string) {\n    return this.messages[name];\n  }\n\n  setManipulator(manipulator: ManipulatorOption) {\n    new manipulator.class()[manipulator.method](this);\n  }\n\n  private mergeExtendedType(name: string) {\n    if (!this.types[name].extends) {\n      return;\n    }\n\n    const extendedType = this.getType(this.types[name].extends);\n    if (!this.types[name].component) {\n      this.types[name].component = extendedType.component;\n    }\n\n    if (!this.types[name].wrappers) {\n      this.types[name].wrappers = extendedType.wrappers;\n    }\n  }\n}\nexport interface TypeOption {\n  name: string;\n  component?: any;\n  wrappers?: string[];\n  extends?: string;\n  defaultOptions?: FormlyFieldConfig;\n}\n\nexport interface WrapperOption {\n  name: string;\n  component: any;\n  types?: string[];\n}\n\nexport interface FieldValidatorFn {\n  (c: AbstractControl, field: FormlyFieldConfig, options?: { [id: string]: any; }): ValidationErrors | null;\n}\n\nexport interface ValidatorOption {\n  name: string;\n  validation: FieldValidatorFn;\n  options?: { [id: string]: any };\n}\n\nexport interface ExtensionOption {\n  name: string;\n  extension: FormlyExtension;\n}\n\nexport interface ValidationMessageOption {\n  name: string;\n  message: string | ((error: any, field: FormlyFieldConfig) => string | Observable<string>);\n}\n\nexport interface ManipulatorOption {\n  class?: { new (): any };\n  method?: string;\n}\n\nexport interface ManipulatorWrapper {\n  (f: FormlyFieldConfig): string;\n}\n\nexport interface TemplateManipulators {\n  preWrapper?: ManipulatorWrapper[];\n  postWrapper?: ManipulatorWrapper[];\n}\n\nexport interface ConfigOption {\n  types?: TypeOption[];\n  wrappers?: WrapperOption[];\n  validators?: ValidatorOption[];\n  extensions?: ExtensionOption[];\n  validationMessages?: ValidationMessageOption[];\n\n  /** @deprecated use `extensions` instead */\n  manipulators?: ManipulatorOption[];\n  extras?: {\n    /** @deprecated use `extensions` instead */\n    fieldTransform?: any,\n    immutable?: boolean,\n    showError?: (field: FieldType) => boolean;\n\n    /**\n     * Defines the option which formly rely on to check field expression properties.\n     * - `modelChange`: perform a check when the value of the form control changes.\n     * - `changeDetectionCheck`: triggers an immediate check when `ngDoCheck` is called.\n    */\n    checkExpressionOn?: 'modelChange' | 'changeDetectionCheck',\n  };\n}\n","import { Injectable, ComponentFactoryResolver, Injector, ChangeDetectorRef } from '@angular/core';\nimport { FormGroup, FormArray } from '@angular/forms';\nimport { FormlyConfig } from './formly.config';\nimport { FormlyFieldConfig, FormlyFormOptions, FormlyFieldConfigCache, FormlyValueChangeEvent, FormlyFormOptionsCache } from '../components/formly.field.config';\nimport { Subject } from 'rxjs';\nimport { defineHiddenProp, reduceFormUpdateValidityCalls } from '../utils';\n\n@Injectable({ providedIn: 'root' })\nexport class FormlyFormBuilder {\n  constructor(\n    private formlyConfig: FormlyConfig,\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private injector: Injector,\n  ) {}\n\n  buildForm(formControl: FormGroup | FormArray, fieldGroup: FormlyFieldConfig[] = [], model: any, options: FormlyFormOptions) {\n    if (!this.formlyConfig.extensions.core) {\n      throw new Error('NgxFormly: missing `forRoot()` call. use `forRoot()` when registering the `FormlyModule`.');\n    }\n\n    const field = { fieldGroup, model, formControl, options: this._setOptions(options) };\n    reduceFormUpdateValidityCalls(formControl, () => this._buildForm(field));\n    field.options._checkField(field, true);\n  }\n\n  private _buildForm(field: FormlyFieldConfigCache) {\n    this.getExtensions().forEach(extension => extension.prePopulate && extension.prePopulate(field));\n    this.getExtensions().forEach(extension => extension.onPopulate && extension.onPopulate(field));\n\n    if (field.fieldGroup) {\n      field.fieldGroup.forEach((f) => this._buildForm(f));\n    }\n\n    this.getExtensions().forEach(extension => extension.postPopulate && extension.postPopulate(field));\n  }\n\n  private getExtensions() {\n    return Object.keys(this.formlyConfig.extensions).map(name => this.formlyConfig.extensions[name]);\n  }\n\n  private _setOptions(options: FormlyFormOptionsCache) {\n    options = options || {};\n    options.formState = options.formState || {};\n\n    if (!options.showError) {\n      options.showError = this.formlyConfig.extras.showError;\n    }\n\n    if (!options.fieldChanges) {\n      defineHiddenProp(options, 'fieldChanges', new Subject<FormlyValueChangeEvent>());\n    }\n\n    if (!options._resolver) {\n      defineHiddenProp(options, '_resolver', this.componentFactoryResolver);\n    }\n\n    if (!options._injector) {\n      defineHiddenProp(options, '_injector', this.injector);\n    }\n\n    if (!options._hiddenFieldsForCheck) {\n      options._hiddenFieldsForCheck = [];\n    }\n\n    if (!options._markForCheck) {\n      options._markForCheck = (field) => {\n        if (field._componentRefs) {\n          field._componentRefs.forEach(ref => {\n            // NOTE: we cannot use ref.changeDetectorRef, see https://github.com/ngx-formly/ngx-formly/issues/2191\n            const changeDetectorRef = ref.injector.get(ChangeDetectorRef);\n            changeDetectorRef.markForCheck();\n          });\n        }\n\n        if (field.fieldGroup) {\n          field.fieldGroup.forEach(f => options._markForCheck(f));\n        }\n      };\n    }\n\n    if (!options._buildField) {\n      options._buildField = (field: FormlyFieldConfig) => {\n        this.buildForm(field.form, field.fieldGroup, field.model, field.options);\n        return field;\n      };\n    }\n\n    return options;\n  }\n}\n","import { Component, DoCheck, OnChanges, Input, SimpleChanges, Optional, EventEmitter, Output, OnDestroy, Attribute, ViewChild, ElementRef, NgZone } from '@angular/core';\nimport { FormGroup, FormArray, FormGroupDirective, FormControl } from '@angular/forms';\nimport { FormlyFieldConfig, FormlyFormOptions, FormlyFormOptionsCache } from './formly.field.config';\nimport { FormlyFormBuilder } from '../services/formly.form.builder';\nimport { FormlyConfig } from '../services/formly.config';\nimport { assignFieldValue, isNullOrUndefined, wrapProperty, clone, defineHiddenProp, getKeyPath } from '../utils';\nimport { Subscription, Subject } from 'rxjs';\nimport { debounceTime, switchMap, distinctUntilChanged, take } from 'rxjs/operators';\n\n@Component({\n  selector: 'formly-form',\n  template: `\n    <formly-field *ngFor=\"let field of fields\"\n      hide-deprecation\n      [form]=\"field.form\"\n      [options]=\"field.options\"\n      [model]=\"field.model\"\n      [field]=\"field\">\n    </formly-field>\n    <ng-container #content>\n      <ng-content></ng-content>\n    </ng-container>\n  `,\n  providers: [FormlyFormBuilder],\n})\nexport class FormlyForm implements DoCheck, OnChanges, OnDestroy {\n  @Input() form: FormGroup | FormArray;\n\n  @Input()\n  set model(model: any) { this._model = this.immutable ? clone(model) : model; }\n  get model() { return this._model || {}; }\n\n  @Input()\n  set fields(fields: FormlyFieldConfig[]) { this._fields = this.immutable ? clone(fields) : fields; }\n  get fields() { return this._fields || []; }\n\n  @Input()\n  set options(options: FormlyFormOptions) { this._options = this.immutable ? clone(options) : options; }\n  get options() { return this._options; }\n\n  @Output() modelChange = new EventEmitter<any>();\n  @ViewChild('content') set content(content: ElementRef<HTMLElement>) {\n    if (content && content.nativeElement.nextSibling) {\n      console.warn(`NgxFormly: content projection for 'formly-form' component is deprecated since v5.5, you should avoid passing content inside the 'formly-form' tag.`);\n    }\n  }\n\n  private immutable = false;\n  private _model: any;\n  private _modelChangeValue: any = {};\n  private _fields: FormlyFieldConfig[];\n  private _options: FormlyFormOptions;\n  private modelChangeSubs: Subscription[] = [];\n  private modelChange$ = new Subject<void>();\n  private modelChangeSub = this.modelChange$.pipe(\n    switchMap(() => this.ngZone.onStable.asObservable().pipe(take(1))),\n  ).subscribe(() => this.ngZone.runGuarded(() => {\n    // runGuarded is used to keep the expression changes in-sync\n    // https://github.com/ngx-formly/ngx-formly/issues/2095\n    this.checkExpressionChange();\n    this.modelChange.emit(this._modelChangeValue = clone(this.model));\n  }));\n\n  constructor(\n    private formlyBuilder: FormlyFormBuilder,\n    private formlyConfig: FormlyConfig,\n    private ngZone: NgZone,\n    // tslint:disable-next-line\n    @Attribute('immutable') immutable,\n    @Optional() private parentFormGroup: FormGroupDirective,\n  ) {\n    if (immutable !== null) {\n      console.warn(`NgxFormly: passing 'immutable' attribute to 'formly-form' component is deprecated since v5.5, enable immutable mode through NgModule declaration instead.`);\n    }\n\n    this.immutable = (immutable !== null) || !!formlyConfig.extras.immutable;\n  }\n\n  ngDoCheck() {\n    if (this.formlyConfig.extras.checkExpressionOn === 'changeDetectionCheck') {\n      this.checkExpressionChange();\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    // https://github.com/ngx-formly/ngx-formly/issues/2294\n    if (changes.model && this.field) {\n      this.field.model = this.model;\n    }\n\n    if (changes.fields || changes.form || (changes.model && this._modelChangeValue !== changes.model.currentValue)) {\n      this.form = this.form || (new FormGroup({}));\n      this.setOptions();\n      this.options.updateInitialValue();\n      this.clearModelSubscriptions();\n      this.formlyBuilder.buildForm(this.form, this.fields, this.model, this.options);\n      this.trackModelChanges(this.fields);\n    }\n  }\n\n  ngOnDestroy() {\n    this.modelChangeSub.unsubscribe();\n    this.clearModelSubscriptions();\n  }\n\n  changeModel({ key, value, field }: { key: string, value: any, field: FormlyFieldConfig }) {\n    assignFieldValue(field, value);\n    this.modelChange$.next();\n  }\n\n  setOptions() {\n    if (!this.options) {\n      this.options = {};\n    }\n\n    if (!this.options.resetModel) {\n      this.options.resetModel = (model ?: any) => {\n        model = clone(isNullOrUndefined(model) ? (<FormlyFormOptionsCache> this.options)._initialModel : model);\n        if (this.model) {\n          Object.keys(this.model).forEach(k => delete this.model[k]);\n          Object.assign(this.model, model || {});\n        }\n\n        (<FormlyFormOptionsCache> this.options)._buildForm();\n\n        // we should call `NgForm::resetForm` to ensure changing `submitted` state after resetting form\n        // but only when the current component is a root one.\n        if (this.options.parentForm && this.options.parentForm.control === this.form) {\n          this.options.parentForm.resetForm(model);\n        } else {\n          this.form.reset(model);\n        }\n      };\n    }\n\n    if (!this.options.parentForm && this.parentFormGroup) {\n      defineHiddenProp(this.options, 'parentForm', this.parentFormGroup);\n      wrapProperty(this.options.parentForm, 'submitted', ({ firstChange }) => {\n        if (!firstChange) {\n          this.checkExpressionChange();\n          (<FormlyFormOptionsCache> this.options)._markForCheck({\n            fieldGroup: this.fields,\n            model: this.model,\n            formControl: this.form,\n            options: this.options,\n          });\n        }\n      });\n    }\n\n    if (!this.options.updateInitialValue) {\n      this.options.updateInitialValue = () => (<FormlyFormOptionsCache> this.options)._initialModel = clone(this.model);\n    }\n\n    if (!(<FormlyFormOptionsCache> this.options)._buildForm) {\n      (<FormlyFormOptionsCache> this.options)._buildForm = (emitModelChange = false) => {\n        this.clearModelSubscriptions();\n        this.formlyBuilder.buildForm(this.form, this.fields, this.model, this.options);\n        this.trackModelChanges(this.fields);\n\n        if (emitModelChange) {\n          this.modelChange.emit(this._modelChangeValue = clone(this.model));\n        }\n      };\n    }\n  }\n\n  private checkExpressionChange() {\n    if (this.options && (<FormlyFormOptionsCache> this.options)._checkField) {\n      (<FormlyFormOptionsCache> this.options)._checkField({\n        fieldGroup: this.fields,\n        model: this.model,\n        formControl: this.form,\n        options: this.options,\n      });\n    }\n  }\n\n  private trackModelChanges(fields: FormlyFieldConfig[], rootKey: string[] = []) {\n    fields.forEach(field => {\n      if (field.key && !field.fieldGroup) {\n        const control = field.formControl;\n        let valueChanges = control.valueChanges.pipe(distinctUntilChanged());\n\n        const { updateOn, debounce } = field.modelOptions;\n        if ((!updateOn || updateOn === 'change') && debounce && debounce.default > 0) {\n          valueChanges = control.valueChanges.pipe(debounceTime(debounce.default));\n        }\n\n        this.modelChangeSubs.push(valueChanges.subscribe((value) => {\n          // workaround for https://github.com/angular/angular/issues/13792\n          if (control instanceof FormControl && control['_fields'] && control['_fields'].length > 1) {\n            control.patchValue(value, { emitEvent: false, onlySelf: true });\n          }\n\n          if (field.parsers && field.parsers.length > 0) {\n            field.parsers.forEach(parserFn => value = parserFn(value));\n          }\n\n          this.changeModel({ key: [...rootKey, ...getKeyPath(field)].join('.'), value, field });\n        }));\n\n        // workaround for v5 (https://github.com/ngx-formly/ngx-formly/issues/2061)\n        const observers = control.valueChanges['observers'];\n        if (observers && observers.length > 1) {\n          observers.unshift(observers.pop());\n        }\n      }\n\n      if (field.fieldGroup && field.fieldGroup.length > 0) {\n        this.trackModelChanges(field.fieldGroup, field.key ? [...rootKey, ...getKeyPath(field)] : rootKey);\n      }\n    });\n  }\n\n  private clearModelSubscriptions() {\n    this.modelChangeSubs.forEach(sub => sub.unsubscribe());\n    this.modelChangeSubs = [];\n  }\n\n  private get field(): any {\n    return this.fields && this.fields[0] && this.fields[0].parent;\n  }\n}\n","import {\n  Component, EventEmitter, Input, Output,\n  ViewContainerRef, ViewChild, ComponentRef, SimpleChanges, Attribute, ComponentFactoryResolver,\n  OnInit, OnChanges, OnDestroy, DoCheck, AfterContentInit, AfterContentChecked, AfterViewInit, AfterViewChecked, Renderer2, ElementRef,\n} from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { FormlyConfig } from '../services/formly.config';\nimport { FormlyFieldConfig, FormlyFormOptions, FormlyFieldConfigCache } from './formly.field.config';\nimport { defineHiddenProp, wrapProperty } from '../utils';\nimport { FieldWrapper } from '../templates/field.wrapper';\nimport { FieldType } from '../templates/field.type';\nimport { isObservable } from 'rxjs';\n\n@Component({\n  selector: 'formly-field',\n  template: `<ng-template #container></ng-template>`,\n})\nexport class FormlyField implements OnInit, OnChanges, DoCheck, AfterContentInit, AfterContentChecked, AfterViewInit, AfterViewChecked, OnDestroy {\n  @Input() field: FormlyFieldConfig;\n\n  warnDeprecation = false;\n\n  @Input() set model(m: any) {\n    this.warnDeprecation && console.warn(`NgxFormly: passing 'model' input to '${this.constructor.name}' component is not required anymore, you may remove it!`);\n  }\n\n  @Input() set form(form: FormGroup) {\n    this.warnDeprecation && console.warn(`NgxFormly: passing 'form' input to '${this.constructor.name}' component is not required anymore, you may remove it!`);\n  }\n\n  @Input() set options(options: FormlyFormOptions) {\n    this.warnDeprecation && console.warn(`NgxFormly: passing 'options' input to '${this.constructor.name}' component is not required anymore, you may remove it!`);\n  }\n\n  @Output() modelChange: EventEmitter<any> = new EventEmitter();\n  // TODO: remove `any`, once dropping angular `V7` support.\n  @ViewChild('container', <any> {read: ViewContainerRef, static: true }) containerRef: ViewContainerRef;\n  private hostObservers: Function[] = [];\n  private componentRefs: any[] = [];\n  private hooksObservers: Function[] = [];\n\n  constructor(\n    private formlyConfig: FormlyConfig,\n    private renderer: Renderer2,\n    private resolver: ComponentFactoryResolver,\n    private elementRef: ElementRef,\n    // tslint:disable-next-line\n    @Attribute('hide-deprecation') hideDeprecation,\n  ) {\n    this.warnDeprecation = hideDeprecation === null;\n  }\n\n  ngAfterContentInit() {\n    this.triggerHook('afterContentInit');\n  }\n\n  ngAfterContentChecked() {\n    this.triggerHook('afterContentChecked');\n  }\n\n  ngAfterViewInit() {\n    this.triggerHook('afterViewInit');\n  }\n\n  ngAfterViewChecked() {\n    this.triggerHook('afterViewChecked');\n  }\n\n  ngDoCheck() {\n    this.triggerHook('doCheck');\n  }\n\n  ngOnInit() {\n    this.triggerHook('onInit');\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.triggerHook('onChanges', changes);\n  }\n\n  ngOnDestroy() {\n    this.resetRefs(this.field);\n    this.hostObservers.forEach(unsubscribe => unsubscribe());\n    this.hooksObservers.forEach(unsubscribe => unsubscribe());\n    this.triggerHook('onDestroy');\n  }\n\n  private renderField(containerRef: ViewContainerRef, f: FormlyFieldConfigCache, wrappers: string[]) {\n    if (this.containerRef === containerRef) {\n      this.resetRefs(this.field);\n      this.containerRef.clear();\n    }\n\n    if (wrappers && wrappers.length > 0) {\n      const [wrapper, ...wps] = wrappers;\n      const { component } = this.formlyConfig.getWrapper(wrapper);\n\n      const ref = containerRef.createComponent<FieldWrapper>(this.resolver.resolveComponentFactory(component));\n      this.attachComponentRef(ref, f);\n      wrapProperty<ViewContainerRef>(ref.instance, 'fieldComponent', ({ firstChange, previousValue, currentValue }) => {\n        if (currentValue) {\n          const viewRef = previousValue ? previousValue.detach() : null;\n          if (viewRef && !viewRef.destroyed) {\n            currentValue.insert(viewRef);\n          } else {\n            this.renderField(currentValue, f, wps);\n          }\n\n          !firstChange && ref.changeDetectorRef.detectChanges();\n        }\n      });\n    } else if (f && f.type) {\n      const { component } = this.formlyConfig.getType(f.type);\n      const ref = containerRef.createComponent<FieldWrapper>(this.resolver.resolveComponentFactory(component));\n      this.attachComponentRef(ref, f);\n    }\n  }\n\n  private triggerHook(name: string, changes?: SimpleChanges) {\n    if (this.field && this.field.hooks && this.field.hooks[name]) {\n      if (!changes || changes.field) {\n        const r = this.field.hooks[name](this.field);\n        if (isObservable(r) && ['onInit', 'afterContentInit', 'afterViewInit'].indexOf(name) !== -1) {\n          const sub = r.subscribe();\n          this.hooksObservers.push(() => sub.unsubscribe());\n        }\n      }\n    }\n\n    if (this.field && this.field.lifecycle && this.field.lifecycle[name]) {\n      this.field.lifecycle[name](\n        this.field.form,\n        this.field,\n        this.field.model,\n        this.field.options,\n      );\n    }\n\n    if (name === 'onChanges' && changes.field) {\n      this.renderHostBinding();\n      this.resetRefs(changes.field.previousValue);\n      this.renderField(this.containerRef, this.field, this.field ? this.field.wrappers : []);\n    }\n  }\n\n  private attachComponentRef<T extends FieldType>(ref: ComponentRef<T>, field: FormlyFieldConfigCache) {\n    this.componentRefs.push(ref);\n    field._componentRefs.push(ref);\n    Object.assign(ref.instance, { field });\n  }\n\n  private renderHostBinding() {\n    if (!this.field) {\n      return;\n    }\n\n    this.hostObservers.forEach(unsubscribe => unsubscribe());\n    this.hostObservers = [\n      wrapProperty(this.field, 'hide', ({ firstChange, currentValue }) => {\n        if (!firstChange || (firstChange && currentValue)) {\n          this.renderer.setStyle(this.elementRef.nativeElement, 'display', currentValue ? 'none' : '');\n        }\n      }),\n      wrapProperty(this.field, 'className', ({ firstChange, currentValue }) => {\n        if (!firstChange || (firstChange && currentValue)) {\n          this.renderer.setAttribute(this.elementRef.nativeElement, 'class', currentValue);\n        }\n      }),\n    ];\n  }\n\n  private resetRefs(field: FormlyFieldConfigCache) {\n    if (field) {\n      if (field._componentRefs) {\n        field._componentRefs = field._componentRefs.filter(ref => this.componentRefs.indexOf(ref) === -1);\n      } else {\n        defineHiddenProp(this.field, '_componentRefs', []);\n      }\n    }\n\n    this.componentRefs = [];\n  }\n}\n","import { Directive, ElementRef, Input, OnChanges, SimpleChanges, Renderer2, DoCheck, Inject, OnDestroy } from '@angular/core';\nimport { FormlyFieldConfig, FormlyTemplateOptions } from './formly.field.config';\nimport { wrapProperty, defineHiddenProp, FORMLY_VALIDATORS } from '../utils';\nimport { DOCUMENT } from '@angular/common';\n\n@Directive({\n  selector: '[formlyAttributes]',\n  host: {\n    '(focus)': 'onFocus($event)',\n    '(blur)': 'onBlur($event)',\n    '(change)': 'onChange($event)',\n  },\n})\nexport class FormlyAttributes implements OnChanges, DoCheck, OnDestroy {\n  @Input('formlyAttributes') field: FormlyFieldConfig;\n  @Input() id: string;\n\n  private document: Document;\n  private uiAttributesCache: any = {};\n  private uiAttributes = [\n    ...FORMLY_VALIDATORS,\n    'tabindex',\n    'placeholder',\n    'readonly',\n    'disabled',\n    'step',\n  ];\n\n  /**\n   * HostBinding doesn't register listeners conditionally which may produce some perf issues.\n   *\n   * Formly issue: https://github.com/ngx-formly/ngx-formly/issues/1991\n   */\n  private uiEvents = {\n    listeners: [],\n    events: [\n      'click',\n      'keyup',\n      'keydown',\n      'keypress',\n    ],\n  };\n\n  get to(): FormlyTemplateOptions { return this.field.templateOptions || {}; }\n\n  private get fieldAttrElements(): ElementRef[] { return (this.field && this.field['_elementRefs']) || []; }\n\n  constructor(\n    private renderer: Renderer2,\n    private elementRef: ElementRef,\n    @Inject(DOCUMENT) _document: any,\n  ) {\n    this.document = _document;\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.field) {\n      this.field.name && this.setAttribute('name', this.field.name);\n      this.uiEvents.listeners.forEach(listener => listener());\n      this.uiEvents.events.forEach(eventName => {\n        if (this.to && this.to[eventName]) {\n          this.uiEvents.listeners.push(\n            this.renderer.listen(\n              this.elementRef.nativeElement,\n              eventName,\n              (e) => this.to[eventName](this.field, e),\n            ),\n          );\n        }\n      });\n\n      if (this.to && this.to.attributes) {\n        wrapProperty(this.to, 'attributes', ({ currentValue, previousValue }) => {\n          if (previousValue) {\n            Object.keys(previousValue).forEach(attr => this.removeAttribute(attr));\n          }\n\n          if (currentValue) {\n            Object.keys(currentValue).forEach(attr => this.setAttribute(attr, currentValue[attr]));\n          }\n        });\n      }\n\n      this.detachElementRef(changes.field.previousValue);\n      this.attachElementRef(changes.field.currentValue);\n      if (this.fieldAttrElements.length === 1) {\n        !this.id && this.field.id && this.setAttribute('id', this.field.id);\n        wrapProperty(this.field, 'focus', ({ currentValue }) => {\n          this.toggleFocus(currentValue);\n        });\n      }\n    }\n\n    if (changes.id) {\n      this.setAttribute('id', this.id);\n    }\n  }\n\n  /**\n   * We need to re-evaluate all the attributes on every change detection cycle, because\n   * by using a HostBinding we run into certain edge cases. This means that whatever logic\n   * is in here has to be super lean or we risk seriously damaging or destroying the performance.\n   *\n   * Formly issue: https://github.com/ngx-formly/ngx-formly/issues/1317\n   * Material issue: https://github.com/angular/components/issues/14024\n   */\n  ngDoCheck() {\n    this.uiAttributes.forEach(attr => {\n      const value = this.to[attr];\n      if (this.uiAttributesCache[attr] !== value) {\n        this.uiAttributesCache[attr] = value;\n        if (value || value === 0) {\n          this.setAttribute(attr, value === true ? attr : `${value}`);\n        } else {\n          this.removeAttribute(attr);\n        }\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.uiEvents.listeners.forEach(listener => listener());\n    this.detachElementRef(this.field);\n  }\n\n  toggleFocus(value: boolean) {\n    const element = this.fieldAttrElements ? this.fieldAttrElements[0] : null;\n    if (!element || !element.nativeElement.focus) {\n      return;\n    }\n\n    const isFocused = !!this.document.activeElement\n      && this.fieldAttrElements\n        .some(({ nativeElement }) => this.document.activeElement === nativeElement || nativeElement.contains(this.document.activeElement));\n\n    if (value && !isFocused) {\n      element.nativeElement.focus();\n    } else if (!value && isFocused) {\n      element.nativeElement.blur();\n    }\n  }\n\n  onFocus($event: any) {\n    this.field['___$focus'] = true;\n    if (this.to.focus) {\n      this.to.focus(this.field, $event);\n    }\n  }\n\n  onBlur($event: any) {\n    this.field['___$focus'] = false;\n    if (this.to.blur) {\n      this.to.blur(this.field, $event);\n    }\n  }\n\n  onChange($event: any) {\n    if (this.to.change) {\n      this.to.change(this.field, $event);\n    }\n\n    if (this.field.formControl) {\n      this.field.formControl.markAsDirty();\n    }\n  }\n\n  private attachElementRef(f: FormlyFieldConfig) {\n    if (!f) {\n      return;\n    }\n\n    if (f['_elementRefs'] && f['_elementRefs'].indexOf(this.elementRef) === -1) {\n      f['_elementRefs'].push(this.elementRef);\n    } else {\n      defineHiddenProp(f, '_elementRefs', [this.elementRef]);\n    }\n  }\n\n  private detachElementRef(f: FormlyFieldConfig) {\n    const index = f && f['_elementRefs'] ? this.fieldAttrElements.indexOf(this.elementRef) : -1;\n    if (index !== -1) {\n      this.field['_elementRefs'].splice(index, 1);\n    }\n  }\n\n  private setAttribute(attr: string, value: string) {\n    this.renderer.setAttribute(this.elementRef.nativeElement, attr, value);\n  }\n\n  private removeAttribute(attr: string) {\n    this.renderer.removeAttribute(this.elementRef.nativeElement, attr);\n  }\n}\n","import { Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { FormlyFieldConfig } from '../components/formly.field.config';\n\nexport abstract class FieldType<F extends FormlyFieldConfig = FormlyFieldConfig> {\n  @Input() field: F;\n  defaultOptions?: F;\n\n  @Input()\n  get model() { return this.field.model; }\n  set model(m: any) { console.warn(`NgxFormly: passing 'model' input to '${this.constructor.name}' component is not required anymore, you may remove it!`); }\n\n  @Input()\n  get form() { return <FormGroup> this.field.parent.formControl; }\n  set form(form) { console.warn(`NgxFormly: passing 'form' input to '${this.constructor.name}' component is not required anymore, you may remove it!`); }\n\n  @Input()\n  get options() { return this.field.options; }\n  set options(options: F['options']) { console.warn(`NgxFormly: passing 'options' input to '${this.constructor.name}' component is not required anymore, you may remove it!`); }\n\n  get key() { return this.field.key; }\n\n  get formControl() { return this.field.formControl; }\n\n  get to() { return this.field.templateOptions || {}; }\n\n  get showError(): boolean { return this.options.showError(this); }\n\n  get id(): string { return this.field.id; }\n\n  get formState() { return this.options.formState || {}; }\n}\n\n/**\n * @deprecated use `FieldType` instead\n */\nexport abstract class Field extends FieldType {\n  constructor() {\n    super();\n    console.warn(`NgxFormly: 'Field' has been renamed to 'FieldType', extend 'FieldType' instead.`);\n  }\n}\n","import { FormArray, FormGroup, FormControl, AbstractControl } from '@angular/forms';\nimport { FormlyFieldConfig } from '../../core';\nimport { getKeyPath, getFieldValue, isNullOrUndefined, defineHiddenProp, wrapProperty, isUndefined, assignFieldValue } from '../../utils';\nimport { FormlyFieldConfigCache } from '../../components/formly.field.config';\nimport { EventEmitter } from '@angular/core';\n\nexport function unregisterControl(field: FormlyFieldConfig, emitEvent = false) {\n  const form = field.formControl.parent as FormArray | FormGroup;\n  if (!form) {\n    return;\n  }\n\n  const control = field.formControl;\n  const opts = { emitEvent };\n  if (form instanceof FormArray) {\n    const key = form.controls.findIndex(c => c === control);\n    if (key !== -1) {\n      updateControl(form, opts, () => form.removeAt(key));\n    }\n  } else if (form instanceof FormGroup) {\n    const paths = getKeyPath(field);\n    const key = paths[paths.length - 1];\n    if (form.get([key]) === control) {\n      updateControl(form, opts, () => form.removeControl(key));\n    }\n  }\n\n  control.setParent(null);\n  if (field['autoClear']) {\n    if (field.parent.model) {\n      delete field.parent.model[Array.isArray(field.key) ? field.key[0] : field.key];\n    }\n    control.reset(\n      { value: undefined, disabled: control.disabled },\n      { emitEvent: field.fieldGroup ? false : emitEvent, onlySelf: true },\n    );\n  }\n}\n\nexport function findControl(field: FormlyFieldConfig): AbstractControl {\n  if (field.formControl) {\n    return field.formControl;\n  }\n\n  const form = field.parent.formControl as FormGroup;\n\n  return form ? form.get(getKeyPath(field)) : null;\n}\n\nexport function registerControl(field: FormlyFieldConfigCache, control?: any, emitEvent = false) {\n  control = control || field.formControl;\n  if (!control['_fields']) {\n    defineHiddenProp(control, '_fields', []);\n  }\n  if (control['_fields'].indexOf(field) === -1) {\n    control['_fields'].push(field);\n  }\n\n  if (!field.formControl && control) {\n    defineHiddenProp(field, 'formControl', control);\n\n    field.templateOptions.disabled = !!field.templateOptions.disabled;\n    wrapProperty(field.templateOptions, 'disabled', ({ firstChange, currentValue }) => {\n      if (!firstChange) {\n        currentValue ? field.formControl.disable() : field.formControl.enable();\n      }\n    });\n    if (control.registerOnDisabledChange) {\n      control.registerOnDisabledChange(\n        (value: boolean) => field.templateOptions['___$disabled'] = value,\n      );\n    }\n  }\n\n  let parent = field.parent.formControl as FormGroup;\n  if (!parent) {\n    return;\n  }\n\n  const paths = getKeyPath(field);\n  if (!parent['_formlyControls']) {\n    defineHiddenProp(parent, '_formlyControls', {});\n  }\n  parent['_formlyControls'][paths.join('.')] = control;\n\n  for (let i = 0; i < (paths.length - 1); i++) {\n    const path = paths[i];\n    if (!parent.get([path])) {\n      registerControl({\n        key: [path],\n        formControl: new FormGroup({}),\n        parent: { formControl: parent },\n      });\n    }\n\n    parent = <FormGroup> parent.get([path]);\n  }\n\n  if (field['autoClear'] && field.parent && !isUndefined(field.defaultValue) && isUndefined(getFieldValue(field))) {\n    assignFieldValue(field, field.defaultValue);\n  }\n\n  const value = getFieldValue(field);\n  if (\n    !(isNullOrUndefined(control.value) && isNullOrUndefined(value))\n    && control.value !== value\n    && control instanceof FormControl\n  ) {\n    control.patchValue(value);\n  }\n  const key = paths[paths.length - 1];\n  if (!field._hide && parent.get([key]) !== control) {\n    updateControl(\n      parent,\n      { emitEvent },\n      () => parent.setControl(key, control),\n    );\n  }\n}\n\nexport function updateValidity(c: AbstractControl) {\n  const status = c.status;\n  c.updateValueAndValidity({ emitEvent: false });\n  if (status !== c.status) {\n    (c.statusChanges as EventEmitter<string>).emit(c.status);\n  }\n}\n\nfunction updateControl(form: FormGroup|FormArray, opts: { emitEvent: boolean }, action: Function) {\n  /**\n   *  workaround for https://github.com/angular/angular/issues/27679\n   */\n  if (form instanceof FormGroup && !form['__patchForEachChild']) {\n    defineHiddenProp(form, '__patchForEachChild', true);\n    (form as any)._forEachChild = (cb: Function) => {\n      Object\n        .keys(form.controls)\n        .forEach(k => form.controls[k] && cb(form.controls[k], k));\n    };\n  }\n\n  /**\n   * workaround for https://github.com/angular/angular/issues/20439\n   */\n  const updateValueAndValidity = form.updateValueAndValidity.bind(form);\n  if (opts.emitEvent === false) {\n    form.updateValueAndValidity = (opts) => {\n      updateValueAndValidity({ ...(opts || {}), emitEvent: false });\n    };\n  }\n\n  action();\n\n  if (opts.emitEvent === false) {\n    form.updateValueAndValidity = updateValueAndValidity;\n  }\n}\n","import { Inject, Optional } from '@angular/core';\nimport { FormArray } from '@angular/forms';\nimport { FieldType } from './field.type';\nimport { clone, isNullOrUndefined, assignFieldValue } from '../utils';\nimport { FormlyFormBuilder } from '../services/formly.form.builder';\nimport { FormlyFieldConfig } from '../components/formly.field.config';\nimport { FORMLY_CONFIG, FormlyExtension } from '../services/formly.config';\nimport { registerControl, unregisterControl } from '../extensions/field-form/utils';\n\nexport abstract class FieldArrayType<F extends FormlyFieldConfig = FormlyFieldConfig> extends FieldType<F> implements FormlyExtension {\n  formControl: FormArray;\n  defaultOptions: any = {\n    defaultValue: [],\n  };\n\n  constructor(@Inject(FORMLY_CONFIG) @Optional() builder?: FormlyFormBuilder) {\n    super();\n\n    if (builder instanceof FormlyFormBuilder) {\n      console.warn(`NgxFormly: passing 'FormlyFormBuilder' to '${this.constructor.name}' type is not required anymore, you may remove it!`);\n    }\n  }\n\n  onPopulate(field: FormlyFieldConfig) {\n    if (!field.formControl && field.key) {\n      registerControl(field, new FormArray([], { updateOn: field.modelOptions.updateOn }));\n    }\n\n    field.fieldGroup = field.fieldGroup || [];\n\n    const length = field.model ? field.model.length : 0;\n    if (field.fieldGroup.length > length) {\n      for (let i = field.fieldGroup.length - 1; i >= length; --i) {\n        unregisterControl(field.fieldGroup[i]);\n        field.fieldGroup.splice(i, 1);\n      }\n    }\n\n    for (let i = field.fieldGroup.length; i < length; i++) {\n      const f = { ...clone(field.fieldArray), key: `${i}` };\n      field.fieldGroup.push(f);\n    }\n  }\n\n  add(i?: number, initialModel?: any, { markAsDirty } = { markAsDirty: true }) {\n    i = isNullOrUndefined(i) ? this.field.fieldGroup.length : i;\n    if (!this.model) {\n      assignFieldValue(this.field, []);\n    }\n\n    this.model.splice(i, 0, initialModel ? clone(initialModel) : undefined);\n\n    (<any> this.options)._buildForm(true);\n    markAsDirty && this.formControl.markAsDirty();\n  }\n\n  remove(i: number, { markAsDirty } = { markAsDirty: true }) {\n    this.model.splice(i, 1);\n    unregisterControl(this.field.fieldGroup[i], true);\n    this.field.fieldGroup.splice(i, 1);\n    this.field.fieldGroup.forEach((f, key) => f.key = `${key}`);\n\n    (<any> this.options)._buildForm(true);\n    markAsDirty && this.formControl.markAsDirty();\n  }\n}\n","import { ViewContainerRef, ViewChild } from '@angular/core';\nimport { FieldType } from './field.type';\nimport { FormlyFieldConfig } from '../components/formly.field.config';\n\nexport abstract class FieldWrapper<F extends FormlyFieldConfig = FormlyFieldConfig> extends FieldType<F> {\n  // TODO: remove `any`, once dropping angular `V7` support.\n  @ViewChild('fieldComponent', <any>{ read: ViewContainerRef, static: false }) fieldComponent: ViewContainerRef;\n}\n","import { Component } from '@angular/core';\nimport { FieldType } from './field.type';\n\n@Component({\n  selector: 'formly-group',\n  template: `\n    <formly-field *ngFor=\"let f of field.fieldGroup\" [field]=\"f\"></formly-field>\n    <ng-content></ng-content>\n  `,\n  host: {\n    '[class]': 'field.fieldGroupClassName || \"\"',\n  },\n})\nexport class FormlyGroup extends FieldType {\n  defaultOptions = {\n    defaultValue: {},\n  };\n}\n","import { Component, Input, ChangeDetectionStrategy, OnChanges } from '@angular/core';\nimport { FormlyConfig, ValidationMessageOption } from '../services/formly.config';\nimport { FormlyFieldConfig } from '../components/formly.field.config';\nimport { isObject } from '../utils';\nimport { Observable, isObservable, of } from 'rxjs';\nimport { startWith, switchMap } from 'rxjs/operators';\n\n@Component({\n  selector: 'formly-validation-message',\n  template: `{{ errorMessage$ | async }}`,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FormlyValidationMessage implements OnChanges {\n  @Input() field: FormlyFieldConfig;\n  errorMessage$: Observable<string>;\n\n  constructor(private formlyConfig: FormlyConfig) {}\n\n  ngOnChanges() {\n    this.errorMessage$ = this.field.formControl.statusChanges.pipe(\n      startWith(null),\n      switchMap(() => isObservable(this.errorMessage)\n        ? this.errorMessage\n        : of(this.errorMessage),\n      ),\n    );\n  }\n\n  get errorMessage() {\n    const fieldForm = this.field.formControl;\n    for (let error in fieldForm.errors) {\n      if (fieldForm.errors.hasOwnProperty(error)) {\n        let message: ValidationMessageOption['message'] = this.formlyConfig.getValidatorMessage(error);\n\n        if (isObject(fieldForm.errors[error])) {\n          if (fieldForm.errors[error].errorPath) {\n            return;\n          }\n\n          if (fieldForm.errors[error].message) {\n            message = fieldForm.errors[error].message;\n          }\n        }\n\n        if (this.field.validation && this.field.validation.messages && this.field.validation.messages[error]) {\n          message = this.field.validation.messages[error];\n        }\n\n        if (this.field.validators && this.field.validators[error] && this.field.validators[error].message) {\n          message = this.field.validators[error].message;\n        }\n\n        if (this.field.asyncValidators && this.field.asyncValidators[error] && this.field.asyncValidators[error].message) {\n          message = this.field.asyncValidators[error].message;\n        }\n\n        if (typeof message === 'function') {\n          return message(fieldForm.errors[error], this.field);\n        }\n\n        return message;\n      }\n    }\n  }\n}\n","import { Component } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { FieldType } from './field.type';\n\n@Component({\n  selector: 'formly-template',\n  template: `<div [innerHtml]=\"template\"></div>`,\n})\nexport class FormlyTemplateType extends FieldType {\n  get template() {\n    if (this.field && (this.field.template !== this.innerHtml.template)) {\n      this.innerHtml = {\n        template: this.field.template,\n        content: this.to.safeHtml\n          ? this.sanitizer.bypassSecurityTrustHtml(this.field.template)\n          : this.field.template,\n      };\n    }\n\n    return this.innerHtml.content;\n  }\n\n  private innerHtml = { content: null, template: null };\n  constructor(private sanitizer: DomSanitizer) {\n    super();\n  }\n}\n","export function evalStringExpression(expression: string, argNames: string[]) {\n  try {\n    if (expression.indexOf('this.field') !== -1) {\n      console.warn(`NgxFormly: using 'this.field' in expressionProperties is deprecated since v5.1, use 'field' instead.`);\n    }\n\n    return Function(...argNames, `return ${expression};`) as any;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport function evalExpressionValueSetter(expression: string, argNames: string[]) {\n  try {\n    return Function(...argNames, `${expression} = expressionValue;`) as (value: any) => void;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport function evalExpression(expression: string | Function | boolean, thisArg: any, argVal: any[]): any {\n  if (expression instanceof Function) {\n    return expression.apply(thisArg, argVal);\n  } else {\n    return expression ? true : false;\n  }\n}\n","import { FormlyFieldConfig, FormlyValueChangeEvent, FormlyFieldConfigCache } from '../../components/formly.field.config';\nimport { isObject, isNullOrUndefined, isFunction, defineHiddenProp, wrapProperty, reduceFormUpdateValidityCalls } from '../../utils';\nimport { evalExpression, evalStringExpression } from './utils';\nimport { Observable, Subscription } from 'rxjs';\nimport { FormlyExtension } from '../../services/formly.config';\nimport { unregisterControl, registerControl, updateValidity } from '../field-form/utils';\n\n/** @experimental */\nexport class FieldExpressionExtension implements FormlyExtension {\n  prePopulate(field: FormlyFieldConfigCache) {\n    if (field.parent || field.options._checkField) {\n      return;\n    }\n\n    let checkLocked = false;\n    field.options._checkField = (f, ignoreCache) => {\n      if (!checkLocked) {\n        checkLocked = true;\n        reduceFormUpdateValidityCalls(\n          f.formControl,\n          () => this.checkField(f, ignoreCache),\n        );\n        checkLocked = false;\n      }\n    };\n  }\n\n  onPopulate(field: FormlyFieldConfigCache) {\n    if (!field.parent || field._expressionProperties) {\n      return;\n    }\n\n    // cache built expression\n    defineHiddenProp(field, '_expressionProperties', {});\n\n    if (field.expressionProperties) {\n      for (const key in field.expressionProperties) {\n        const expressionProperty = field.expressionProperties[key];\n\n        if (typeof expressionProperty === 'string' || isFunction(expressionProperty)) {\n          field._expressionProperties[key] = {\n            expression: this._evalExpression(\n              expressionProperty,\n              key === 'templateOptions.disabled' && field.parent.expressionProperties && field.parent.expressionProperties.hasOwnProperty('templateOptions.disabled')\n                ? () => field.parent.templateOptions.disabled\n                : undefined,\n            ),\n          };\n          if (key === 'templateOptions.disabled') {\n            Object.defineProperty(field._expressionProperties[key], 'expressionValue', {\n              get: () => field.templateOptions.disabled,\n              set: () => { },\n              enumerable: true,\n              configurable: true,\n            });\n          }\n        } else if (expressionProperty instanceof Observable) {\n          const subscribe = () => (expressionProperty as Observable<any>)\n            .subscribe(v => {\n              this.setExprValue(field, key, v);\n              if (field.options && field.options._markForCheck) {\n                field.options._markForCheck(field);\n              }\n            });\n\n          let subscription: Subscription = subscribe();\n          const onInit = field.hooks.onInit;\n          field.hooks.onInit = () => {\n            if (subscription === null) {\n              subscription = subscribe();\n            }\n            return onInit && onInit(field);\n          };\n\n          const onDestroy = field.hooks.onDestroy;\n          field.hooks.onDestroy = () => {\n            onDestroy && onDestroy(field);\n            subscription.unsubscribe();\n            subscription = null;\n          };\n        }\n      }\n    }\n\n    if (field.hideExpression) {\n      // delete hide value in order to force re-evaluate it in FormlyFormExpression.\n      delete field.hide;\n\n      let parent = field.parent;\n      while (parent && !parent.hideExpression) {\n        parent = parent.parent;\n      }\n\n      field.hideExpression = this._evalExpression(\n        field.hideExpression,\n        parent && parent.hideExpression ? () => parent.hide : undefined,\n      );\n    } else {\n      wrapProperty(field, 'hide', ({ currentValue, firstChange }) => {\n        field._hide = currentValue;\n        if (!firstChange || (firstChange && currentValue === true)) {\n          field.options._hiddenFieldsForCheck.push(field);\n        }\n      });\n    }\n  }\n\n  private _evalExpression(expression, parentExpression?) {\n    expression = expression || (() => false);\n    if (typeof expression === 'string') {\n      expression = evalStringExpression(expression, ['model', 'formState', 'field']);\n    }\n\n    return parentExpression\n      ? (model: any, formState: any, field: FormlyFieldConfig) => parentExpression() || expression(model, formState, field)\n      : expression;\n  }\n\n  private checkField(field: FormlyFieldConfigCache, ignoreCache = false) {\n    this._checkField(field, ignoreCache);\n\n    field.options._hiddenFieldsForCheck\n      .sort(f => f.hide ? -1 : 1)\n      .forEach(f => this.toggleFormControl(f, f.hide));\n\n    field.options._hiddenFieldsForCheck = [];\n  }\n\n  private _checkField(field: FormlyFieldConfigCache, ignoreCache = false) {\n    let markForCheck = false;\n    field.fieldGroup.forEach(f => {\n      this.checkFieldExpressionChange(f, ignoreCache) && (markForCheck = true);\n      if (this.checkFieldVisibilityChange(f, ignoreCache)) {\n        field.options._hiddenFieldsForCheck.push(f);\n        markForCheck = true;\n      }\n\n      if (f.fieldGroup && f.fieldGroup.length > 0) {\n        this._checkField(f, ignoreCache);\n      }\n    });\n\n    if (markForCheck && field.options && field.options._markForCheck) {\n      field.options._markForCheck(field);\n    }\n  }\n\n  private checkFieldExpressionChange(field: FormlyFieldConfigCache, ignoreCache): boolean {\n    if (!field || !field._expressionProperties) {\n      return false;\n    }\n\n    let markForCheck = false;\n    const expressionProperties = field._expressionProperties;\n\n    for (const key in expressionProperties) {\n      let expressionValue = evalExpression(expressionProperties[key].expression, { field }, [field.model, field.options.formState, field]);\n      if (key === 'templateOptions.disabled') {\n        expressionValue = !!expressionValue;\n      }\n\n      if (\n        ignoreCache || (\n          expressionProperties[key].expressionValue !== expressionValue\n          && (!isObject(expressionValue) || JSON.stringify(expressionValue) !== JSON.stringify(expressionProperties[key].expressionValue))\n        )\n      ) {\n        markForCheck = true;\n        expressionProperties[key].expressionValue = expressionValue;\n        this.setExprValue(field, key, expressionValue);\n      }\n    }\n\n    return markForCheck;\n  }\n\n  private checkFieldVisibilityChange(field: FormlyFieldConfigCache, ignoreCache): boolean {\n    if (!field || isNullOrUndefined(field.hideExpression)) {\n      return false;\n    }\n\n    const hideExpressionResult: boolean = !!evalExpression(\n      field.hideExpression,\n      { field },\n      [field.model, field.options.formState, field],\n    );\n    let markForCheck = false;\n    if (hideExpressionResult !== field.hide || ignoreCache) {\n      markForCheck = true;\n      // toggle hide\n      field.hide = hideExpressionResult;\n      field.templateOptions.hidden = hideExpressionResult;\n    }\n\n    return markForCheck;\n  }\n\n  private setDisabledState(field: FormlyFieldConfig, value: boolean) {\n    if (field.fieldGroup) {\n      field.fieldGroup\n        .filter(f => !f.expressionProperties || !f.expressionProperties.hasOwnProperty('templateOptions.disabled'))\n        .forEach(f => this.setDisabledState(f, value));\n    }\n\n    if (field.key && field.templateOptions.disabled !== value) {\n      field.templateOptions.disabled = value;\n    }\n  }\n\n  private toggleFormControl(field: FormlyFieldConfigCache, hide: boolean) {\n    if (field.formControl && field.key) {\n      defineHiddenProp(field, '_hide', !!(hide || field.hide));\n      const c = field.formControl;\n      if (c['_fields'].length > 1) {\n        updateValidity(c);\n      }\n\n      hide === true && c['_fields'].every(f => !!f._hide)\n        ? unregisterControl(field)\n        : registerControl(field);\n    }\n\n    if (field.fieldGroup) {\n      field.fieldGroup\n        .filter(f => !f.hideExpression)\n        .forEach(f => this.toggleFormControl(f, hide));\n    }\n\n    if (field.options.fieldChanges) {\n      field.options.fieldChanges.next(<FormlyValueChangeEvent> { field, type: 'hidden', value: hide });\n    }\n  }\n\n  private setExprValue(field: FormlyFieldConfigCache, prop: string, value: any) {\n    try {\n      let target = field;\n      const paths = prop.split('.');\n      const lastIndex = paths.length - 1;\n      for (let i = 0; i < lastIndex; i++) {\n        target = target[paths[i]];\n      }\n\n      target[paths[lastIndex]] = value;\n    } catch (error) {\n      error.message = `[Formly Error] [Expression \"${prop}\"] ${error.message}`;\n      throw error;\n    }\n\n    if (prop === 'templateOptions.disabled' && field.key) {\n      this.setDisabledState(field, value);\n    }\n\n    if (prop.indexOf('model.') === 0) {\n      const path = prop.replace(/^model\\./, ''),\n        control = field.key && prop === path ? field.formControl : field.parent.formControl.get(path);\n\n      if (\n        control\n        && !(isNullOrUndefined(control.value) && isNullOrUndefined(value))\n        && control.value !== value\n      ) {\n        control.patchValue(value, { emitEvent: false });\n      }\n    }\n\n    this.emitExpressionChanges(field, prop, value);\n  }\n\n  private emitExpressionChanges(field: FormlyFieldConfigCache, property: string, value: any) {\n    if (!field.options.fieldChanges) {\n      return;\n    }\n\n    field.options.fieldChanges.next({\n      field: field,\n      type: 'expressionChanges',\n      property,\n      value,\n    });\n  }\n}\n","import { FormlyExtension, FormlyConfig, ValidatorOption } from '../../services/formly.config';\nimport { FormlyFieldConfigCache } from '../../components/formly.field.config';\nimport { AbstractControl, Validators, ValidatorFn } from '@angular/forms';\nimport { FORMLY_VALIDATORS, defineHiddenProp, isPromise, wrapProperty, clone } from '../../utils';\nimport { updateValidity } from '../field-form/utils';\nimport { isObservable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n/** @experimental */\nexport class FieldValidationExtension implements FormlyExtension {\n  constructor(private formlyConfig: FormlyConfig) {}\n\n  onPopulate(field: FormlyFieldConfigCache) {\n    this.initFieldValidation(field, 'validators');\n    this.initFieldValidation(field, 'asyncValidators');\n  }\n\n  private initFieldValidation(field: FormlyFieldConfigCache, type: 'validators' | 'asyncValidators') {\n    const validators: ValidatorFn[] = [];\n    if (type === 'validators' && !(field.hasOwnProperty('fieldGroup') && !field.key)) {\n      validators.push(this.getPredefinedFieldValidation(field));\n    }\n\n    if (field[type]) {\n      for (const validatorName in field[type]) {\n        if (validatorName === 'validation' && !Array.isArray(field[type].validation)) {\n          field[type].validation = [field[type].validation];\n          console.warn(`NgxFormly(${field.key}): passing a non array value to the 'validation' is deprecated, pass an array instead`);\n        }\n\n        validatorName === 'validation'\n          ? validators.push(...field[type].validation.map(v => this.wrapNgValidatorFn(field, v)))\n          : validators.push(this.wrapNgValidatorFn(field, field[type][validatorName], validatorName))\n        ;\n      }\n    }\n\n    defineHiddenProp(field, '_' + type, validators);\n  }\n\n  private getPredefinedFieldValidation(field: FormlyFieldConfigCache): ValidatorFn {\n    let VALIDATORS = [];\n    FORMLY_VALIDATORS.forEach(opt => wrapProperty(field.templateOptions, opt, ({ currentValue, firstChange }) => {\n      VALIDATORS = VALIDATORS.filter(o => o !== opt);\n      if (currentValue != null && currentValue !== false) {\n        VALIDATORS.push(opt);\n      }\n      if (!firstChange && field.formControl) {\n        updateValidity(field.formControl);\n      }\n    }));\n\n    return (control: AbstractControl) => {\n      if (VALIDATORS.length === 0) {\n        return null;\n      }\n\n      return Validators.compose(VALIDATORS.map(opt => () => {\n        const value = field.templateOptions[opt];\n        switch (opt) {\n          case 'required':\n            return Validators.required(control);\n          case 'pattern':\n            return Validators.pattern(value)(control);\n          case 'minLength':\n            return Validators.minLength(value)(control);\n          case 'maxLength':\n            return Validators.maxLength(value)(control);\n          case 'min':\n            return Validators.min(value)(control);\n          case 'max':\n            return Validators.max(value)(control);\n        }\n      }))(control);\n    };\n  }\n\n  private wrapNgValidatorFn(field: FormlyFieldConfigCache, validator: any, validatorName?: string) {\n    let validatorOption: ValidatorOption = null;\n    if (typeof validator === 'string') {\n      validatorOption = clone(this.formlyConfig.getValidator(validator));\n    }\n\n    if (typeof validator === 'object' && validator.name) {\n      validatorOption = clone(this.formlyConfig.getValidator(validator.name));\n      if (validator.options) {\n        validatorOption.options = validator.options;\n      }\n    }\n\n    if (typeof validator === 'object' && validator.expression) {\n      const { expression, ...options } = validator;\n      validatorOption = {\n        name: validatorName,\n        validation: expression,\n        options: Object.keys(options).length > 0 ? options : null,\n      };\n    }\n\n    if (typeof validator === 'function') {\n      validatorOption = {\n        name: validatorName,\n        validation: validator,\n      };\n    }\n\n    return (control: AbstractControl) => {\n      const errors: any = validatorOption.validation(control, field, validatorOption.options);\n      if (isPromise(errors)) {\n        return errors.then(v => this.handleAsyncResult(field, validatorName ? !!v : v, validatorOption));\n      }\n\n      if (isObservable(errors) && !validatorName) {\n        return errors.pipe(map(v => this.handleAsyncResult(field, v, validatorOption)));\n      }\n\n      return this.handleResult(field, validatorName ? !!errors : errors, validatorOption);\n    };\n  }\n\n  private handleAsyncResult(field: FormlyFieldConfigCache, errors: any, options: ValidatorOption) {\n    // workaround for https://github.com/angular/angular/issues/13200\n    if (field.options && field.options._markForCheck) {\n      field.options._markForCheck(field);\n    }\n\n    return this.handleResult(field, errors, options);\n  }\n\n  private handleResult(field: FormlyFieldConfigCache, errors: any, { name, options }: ValidatorOption) {\n    if (typeof errors === 'boolean') {\n      errors = errors ? null : { [name]: options ? options : true };\n    }\n\n    const ctrl = field.formControl;\n    ctrl['_childrenErrors'] && ctrl['_childrenErrors'][name] && ctrl['_childrenErrors'][name]();\n\n    if (errors && errors[name]) {\n      const errorPath = errors[name].errorPath\n        ? errors[name].errorPath\n        : (options || {}).errorPath;\n\n      const childCtrl = errorPath ? field.formControl.get(errorPath) : null;\n      if (childCtrl) {\n        const { errorPath, ...opts } = errors[name];\n        childCtrl.setErrors({ ...(childCtrl.errors || {}), [name]: opts });\n\n        !ctrl['_childrenErrors'] && defineHiddenProp(ctrl, '_childrenErrors', {});\n        ctrl['_childrenErrors'][name] = () => {\n          const { [name]: toDelete, ...childErrors } = childCtrl.errors || {};\n          childCtrl.setErrors(Object.keys(childErrors).length === 0 ? null : childErrors);\n        };\n      }\n    }\n\n    return errors;\n  }\n}\n","import { FormlyExtension, FormlyConfig } from '../../services/formly.config';\nimport { FormlyFieldConfigCache } from '../../components/formly.field.config';\nimport { FormGroup, FormControl, AbstractControlOptions, Validators, ValidatorFn, AsyncValidatorFn } from '@angular/forms';\nimport { getFieldValue, defineHiddenProp } from '../../utils';\nimport { registerControl, findControl, updateValidity as updateControlValidity } from './utils';\nimport { of } from 'rxjs';\n\n/** @experimental */\nexport class FieldFormExtension implements FormlyExtension {\n  constructor(private config: FormlyConfig) { }\n\n  onPopulate(field: FormlyFieldConfigCache) {\n    if (field.key) {\n      this.addFormControl(field);\n    }\n\n    if (field.parent && field.fieldGroup && !field.key) {\n      defineHiddenProp(field, 'formControl', field.parent.formControl);\n    }\n  }\n\n  postPopulate(field: FormlyFieldConfigCache) {\n    if (field.parent) {\n      return;\n    }\n\n    const fieldsToUpdate = this.setValidators(field);\n    if (fieldsToUpdate.length === 0) {\n      return;\n    }\n\n    if (fieldsToUpdate.length === 1) {\n      fieldsToUpdate[0].formControl.updateValueAndValidity();\n    } else {\n      (field.formControl as any)._updateTreeValidity();\n    }\n  }\n\n  private addFormControl(field: FormlyFieldConfigCache) {\n    let control = findControl(field);\n    if (!control) {\n      const controlOptions: AbstractControlOptions = { updateOn: field.modelOptions.updateOn };\n      const value = getFieldValue(field);\n\n      const ref = this.config ? this.config.resolveFieldTypeRef(field) : null;\n      if (ref && ref.componentType && ref.componentType['createControl']) {\n        const component = ref.componentType;\n        console.warn(`NgxFormly: '${component.name}::createControl' is deprecated since v5.0, use 'prePopulate' hook instead.`);\n        control = component['createControl'](value, field);\n      } else if (field.fieldGroup) {\n        // TODO: move to postPopulate\n        control = new FormGroup({}, controlOptions);\n      } else {\n        control = new FormControl(value, controlOptions);\n      }\n    }\n\n    registerControl(field, control);\n  }\n\n  private setValidators(field: FormlyFieldConfigCache) {\n    let updateValidity = false;\n    if (field.key || !field.parent) {\n      const { formControl: c } = field;\n      const disabled = field.templateOptions ? field.templateOptions.disabled : false;\n      if (disabled && c.enabled) {\n        c.disable({ emitEvent: false, onlySelf: true });\n        updateValidity = true;\n      }\n\n      if (null === c.validator || null === c.asyncValidator) {\n        c.setValidators(() => {\n          const v = Validators.compose(this.mergeValidators<ValidatorFn>(field, '_validators'));\n\n          return v ? v(c) : null;\n        });\n        c.setAsyncValidators(() => {\n          const v = Validators.composeAsync(this.mergeValidators<AsyncValidatorFn>(field, '_asyncValidators'));\n\n          return v ? v(c) : of(null);\n        });\n\n        if (!c.parent) {\n          updateControlValidity(c);\n        } else {\n          updateValidity = true;\n        }\n      }\n    }\n\n    const fieldsToUpdate = updateValidity ? [field] : [];\n    (field.fieldGroup || []).forEach(f => {\n      const childrenToUpdate = this.setValidators(f);\n      if (!updateValidity) {\n        fieldsToUpdate.push(...childrenToUpdate);\n      }\n    });\n\n    return fieldsToUpdate;\n  }\n\n  private mergeValidators<T>(field: FormlyFieldConfigCache, type: '_validators' | '_asyncValidators'): T[] {\n    const validators: any = [];\n    const c = field.formControl;\n    if (c && c['_fields'] && c['_fields'].length > 1) {\n      c['_fields']\n        .filter((f: FormlyFieldConfigCache) => !f._hide)\n        .forEach((f: FormlyFieldConfigCache) => validators.push(...f[type]));\n    } else {\n      validators.push(...field[type]);\n    }\n\n    if (field.fieldGroup) {\n      field.fieldGroup\n        .filter(f => !f.key && f.fieldGroup)\n        .forEach(f => validators.push(...this.mergeValidators(f, type)));\n    }\n\n    return validators;\n  }\n}\n","import { FormlyExtension, FormlyConfig, TemplateManipulators } from '../../services/formly.config';\nimport { FormlyFieldConfigCache, FormlyFieldConfig } from '../../components/formly.field.config';\nimport { FormGroup } from '@angular/forms';\nimport { getFieldId, isUndefined, getFieldValue, reverseDeepMerge, assignFieldValue } from '../../utils';\n\n/** @experimental */\nexport class CoreExtension implements FormlyExtension {\n  private formId = 0;\n  constructor(private formlyConfig: FormlyConfig) { }\n\n  prePopulate(field: FormlyFieldConfigCache) {\n    this.getFieldComponentInstance(field).prePopulate();\n    if (field.parent) {\n      return;\n    }\n\n    const fieldTransforms = (field.options && field.options.fieldTransform) || this.formlyConfig.extras.fieldTransform;\n    (Array.isArray(fieldTransforms) ? fieldTransforms : [fieldTransforms]).forEach(fieldTransform => {\n      if (fieldTransform) {\n        console.warn(`NgxFormly: fieldTransform is deprecated since v5.0, use custom extension instead.`);\n        const fieldGroup = fieldTransform(field.fieldGroup, field.model, <FormGroup>field.formControl, field.options);\n        if (!fieldGroup) {\n          throw new Error('fieldTransform must return an array of fields');\n        }\n      }\n    });\n  }\n\n  onPopulate(field: FormlyFieldConfigCache) {\n    this.initFieldOptions(field);\n    this.getFieldComponentInstance(field).onPopulate();\n    if (field.fieldGroup) {\n      field.fieldGroup.forEach((f, index) => {\n        Object.defineProperty(f, 'parent', { get: () => field, configurable: true });\n        Object.defineProperty(f, 'index', { get: () => index, configurable: true });\n        this.formId++;\n      });\n    }\n  }\n\n  postPopulate(field: FormlyFieldConfigCache) {\n    this.getFieldComponentInstance(field).postPopulate();\n  }\n\n  private initFieldOptions(field: FormlyFieldConfigCache) {\n    const root = <FormlyFieldConfigCache> field.parent;\n    if (!root) {\n      return;\n    }\n\n    Object.defineProperty(field, 'form', { get: () => root.formControl, configurable: true });\n    Object.defineProperty(field, 'options', { get: () => root.options, configurable: true });\n    Object.defineProperty(field, 'model', {\n      get: () => field.key && field.fieldGroup ? getFieldValue(field) : root.model,\n      configurable: true,\n    });\n\n    reverseDeepMerge(field, {\n      id: getFieldId(`formly_${this.formId}`, field, field['index']),\n      hooks: {},\n      modelOptions: {},\n      templateOptions: !field.type || !field.key ? {} : {\n        label: '',\n        placeholder: '',\n        focus: false,\n        disabled: false,\n      },\n    });\n\n    if (field.lifecycle) {\n      console.warn(`NgxFormly: 'lifecycle' is deprecated since v5.0, use 'hooks' instead.`);\n    }\n\n    if (\n      field.type !== 'formly-template'\n      && (\n        field.template\n        || (field.expressionProperties && field.expressionProperties.template)\n      )\n    ) {\n      if (field.type) {\n        console.warn(`NgxFormly: passing 'type' property is not allowed when 'template' is set.`);\n      }\n      field.type = 'formly-template';\n    }\n\n    if (!field.type && field.fieldGroup) {\n      field.type = 'formly-group';\n    }\n\n    if (field.type) {\n      this.formlyConfig.getMergedField(field);\n    }\n\n    if (field.parent && !field['autoClear'] && !isUndefined(field.defaultValue) && isUndefined(getFieldValue(field))) {\n      assignFieldValue(field, field.defaultValue);\n    }\n\n    this.initFieldWrappers(field);\n  }\n\n  private initFieldWrappers(field: FormlyFieldConfig) {\n    field.wrappers = field.wrappers || [];\n    const fieldTemplateManipulators: TemplateManipulators = {\n      preWrapper: [],\n      postWrapper: [],\n      ...(field.templateOptions.templateManipulators || {}),\n    };\n\n    field.wrappers = [\n      ...this.formlyConfig.templateManipulators.preWrapper.map(m => m(field)),\n      ...fieldTemplateManipulators.preWrapper.map(m => m(field)),\n      ...field.wrappers,\n      ...this.formlyConfig.templateManipulators.postWrapper.map(m => m(field)),\n      ...fieldTemplateManipulators.postWrapper.map(m => m(field)),\n    ].filter((el, i, a) => el && i === a.indexOf(el));\n  }\n\n  private getFieldComponentInstance(field: FormlyFieldConfigCache) {\n    const componentRef = this.formlyConfig.resolveFieldTypeRef(field);\n    const instance: FormlyExtension = componentRef ? componentRef.instance as any : {};\n\n    return {\n      prePopulate: () => instance.prePopulate && instance.prePopulate(field),\n      onPopulate: () => instance.onPopulate && instance.onPopulate(field),\n      postPopulate: () => instance.postPopulate && instance.postPopulate(field),\n    };\n  }\n}\n","import { NgModule, ModuleWithProviders, ANALYZE_FOR_ENTRY_COMPONENTS, Inject, Optional } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormlyForm } from './components/formly.form';\nimport { FormlyField } from './components/formly.field';\nimport { FormlyAttributes } from './components/formly.attributes';\nimport { FormlyConfig, ConfigOption, FORMLY_CONFIG } from './services/formly.config';\nimport { FormlyFormBuilder } from './services/formly.form.builder';\nimport { FormlyGroup } from './templates/formly.group';\nimport { FormlyValidationMessage } from './templates/formly.validation-message';\nimport { FormlyTemplateType } from './templates/field-template.type';\n\nimport { FieldExpressionExtension } from './extensions/field-expression/field-expression';\nimport { FieldValidationExtension } from './extensions/field-validation/field-validation';\nimport { FieldFormExtension } from './extensions/field-form/field-form';\nimport { CoreExtension } from './extensions/core/core';\n\nexport function defaultFormlyConfig(formlyConfig: FormlyConfig): ConfigOption {\n  return {\n    types: [\n      { name: 'formly-group', component: FormlyGroup },\n      { name: 'formly-template', component: FormlyTemplateType },\n    ],\n    extensions: [\n      { name: 'core', extension: new CoreExtension(formlyConfig) },\n      { name: 'field-validation', extension: new FieldValidationExtension(formlyConfig) },\n      { name: 'field-form', extension: new FieldFormExtension(formlyConfig) },\n      { name: 'field-expression', extension: new FieldExpressionExtension() },\n    ],\n  };\n}\n\n@NgModule({\n  declarations: [\n    FormlyForm,\n    FormlyField,\n    FormlyAttributes,\n    FormlyGroup,\n    FormlyValidationMessage,\n    FormlyTemplateType,\n  ],\n  entryComponents: [FormlyGroup, FormlyTemplateType],\n  exports: [FormlyForm, FormlyField, FormlyAttributes, FormlyGroup, FormlyValidationMessage],\n  imports: [CommonModule],\n})\nexport class FormlyModule {\n  static forRoot(config: ConfigOption = {}): ModuleWithProviders<FormlyModule> {\n    return {\n      ngModule: FormlyModule,\n      providers: [\n        { provide: FORMLY_CONFIG, multi: true, useFactory: defaultFormlyConfig, deps: [FormlyConfig] },\n        { provide: FORMLY_CONFIG, useValue: config, multi: true },\n        { provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: config, multi: true },\n        FormlyConfig,\n        FormlyFormBuilder,\n      ],\n    };\n  }\n\n  static forChild(config: ConfigOption = {}): ModuleWithProviders<FormlyModule> {\n    return {\n      ngModule: FormlyModule,\n      providers: [\n        { provide: FORMLY_CONFIG, useValue: config, multi: true },\n        { provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: config, multi: true },\n        FormlyFormBuilder,\n      ],\n    };\n  }\n\n  constructor(\n    configService: FormlyConfig,\n    @Optional() @Inject(FORMLY_CONFIG) configs: ConfigOption[] = [],\n  ) {\n    if (!configs) {\n      return;\n    }\n\n    configs.forEach(config => configService.addConfig(config));\n  }\n}\n"]}