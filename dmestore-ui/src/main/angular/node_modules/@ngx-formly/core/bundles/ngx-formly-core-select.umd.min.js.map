{"version":3,"sources":["ng://@ngx-formly/core/select/select-options.pipe.ts","ng://@ngx-formly/core/select/select.module.ts"],"names":["FormlySelectOptionsPipe","prototype","transform","options","field","_this","this","Observable","observableOf","pipe","map","value","toOptions","gOptions","groups","to","templateOptions","_flatOptions","option","getGroupProp","push","label","group","toOption","item","getLabelProp","getValueProp","disabled","getDisabledProp","labelProp","shouldUseLegacyOption","console","warn","valueProp","key","disabledProp","groupProp","Pipe","args","name","FormlySelectModule","NgModule","declarations","exports"],"mappings":"6cAAA,IAAAA,EAAA,WAKA,SAAAA,KA6FA,OA3FEA,EAAAC,UAAAC,UAAA,SAAUC,EAASC,GAAnB,IAAAC,EAAAC,KAKE,OAJMH,aAAmBI,EAAAA,aACvBJ,EAAUK,EAAAA,GAAaL,IAGlB,EAA6BM,KAClCC,EAAAA,IAAG,SAACC,GAAS,OAAAN,EAAKO,UAAUD,EAAOP,GAAS,QAIxCJ,EAAAC,UAAAW,UAAR,SAAkBT,EAASC,GAA3B,IAAAC,EAAAC,KACQO,EAAkB,GACtBC,EAAmC,GACnCC,EAAKX,EAAMY,iBAAmB,GAmBhC,OAjBAD,EAAGE,cAAe,EAClBd,EAAQO,IAAG,SAAEQ,GACNb,EAAKc,aAAaD,EAAQH,IAG7BA,EAAGE,cAAe,EACbH,EAAOT,EAAKc,aAAaD,EAAQH,MACpCD,EAAOT,EAAKc,aAAaD,EAAQH,IAAO,GACxCF,EAASO,KAAK,CACZC,MAAOhB,EAAKc,aAAaD,EAAQH,GACjCO,MAAOR,EAAOT,EAAKc,aAAaD,EAAQH,OAG5CD,EAAOT,EAAKc,aAAaD,EAAQH,IAAKK,KAAKf,EAAKkB,SAASL,EAAQH,KAVjEF,EAASO,KAAKf,EAAKkB,SAASL,EAAQH,MAcjCF,GAGDb,EAAAC,UAAAsB,SAAR,SAAiBC,EAAMT,GACrB,MAAO,CACLM,MAAOf,KAAKmB,aAAaD,EAAMT,GAC/BJ,MAAOL,KAAKoB,aAAaF,EAAMT,GAC/BY,SAAUrB,KAAKsB,gBAAgBJ,EAAMT,KAAO,IAIxCf,EAAAC,UAAAwB,aAAR,SAAqBD,EAAMT,GACzB,MAA4B,mBAAjBA,EAAGc,UACLd,EAAGc,UAAUL,GAGlBlB,KAAKwB,sBAAsBN,EAAMT,IACnCgB,QAAQC,KAAK,0GACNR,EAAKb,OAGPa,EAAKT,EAAGc,WAAa,UAGtB7B,EAAAC,UAAAyB,aAAR,SAAqBF,EAAMT,GACzB,MAA4B,mBAAjBA,EAAGkB,UACLlB,EAAGkB,UAAUT,GAGlBlB,KAAKwB,sBAAsBN,EAAMT,GAC5BS,EAAKU,IAGPV,EAAKT,EAAGkB,WAAa,UAGtBjC,EAAAC,UAAA2B,gBAAR,SAAwBJ,EAAMT,GAC5B,MAA+B,mBAApBA,EAAGoB,aACLpB,EAAGoB,aAAaX,GAElBA,EAAKT,EAAGoB,cAAgB,aAGzBnC,EAAAC,UAAAkB,aAAR,SAAqBK,EAAMT,GACzB,MAA4B,mBAAjBA,EAAGqB,UACLrB,EAAGqB,UAAUZ,GAGfA,EAAKT,EAAGqB,WAAa,UAGtBpC,EAAAC,UAAA6B,sBAAR,SAA8BN,EAAMT,GAClC,OAAQA,EAAGkB,YACLlB,EAAGc,WACI,MAARL,GACgB,iBAATA,GACP,QAASA,GACT,UAAWA,uBA3FnBa,EAAAA,KAAIC,KAAA,CAAC,CAAEC,KAAM,0BA6FdvC,EAlGA,GCAAwC,EAAA,WAGA,SAAAA,KAIkC,2BAJjCC,EAAAA,SAAQH,KAAA,CAAC,CACRI,aAAc,CAAC1C,GACf2C,QAAS,CAAC3C,OAEsBwC,EAPlC","sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\nimport { Observable, of as observableOf } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { FormlyFieldConfig } from '@ngx-formly/core';\n\n@Pipe({ name: 'formlySelectOptions' })\nexport class FormlySelectOptionsPipe implements PipeTransform {\n  transform(options, field?: FormlyFieldConfig) {\n    if (!(options instanceof Observable)) {\n      options = observableOf(options);\n    }\n\n    return (options as Observable<any>).pipe(\n      map(value => this.toOptions(value, field || {})),\n    );\n  }\n\n  private toOptions(options, field: FormlyFieldConfig) {\n    const gOptions: any[] = [],\n      groups: { [key: string]: any[] } = {},\n      to = field.templateOptions || {};\n\n    to._flatOptions = true;\n    options.map((option: any) => {\n      if (!this.getGroupProp(option, to)) {\n        gOptions.push(this.toOption(option, to));\n      } else {\n        to._flatOptions = false;\n        if (!groups[this.getGroupProp(option, to)]) {\n          groups[this.getGroupProp(option, to)] = [];\n          gOptions.push({\n            label: this.getGroupProp(option, to),\n            group: groups[this.getGroupProp(option, to)],\n          });\n        }\n        groups[this.getGroupProp(option, to)].push(this.toOption(option, to));\n      }\n    });\n\n    return gOptions;\n  }\n\n  private toOption(item, to) {\n    return {\n      label: this.getLabelProp(item, to),\n      value: this.getValueProp(item, to),\n      disabled: this.getDisabledProp(item, to) || false,\n    };\n  }\n\n  private getLabelProp(item, to): string {\n    if (typeof to.labelProp === 'function') {\n      return to.labelProp(item);\n    }\n\n    if (this.shouldUseLegacyOption(item, to)) {\n      console.warn(`NgxFormly: legacy select option '{key, value}' is deprecated since v5.5, use '{value, label}' instead.`);\n      return item.value;\n    }\n\n    return item[to.labelProp || 'label'];\n  }\n\n  private getValueProp(item, to): string {\n    if (typeof to.valueProp === 'function') {\n      return to.valueProp(item);\n    }\n\n    if (this.shouldUseLegacyOption(item, to)) {\n      return item.key;\n    }\n\n    return item[to.valueProp || 'value'];\n  }\n\n  private getDisabledProp(item, to): string {\n    if (typeof to.disabledProp === 'function') {\n      return to.disabledProp(item);\n    }\n    return item[to.disabledProp || 'disabled'];\n  }\n\n  private getGroupProp(item, to): string {\n    if (typeof to.groupProp === 'function') {\n      return to.groupProp(item);\n    }\n\n    return item[to.groupProp || 'group'];\n  }\n\n  private shouldUseLegacyOption(item, to) {\n    return !to.valueProp\n      && !to.labelProp\n      && item != null\n      && typeof item === 'object'\n      && 'key' in item\n      && 'value' in item;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { FormlySelectOptionsPipe } from './select-options.pipe';\n\n@NgModule({\n  declarations: [FormlySelectOptionsPipe],\n  exports: [FormlySelectOptionsPipe],\n})\nexport class FormlySelectModule { }\n"]}