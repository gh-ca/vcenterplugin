{"version":3,"file":"ngx-permissions.umd.js","sources":["../../../node_modules/tslib/tslib.es6.js","../../../projects/ngx-permissions/src/lib/enums/predefined-strategies.enum.ts","../../../projects/ngx-permissions/src/lib/store/configuration.store.ts","../../../projects/ngx-permissions/src/lib/service/configuration.service.ts","../../../projects/ngx-permissions/src/lib/store/permissions.store.ts","../../../projects/ngx-permissions/src/lib/utils/utils.ts","../../../projects/ngx-permissions/src/lib/service/permissions.service.ts","../../../projects/ngx-permissions/src/lib/store/roles.store.ts","../../../projects/ngx-permissions/src/lib/service/roles.service.ts","../../../projects/ngx-permissions/src/lib/directive/permissions.directive.ts","../../../projects/ngx-permissions/src/lib/model/permissions-router-data.model.ts","../../../projects/ngx-permissions/src/lib/router/permissions-guard.service.ts","../../../projects/ngx-permissions/src/lib/testing/permissions-allow.directive.stub.ts","../../../projects/ngx-permissions/src/lib/testing/permissions-restrict.directive.stub.ts","../../../projects/ngx-permissions/src/lib/index.ts","../../../projects/ngx-permissions/src/public-api.ts","../../../projects/ngx-permissions/src/ngx-permissions.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export const NgxPermissionsPredefinedStrategies = {\n    REMOVE: 'remove',\n    SHOW: 'show'\n};\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { Strategy } from '../service/configuration.service';\n\n@Injectable()\nexport class NgxPermissionsConfigurationStore {\n\n    public strategiesSource: BehaviorSubject<Strategy> = new BehaviorSubject<Strategy>({});\n    public strategies$: Observable<Strategy> = this.strategiesSource.asObservable();\n\n    public onAuthorisedDefaultStrategy: string | undefined;\n    public onUnAuthorisedDefaultStrategy: string | undefined;\n\n    constructor() {\n    }\n\n}\n","import { Inject, Injectable, InjectionToken, TemplateRef } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { NgxPermissionsPredefinedStrategies } from '../enums/predefined-strategies.enum';\nimport { NgxPermissionsConfigurationStore } from '../store/configuration.store';\n\nexport type StrategyFunction = (templateRef?: TemplateRef<any>) => void;\n\nexport interface Strategy {\n    [key: string]: StrategyFunction;\n}\n\nexport const USE_CONFIGURATION_STORE = new InjectionToken('USE_CONFIGURATION_STORE');\n\n@Injectable()\nexport class NgxPermissionsConfigurationService {\n\n    private strategiesSource: BehaviorSubject<Strategy>;\n    public strategies$: Observable<Strategy>;\n    public onAuthorisedDefaultStrategy: string | undefined;\n    public onUnAuthorisedDefaultStrategy: string | undefined;\n\n    constructor(\n        @Inject(USE_CONFIGURATION_STORE) private isolate: boolean = false,\n        private configurationStore: NgxPermissionsConfigurationStore\n    ) {\n        this.strategiesSource = this.isolate ? new BehaviorSubject<Strategy>({}) : this.configurationStore.strategiesSource;\n        this.strategies$ = this.strategiesSource.asObservable();\n\n        this.onAuthorisedDefaultStrategy = this.isolate ? undefined : this.configurationStore.onAuthorisedDefaultStrategy;\n        this.onUnAuthorisedDefaultStrategy = this.isolate ? undefined : this.configurationStore.onUnAuthorisedDefaultStrategy;\n\n    }\n\n    public setDefaultOnAuthorizedStrategy(name: string | 'remove' | 'show'): void {\n        if (this.isolate) {\n            this.onAuthorisedDefaultStrategy = this.getDefinedStrategy(name);\n        } else {\n            this.configurationStore.onAuthorisedDefaultStrategy = this.getDefinedStrategy(name);\n            this.onAuthorisedDefaultStrategy = this.configurationStore.onAuthorisedDefaultStrategy;\n        }\n    }\n\n    public setDefaultOnUnauthorizedStrategy(name: string | 'remove' | 'show'): void {\n        if (this.isolate) {\n            this.onUnAuthorisedDefaultStrategy = this.getDefinedStrategy(name);\n        } else {\n            this.configurationStore.onUnAuthorisedDefaultStrategy = this.getDefinedStrategy(name);\n            this.onUnAuthorisedDefaultStrategy = this.configurationStore.onUnAuthorisedDefaultStrategy;\n        }\n    }\n\n    public addPermissionStrategy(key: string, func: StrategyFunction): void {\n        this.strategiesSource.value[key] = func;\n    }\n\n    public getStrategy(key: string) {\n        return this.strategiesSource.value[key];\n    }\n\n    public getAllStrategies() {\n        return this.strategiesSource.value;\n    }\n\n    private getDefinedStrategy(name: string | 'remove' | 'show') {\n        if (this.strategiesSource.value[name] || this.isPredefinedStrategy(name)) {\n            return name;\n        } else {\n            throw new Error(`No ' ${name} ' strategy is found please define one`);\n        }\n    }\n\n    private isPredefinedStrategy(strategy: string): boolean {\n        return strategy === NgxPermissionsPredefinedStrategies.SHOW || strategy === NgxPermissionsPredefinedStrategies.REMOVE;\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable()\nexport class NgxPermissionsStore {\n\n    public permissionsSource = new BehaviorSubject<{}>({});\n    public permissions$: Observable<{}> = this.permissionsSource.asObservable();\n\n    constructor() {\n    }\n\n}\n","export function isFunction<T>(value: any): value is T {\n    return typeof value === 'function';\n}\n\nexport function isPlainObject(value: any): boolean {\n    if (Object.prototype.toString.call(value) !== '[object Object]') {\n        return false;\n    } else {\n        const prototype = Object.getPrototypeOf(value);\n        return prototype === null || prototype === Object.prototype;\n    }\n}\n\nexport function isString(value: any): value is string {\n    return !!value && typeof value === 'string';\n}\n\nexport function isBoolean(value: any): value is boolean {\n    return typeof value === 'boolean';\n}\n\nexport function isPromise(promise: any) {\n    return Object.prototype.toString.call(promise) === '[object Promise]';\n}\n\nexport function notEmptyValue(value: string | string[]): boolean {\n    if (Array.isArray(value)) {\n        return value.length > 0;\n    }\n    return !!value;\n}\n\nexport function transformStringToArray(value: string | string[]): string[] {\n    if (isString(value)) {\n        return [value];\n    }\n    return value;\n}\n","import { Inject, Injectable, InjectionToken } from '@angular/core';\n\nimport { BehaviorSubject, from, Observable, ObservableInput, of } from 'rxjs';\nimport { catchError, first, map, mergeAll, switchMap } from 'rxjs/operators';\n\nimport { NgxPermission } from '../model/permission.model';\nimport { ValidationFn } from '../model/permissions-router-data.model';\nimport { NgxPermissionsStore } from '../store/permissions.store';\n\nimport { isBoolean, isFunction, transformStringToArray } from '../utils/utils';\n\nexport interface NgxPermissionsObject {\n    [name: string]: NgxPermission;\n}\n\nexport const USE_PERMISSIONS_STORE = new InjectionToken('USE_PERMISSIONS_STORE');\n\n@Injectable()\nexport class NgxPermissionsService {\n\n    private permissionsSource: BehaviorSubject<NgxPermissionsObject>;\n    public permissions$: Observable<NgxPermissionsObject>;\n\n    constructor(\n        @Inject(USE_PERMISSIONS_STORE) private isolate: boolean = false,\n        private permissionsStore: NgxPermissionsStore\n    ) {\n        this.permissionsSource = isolate ? new BehaviorSubject<NgxPermissionsObject>({}) : permissionsStore.permissionsSource;\n        this.permissions$ = this.permissionsSource.asObservable();\n    }\n\n    /**\n     * Remove all permissions from permissions source\n     */\n    public flushPermissions(): void {\n        this.permissionsSource.next({});\n    }\n\n    public hasPermission(permission: string | string[]): Promise<boolean> {\n        if (!permission || (Array.isArray(permission) && permission.length === 0)) {\n            return Promise.resolve(true);\n        }\n\n        permission = transformStringToArray(permission);\n        return this.hasArrayPermission(permission);\n    }\n\n    public loadPermissions(permissions: string[], validationFunction?: ValidationFn): void {\n        const newPermissions = permissions.reduce(\n            (source, name) => this.reducePermission(source, name, validationFunction), {}\n        );\n        this.permissionsSource.next(newPermissions);\n    }\n\n    public addPermission(permission: string | string[], validationFunction?: ValidationFn): void {\n        if (Array.isArray(permission)) {\n            const permissions = permission.reduce(\n                (source, name) => this.reducePermission(source, name, validationFunction), this.permissionsSource.value\n            );\n\n            this.permissionsSource.next(permissions);\n        } else {\n            const permissions = this.reducePermission(this.permissionsSource.value, permission, validationFunction);\n\n            this.permissionsSource.next(permissions);\n        }\n    }\n\n    public removePermission(permissionName: string): void {\n        const permissions = {\n            ...this.permissionsSource.value\n        };\n        delete permissions[permissionName];\n        this.permissionsSource.next(permissions);\n    }\n\n    public getPermission(name: string): NgxPermission {\n        return this.permissionsSource.value[name];\n    }\n\n    public getPermissions(): NgxPermissionsObject {\n        return this.permissionsSource.value;\n    }\n\n    private reducePermission(source: NgxPermissionsObject, name: string, validationFunction?: ValidationFn): NgxPermissionsObject {\n        if (!!validationFunction && isFunction(validationFunction)) {\n            return {\n                ...source,\n                [name]: {name, validationFunction}\n            };\n        }\n        return {\n            ...source,\n            [name]: {name}\n        };\n    }\n\n    private hasArrayPermission(permissions: string[]): Promise<boolean> {\n        const promises: Observable<boolean>[] = permissions.map(key => {\n            if (this.hasPermissionValidationFunction(key)) {\n                const validationFunction = this.permissionsSource.value[key].validationFunction;\n                const immutableValue = {...this.permissionsSource.value};\n\n                return of(null).pipe(\n                    map(() => validationFunction(key, immutableValue)),\n                    switchMap((promise: Promise<boolean> | boolean): ObservableInput<boolean> => isBoolean(promise) ?\n                        of(promise as boolean) : promise as Promise<boolean>),\n                    catchError(() => of(false))\n                );\n            }\n\n            // check for name of the permission if there is no validation function\n            return of(!!this.permissionsSource.value[key]);\n        });\n\n        return from(promises).pipe(\n            mergeAll(),\n            first((data) => data !== false, false),\n            map((data) => data !== false)\n        ).toPromise().then((data: any) => data);\n    }\n\n    private hasPermissionValidationFunction(key: string): boolean {\n        return !!this.permissionsSource.value[key] &&\n            !!this.permissionsSource.value[key].validationFunction &&\n            isFunction(this.permissionsSource.value[key].validationFunction);\n    }\n\n}\n","import { BehaviorSubject, Observable } from 'rxjs';\n\nexport class NgxRolesStore {\n\n    public rolesSource = new BehaviorSubject<{}>({});\n\n    public roles$: Observable<{}> = this.rolesSource.asObservable();\n\n}\n","import { Inject, Injectable, InjectionToken } from '@angular/core';\n\nimport { BehaviorSubject, from, Observable, ObservableInput, of } from 'rxjs';\nimport { catchError, every, first, map, mergeAll, mergeMap, switchMap } from 'rxjs/operators';\nimport { ValidationFn } from '../model/permissions-router-data.model';\n\nimport { NgxRole } from '../model/role.model';\nimport { NgxRolesStore } from '../store/roles.store';\nimport { isBoolean, isFunction, isPromise, transformStringToArray } from '../utils/utils';\nimport { NgxPermissionsService } from './permissions.service';\n\nexport const USE_ROLES_STORE = new InjectionToken('USE_ROLES_STORE');\n\nexport interface NgxRolesObject {\n    [name: string]: NgxRole;\n}\n\n@Injectable()\nexport class NgxRolesService {\n\n    private rolesSource: BehaviorSubject<NgxRolesObject>;\n\n    public roles$: Observable<NgxRolesObject>;\n\n    constructor(\n        @Inject(USE_ROLES_STORE) private isolate: boolean = false,\n        private rolesStore: NgxRolesStore,\n        private permissionsService: NgxPermissionsService\n    ) {\n        this.rolesSource = this.isolate ? new BehaviorSubject<NgxRolesObject>({}) : this.rolesStore.rolesSource;\n        this.roles$ = this.rolesSource.asObservable();\n    }\n\n    public addRole(name: string, validationFunction: ValidationFn | string[]) {\n        const roles = {\n            ...this.rolesSource.value,\n            [name]: {name, validationFunction}\n        };\n        this.rolesSource.next(roles);\n    }\n\n    public addRoles(rolesObj: { [name: string]: ValidationFn | string[] }) {\n        Object.keys(rolesObj).forEach((key, index) => {\n            this.addRole(key, rolesObj[key]);\n        });\n    }\n\n    public flushRoles() {\n        this.rolesSource.next({});\n    }\n\n    public removeRole(roleName: string) {\n        const roles = {\n            ...this.rolesSource.value\n        };\n        delete roles[roleName];\n        this.rolesSource.next(roles);\n    }\n\n    public getRoles() {\n        return this.rolesSource.value;\n    }\n\n    public getRole(name: string) {\n        return this.rolesSource.value[name];\n    }\n\n    public hasOnlyRoles(names: string | string[]): Promise<boolean> {\n        const isNamesEmpty = !names || (Array.isArray(names) && names.length === 0);\n\n        if (isNamesEmpty) {\n            return Promise.resolve(true);\n        }\n\n        names = transformStringToArray(names);\n\n        return Promise.all([this.hasRoleKey(names), this.hasRolePermission(this.rolesSource.value, names)])\n            .then(([hasRoles, hasPermissions]: [boolean, boolean]) => {\n                return hasRoles || hasPermissions;\n            });\n    }\n\n    private hasRoleKey(roleName: string[]): Promise<boolean> {\n        const promises: Observable<boolean>[] = roleName.map((key) => {\n            const hasValidationFunction = !!this.rolesSource.value[key] &&\n                                          !!this.rolesSource.value[key].validationFunction &&\n                                          isFunction(this.rolesSource.value[key].validationFunction);\n\n            if (hasValidationFunction && !isPromise(this.rolesSource.value[key].validationFunction)) {\n                const validationFunction = this.rolesSource.value[key].validationFunction as ValidationFn;\n                const immutableValue = {...this.rolesSource.value};\n\n                return of(null).pipe(\n                    map(() => validationFunction(key, immutableValue)),\n                    switchMap((promise: Promise<boolean> | boolean): ObservableInput<boolean> => isBoolean(promise) ?\n                        of(promise as boolean) : promise as Promise<boolean>),\n                    catchError(() => of(false))\n                );\n            }\n\n            return of(false);\n        });\n\n        return from(promises).pipe(\n            mergeAll(),\n            first((data: any) => data !== false, false),\n            map((data) => data !== false)\n        ).toPromise().then((data: any) => data);\n    }\n\n    private hasRolePermission(roles: NgxRolesObject, roleNames: string[]): Promise<boolean> {\n        return from(roleNames).pipe(\n            mergeMap((key) => {\n                if (roles[key] && Array.isArray(roles[key].validationFunction)) {\n                    return from(roles[key].validationFunction).pipe(\n                        mergeMap((permission) => this.permissionsService.hasPermission(permission)),\n                        every(hasPermission => hasPermission === true)\n                    );\n                }\n\n                return of(false);\n            }),\n            first(hasPermission => hasPermission === true, false)\n        ).toPromise();\n    }\n\n}\n","import {\n    ChangeDetectorRef,\n    Directive,\n    EventEmitter,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Output,\n    SimpleChanges,\n    TemplateRef,\n    ViewContainerRef\n} from '@angular/core';\n\nimport { merge, Subscription } from 'rxjs';\nimport { skip, take } from 'rxjs/operators';\n\nimport { NgxPermissionsPredefinedStrategies } from '../enums/predefined-strategies.enum';\nimport { NgxPermissionsConfigurationService, StrategyFunction } from '../service/configuration.service';\nimport { NgxPermissionsService } from '../service/permissions.service';\nimport { NgxRolesService } from '../service/roles.service';\nimport { isBoolean, isFunction, isString, notEmptyValue } from '../utils/utils';\n\n@Directive({\n    selector: '[ngxPermissionsOnly],[ngxPermissionsExcept]'\n})\nexport class NgxPermissionsDirective implements OnInit, OnDestroy, OnChanges  {\n\n    @Input() ngxPermissionsOnly: string | string[];\n    @Input() ngxPermissionsOnlyThen: TemplateRef<any>;\n    @Input() ngxPermissionsOnlyElse: TemplateRef<any>;\n\n    @Input() ngxPermissionsExcept: string | string[];\n    @Input() ngxPermissionsExceptElse: TemplateRef<any>;\n    @Input() ngxPermissionsExceptThen: TemplateRef<any>;\n\n    @Input() ngxPermissionsThen: TemplateRef<any>;\n    @Input() ngxPermissionsElse: TemplateRef<any>;\n\n    @Input() ngxPermissionsOnlyAuthorisedStrategy: string | StrategyFunction;\n    @Input() ngxPermissionsOnlyUnauthorisedStrategy: string | StrategyFunction;\n\n    @Input() ngxPermissionsExceptUnauthorisedStrategy: string | StrategyFunction;\n    @Input() ngxPermissionsExceptAuthorisedStrategy: string | StrategyFunction;\n\n    @Input() ngxPermissionsUnauthorisedStrategy: string | StrategyFunction;\n    @Input() ngxPermissionsAuthorisedStrategy: string | StrategyFunction;\n\n    @Output() permissionsAuthorized = new EventEmitter();\n    @Output() permissionsUnauthorized = new EventEmitter();\n\n    private initPermissionSubscription: Subscription;\n    // skip first run cause merge will fire twice\n    private firstMergeUnusedRun = 1;\n    private currentAuthorizedState: boolean;\n\n    constructor(\n        private permissionsService: NgxPermissionsService,\n        private configurationService: NgxPermissionsConfigurationService,\n        private rolesService: NgxRolesService,\n        private viewContainer: ViewContainerRef,\n        private changeDetector: ChangeDetectorRef,\n        private templateRef: TemplateRef<any>\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.viewContainer.clear();\n        this.initPermissionSubscription = this.validateExceptOnlyPermissions();\n    }\n\n\n    ngOnChanges(changes: SimpleChanges): void {\n        const onlyChanges = changes.ngxPermissionsOnly;\n        const exceptChanges = changes.ngxPermissionsExcept;\n        if (onlyChanges || exceptChanges) {\n            // Due to bug when you pass empty array\n            if (onlyChanges && onlyChanges.firstChange) {\n                return;\n            }\n            if (exceptChanges && exceptChanges.firstChange) {\n                return;\n            }\n\n            merge(this.permissionsService.permissions$, this.rolesService.roles$)\n                .pipe(skip(this.firstMergeUnusedRun), take(1))\n                .subscribe(() => {\n                    if (notEmptyValue(this.ngxPermissionsExcept)) {\n                        this.validateExceptAndOnlyPermissions();\n                        return;\n                    }\n\n                    if (notEmptyValue(this.ngxPermissionsOnly)) {\n                        this.validateOnlyPermissions();\n                        return;\n                    }\n\n                    this.handleAuthorisedPermission(this.getAuthorisedTemplates());\n                });\n        }\n    }\n\n    ngOnDestroy(): void {\n        if (this.initPermissionSubscription) {\n            this.initPermissionSubscription.unsubscribe();\n        }\n    }\n\n    private validateExceptOnlyPermissions(): Subscription {\n        return merge(this.permissionsService.permissions$, this.rolesService.roles$)\n            .pipe(skip(this.firstMergeUnusedRun))\n            .subscribe(() => {\n                if (notEmptyValue(this.ngxPermissionsExcept)) {\n                    this.validateExceptAndOnlyPermissions();\n                    return;\n                }\n\n                if (notEmptyValue(this.ngxPermissionsOnly)) {\n                    this.validateOnlyPermissions();\n                    return;\n                }\n                this.handleAuthorisedPermission(this.getAuthorisedTemplates());\n            });\n    }\n\n    private validateExceptAndOnlyPermissions(): void {\n        Promise\n            .all([\n              this.permissionsService.hasPermission(this.ngxPermissionsExcept),\n              this.rolesService.hasOnlyRoles(this.ngxPermissionsExcept)\n            ])\n            .then(([hasPermission, hasRole]) => {\n                if (hasPermission || hasRole) {\n                    this.handleUnauthorisedPermission(this.ngxPermissionsExceptElse || this.ngxPermissionsElse);\n                    return;\n                }\n\n                if (!!this.ngxPermissionsOnly) {\n                    throw false;\n                }\n\n                this.handleAuthorisedPermission(this.ngxPermissionsExceptThen || this.ngxPermissionsThen || this.templateRef);\n            })\n            .catch(() => {\n                if (!!this.ngxPermissionsOnly) {\n                    this.validateOnlyPermissions();\n                } else {\n                    this.handleAuthorisedPermission(this.ngxPermissionsExceptThen || this.ngxPermissionsThen || this.templateRef);\n                }\n        });\n    }\n\n    private validateOnlyPermissions(): void {\n        Promise\n            .all([this.permissionsService.hasPermission(this.ngxPermissionsOnly), this.rolesService.hasOnlyRoles(this.ngxPermissionsOnly)])\n            .then(([hasPermissions, hasRoles]) => {\n                if (hasPermissions || hasRoles) {\n                    this.handleAuthorisedPermission(this.ngxPermissionsOnlyThen || this.ngxPermissionsThen || this.templateRef);\n                } else {\n                    this.handleUnauthorisedPermission(this.ngxPermissionsOnlyElse || this.ngxPermissionsElse);\n                }\n            })\n          .catch(() => {\n                this.handleUnauthorisedPermission(this.ngxPermissionsOnlyElse || this.ngxPermissionsElse);\n        });\n    }\n\n    private handleUnauthorisedPermission(template: TemplateRef<any>): void {\n        if (isBoolean(this.currentAuthorizedState) && !this.currentAuthorizedState) {\n            return;\n        }\n\n        this.currentAuthorizedState = false;\n        this.permissionsUnauthorized.emit();\n\n        if (this.getUnAuthorizedStrategyInput()) {\n            this.applyStrategyAccordingToStrategyType(this.getUnAuthorizedStrategyInput());\n            return;\n        }\n\n        if (this.configurationService.onUnAuthorisedDefaultStrategy && !this.elseBlockDefined()) {\n            this.applyStrategy(this.configurationService.onUnAuthorisedDefaultStrategy);\n        } else {\n            this.showTemplateBlockInView(template);\n        }\n\n    }\n\n    private handleAuthorisedPermission(template: TemplateRef<any>): void {\n        if (isBoolean(this.currentAuthorizedState) && this.currentAuthorizedState) {\n            return;\n        }\n\n        this.currentAuthorizedState = true;\n        this.permissionsAuthorized.emit();\n\n        if (this.getAuthorizedStrategyInput()) {\n            this.applyStrategyAccordingToStrategyType(this.getAuthorizedStrategyInput());\n            return;\n        }\n\n        if (this.configurationService.onAuthorisedDefaultStrategy && !this.thenBlockDefined()) {\n            this.applyStrategy(this.configurationService.onAuthorisedDefaultStrategy);\n        } else {\n            this.showTemplateBlockInView(template);\n        }\n    }\n\n    private applyStrategyAccordingToStrategyType(strategy: string | StrategyFunction): void {\n        if (isString(strategy)) {\n            this.applyStrategy(strategy);\n            return;\n        }\n\n        if (isFunction(strategy)) {\n            this.showTemplateBlockInView(this.templateRef);\n            (strategy as StrategyFunction)(this.templateRef);\n            return;\n        }\n    }\n\n    private showTemplateBlockInView(template: TemplateRef<any>): void {\n        this.viewContainer.clear();\n        if (!template) {\n            return;\n        }\n\n        this.viewContainer.createEmbeddedView(template);\n        this.changeDetector.markForCheck();\n    }\n\n    private getAuthorisedTemplates(): TemplateRef<any> {\n        return this.ngxPermissionsOnlyThen\n            || this.ngxPermissionsExceptThen\n            || this.ngxPermissionsThen\n            || this.templateRef;\n    }\n\n    private elseBlockDefined(): boolean {\n        return !!this.ngxPermissionsExceptElse || !!this.ngxPermissionsElse;\n    }\n\n    private thenBlockDefined() {\n        return !!this.ngxPermissionsExceptThen || !!this.ngxPermissionsThen;\n    }\n\n    private getAuthorizedStrategyInput() {\n        return this.ngxPermissionsOnlyAuthorisedStrategy ||\n            this.ngxPermissionsExceptAuthorisedStrategy ||\n            this.ngxPermissionsAuthorisedStrategy;\n    }\n\n    private getUnAuthorizedStrategyInput() {\n        return this.ngxPermissionsOnlyUnauthorisedStrategy ||\n            this.ngxPermissionsExceptUnauthorisedStrategy ||\n            this.ngxPermissionsUnauthorisedStrategy;\n    }\n\n    private applyStrategy(name: string) {\n        if (name === NgxPermissionsPredefinedStrategies.SHOW) {\n            this.showTemplateBlockInView(this.templateRef);\n            return;\n        }\n\n        if (name === NgxPermissionsPredefinedStrategies.REMOVE) {\n            this.viewContainer.clear();\n            return;\n        }\n        const strategy = this.configurationService.getStrategy(name);\n        this.showTemplateBlockInView(this.templateRef);\n        strategy(this.templateRef);\n    }\n}\n","import { ActivatedRouteSnapshot, NavigationExtras, Route, RouterStateSnapshot } from '@angular/router';\n\nexport interface NgxPermissionsRouterData {\n    only?: string | string[] | OnlyFn;\n    except?: string | string[] | ExceptFn;\n    redirectTo?: RedirectTo | RedirectToFn;\n}\n\nexport interface NgxRedirectToNavigationParameters {\n    navigationCommands: any[] | NavigationCommandsFn;\n    navigationExtras?: NavigationExtras | NavigationExtrasFn;\n}\n\nexport declare type OnlyFn = (route: ActivatedRouteSnapshot | Route, state?: RouterStateSnapshot) => string | string[];\nexport declare type ExceptFn = (route: ActivatedRouteSnapshot | Route, state?: RouterStateSnapshot) => string | string[];\n\nexport declare type RedirectTo =\n    string\n    | { [name: string]: NgxRedirectToNavigationParameters | string | RedirectToFn }\n    | NgxRedirectToNavigationParameters;\nexport declare type RedirectToFn =\n    (rejectedPermissionName?: string, route?: ActivatedRouteSnapshot | Route, state?: RouterStateSnapshot) => RedirectTo;\n\nexport declare type NavigationCommandsFn = (route: ActivatedRouteSnapshot | Route, state?: RouterStateSnapshot) => any[];\nexport declare type NavigationExtrasFn = (route: ActivatedRouteSnapshot | Route, state?: RouterStateSnapshot) => NavigationExtras;\nexport declare type ValidationFn = ((name?: string, store?: any) => Promise<void | string | boolean> | boolean | string[]);\n\nexport const DEFAULT_REDIRECT_KEY = 'default';\n","import { Injectable } from '@angular/core';\nimport {\n    ActivatedRouteSnapshot,\n    CanActivate,\n    CanActivateChild,\n    CanLoad,\n    NavigationExtras,\n    Route,\n    Router,\n    RouterStateSnapshot\n} from '@angular/router';\n\nimport { forkJoin, from, Observable, of } from 'rxjs';\nimport { first, mergeMap, tap } from 'rxjs/operators';\n\nimport {\n    DEFAULT_REDIRECT_KEY,\n    ExceptFn,\n    NavigationCommandsFn,\n    NavigationExtrasFn,\n    NgxPermissionsRouterData,\n    NgxRedirectToNavigationParameters,\n    OnlyFn,\n    RedirectTo,\n    RedirectToFn\n} from '../model/permissions-router-data.model';\nimport { NgxPermissionsService } from '../service/permissions.service';\nimport { NgxRolesService } from '../service/roles.service';\nimport { isFunction, isPlainObject, transformStringToArray } from '../utils/utils';\n\nexport interface NgxPermissionsData {\n    only?: string | string[];\n    except?: string | string[];\n    redirectTo?: RedirectTo | RedirectToFn;\n}\n\n@Injectable()\nexport class NgxPermissionsGuard implements CanActivate, CanLoad, CanActivateChild {\n\n    constructor(private permissionsService: NgxPermissionsService, private rolesService: NgxRolesService, private router: Router) {\n    }\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Promise<boolean> | boolean {\n        return this.hasPermissions(route, state);\n    }\n\n    canActivateChild(childRoute: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n        return this.hasPermissions(childRoute, state);\n    }\n\n    canLoad(route: Route): boolean | Observable<boolean> | Promise<boolean> {\n        return this.hasPermissions(route);\n    }\n\n    private hasPermissions(route: ActivatedRouteSnapshot | Route, state?: RouterStateSnapshot) {\n        const routeDataPermissions = !!route && route.data ? (route.data.permissions as NgxPermissionsRouterData) : {};\n        const permissions = this.transformPermission(routeDataPermissions, route, state);\n\n        if (this.isParameterAvailable(permissions.except)) {\n            return this.passingExceptPermissionsValidation(permissions, route, state);\n        }\n\n        if (this.isParameterAvailable(permissions.only)) {\n            return this.passingOnlyPermissionsValidation(permissions, route, state);\n        }\n\n        return true;\n    }\n\n    private transformPermission(\n        permissions: NgxPermissionsRouterData,\n        route: ActivatedRouteSnapshot | Route,\n        state?: RouterStateSnapshot\n    ): NgxPermissionsData {\n        const only = isFunction<OnlyFn>(permissions.only)\n            ? permissions.only(route, state)\n            : transformStringToArray(permissions.only);\n        const except = isFunction<ExceptFn>(permissions.except)\n            ? permissions.except(route, state)\n            : transformStringToArray(permissions.except);\n        const redirectTo = permissions.redirectTo;\n\n\n        return {\n            only,\n            except,\n            redirectTo\n        };\n    }\n\n    private isParameterAvailable(permission: string | string[]) {\n        return !!permission && permission.length > 0;\n    }\n\n    private passingExceptPermissionsValidation(\n        permissions: NgxPermissionsData,\n        route: ActivatedRouteSnapshot | Route,\n        state: RouterStateSnapshot\n    ): Promise<boolean> {\n        if (\n            !!permissions.redirectTo\n            && (\n                (isFunction<RedirectToFn>(permissions.redirectTo))\n                || (isPlainObject(permissions.redirectTo) && !this.isRedirectionWithParameters(permissions.redirectTo))\n            )\n        ) {\n            let failedPermission = '';\n\n            return from(permissions.except)\n                .pipe(\n                    mergeMap(permissionsExcept => {\n                        return forkJoin([\n                            this.permissionsService.hasPermission(permissionsExcept),\n                            this.rolesService.hasOnlyRoles(permissionsExcept)\n                        ]).pipe(\n                            tap(hasPermissions => {\n                                const dontHavePermissions = hasPermissions.every(hasPermission => hasPermission === false);\n\n                                if (!dontHavePermissions) {\n                                    failedPermission = permissionsExcept;\n                                }\n                            })\n                        );\n                    }),\n                    first(hasPermissions => hasPermissions.some(hasPermission => hasPermission === true), false),\n                    mergeMap(isAllFalse => {\n                        if (!!failedPermission) {\n                            this.handleRedirectOfFailedPermission(permissions, failedPermission, route, state);\n\n                            return of(false);\n                        }\n\n                        if (!isAllFalse && permissions.only) {\n                            return this.onlyRedirectCheck(permissions, route, state);\n                        }\n\n                        return of(!isAllFalse);\n                    })\n                )\n                .toPromise();\n        }\n\n        return Promise.all([\n            this.permissionsService.hasPermission(permissions.except),\n            this.rolesService.hasOnlyRoles(permissions.except)\n        ]).then(([hasPermission, hasRoles]) => {\n            if (hasPermission || hasRoles) {\n                if (permissions.redirectTo) {\n                    this.redirectToAnotherRoute(\n                        permissions.redirectTo,\n                        route,\n                        state\n                    );\n                }\n\n                return false;\n            }\n\n            if (permissions.only) {\n                return this.checkOnlyPermissions(permissions, route, state);\n            }\n            return true;\n        });\n    }\n\n    private redirectToAnotherRoute(\n        permissionRedirectTo: RedirectTo | RedirectToFn,\n        route: ActivatedRouteSnapshot | Route,\n        state?: RouterStateSnapshot,\n        failedPermissionName?: string\n    ): void {\n\n        const redirectTo = isFunction<RedirectToFn>(permissionRedirectTo)\n            ? permissionRedirectTo(failedPermissionName, route, state)\n            : permissionRedirectTo;\n\n        if (this.isRedirectionWithParameters(redirectTo)) {\n            redirectTo.navigationCommands = this.transformNavigationCommands(redirectTo.navigationCommands, route, state);\n            redirectTo.navigationExtras = this.transformNavigationExtras(redirectTo.navigationExtras, route, state);\n            this.router.navigate(redirectTo.navigationCommands, redirectTo.navigationExtras);\n            return;\n        }\n\n        if (Array.isArray(redirectTo)) {\n            this.router.navigate(redirectTo);\n        } else {\n            this.router.navigate([redirectTo]);\n        }\n    }\n\n    private isRedirectionWithParameters(object: any | NgxRedirectToNavigationParameters): object is NgxRedirectToNavigationParameters {\n        return (isPlainObject(object) && (!!object.navigationCommands || !!object.navigationExtras));\n    }\n\n    private transformNavigationCommands(\n        navigationCommands: any[] | NavigationCommandsFn,\n        route: ActivatedRouteSnapshot | Route,\n        state?: RouterStateSnapshot\n    ): any[] {\n        return isFunction<NavigationCommandsFn>(navigationCommands)\n            ? navigationCommands(route, state)\n            : navigationCommands;\n    }\n\n    private transformNavigationExtras(\n        navigationExtras: NavigationExtras | NavigationExtrasFn,\n        route: ActivatedRouteSnapshot | Route,\n        state?: RouterStateSnapshot\n    ): NavigationExtras {\n        return isFunction<NavigationExtrasFn>(navigationExtras)\n            ? navigationExtras(route, state)\n            : navigationExtras;\n    }\n\n    private onlyRedirectCheck(\n        permissions: NgxPermissionsData,\n        route: ActivatedRouteSnapshot | Route,\n        state?: RouterStateSnapshot\n    ): Promise<boolean> {\n        let failedPermission = '';\n\n        return from(permissions.only)\n            .pipe(\n                mergeMap(permissionsOnly => {\n                    return forkJoin([\n                        this.permissionsService.hasPermission(permissionsOnly),\n                        this.rolesService.hasOnlyRoles(permissionsOnly)\n                    ]).pipe(\n                        tap(hasPermissions => {\n                            const failed = hasPermissions.every(hasPermission => hasPermission === false);\n\n                            if (failed) {\n                                failedPermission = permissionsOnly;\n                            }\n                        })\n                    );\n                }),\n                first(hasPermissions => {\n                        if (isFunction<RedirectToFn>(permissions.redirectTo)) {\n                            return hasPermissions.some(hasPermission => hasPermission === true);\n                        }\n\n                        return hasPermissions.every(hasPermission => hasPermission === false);\n                    },\n                    false),\n                mergeMap(\n                    (pass: boolean): Observable<boolean> => {\n                        if (isFunction<RedirectToFn>(permissions.redirectTo)) {\n                            if (pass) {\n                                return of(true);\n                            } else {\n                                this.handleRedirectOfFailedPermission(permissions, failedPermission, route, state);\n                                return of(false);\n                            }\n                        } else {\n                            if (!!failedPermission) {\n                                this.handleRedirectOfFailedPermission(permissions, failedPermission, route, state);\n                            }\n                            return of(!pass);\n                        }\n                    }\n                )\n            )\n            .toPromise();\n    }\n\n    private handleRedirectOfFailedPermission(\n        permissions: NgxPermissionsData,\n        failedPermission: string,\n        route: ActivatedRouteSnapshot | Route,\n        state?: RouterStateSnapshot\n    ) {\n        if (this.isFailedPermissionPropertyOfRedirectTo(permissions, failedPermission)) {\n            this.redirectToAnotherRoute(permissions.redirectTo[failedPermission], route, state, failedPermission);\n        } else {\n            if (isFunction<RedirectToFn>(permissions.redirectTo)) {\n                this.redirectToAnotherRoute(permissions.redirectTo, route, state, failedPermission);\n            } else {\n                this.redirectToAnotherRoute(permissions.redirectTo[DEFAULT_REDIRECT_KEY], route, state, failedPermission);\n            }\n        }\n    }\n\n    private isFailedPermissionPropertyOfRedirectTo(permissions: NgxPermissionsData, failedPermission: string): boolean {\n        return (!!permissions.redirectTo && permissions.redirectTo[failedPermission]);\n    }\n\n    private checkOnlyPermissions(\n        purePermissions: NgxPermissionsData,\n        route: ActivatedRouteSnapshot | Route,\n        state?: RouterStateSnapshot\n    ): Promise<boolean> {\n        const permissions: NgxPermissionsData = {\n            ...purePermissions\n        };\n\n        return Promise.all([\n            this.permissionsService.hasPermission(permissions.only),\n            this.rolesService.hasOnlyRoles(permissions.only)\n        ]).then(([hasPermission, hasRole]) => {\n            if (hasPermission || hasRole) {\n                return true;\n            }\n\n            if (permissions.redirectTo) {\n                this.redirectToAnotherRoute(permissions.redirectTo, route, state);\n            }\n\n            return false;\n        });\n    }\n\n    private passingOnlyPermissionsValidation(\n        permissions: NgxPermissionsData,\n        route: ActivatedRouteSnapshot | Route,\n        state?: RouterStateSnapshot\n    ): Promise<boolean> {\n        if (\n            (isFunction<RedirectToFn>(permissions.redirectTo)\n                || isPlainObject(permissions.redirectTo) && !this.isRedirectionWithParameters(permissions.redirectTo))\n        ) {\n            return this.onlyRedirectCheck(permissions, route, state);\n        }\n        return this.checkOnlyPermissions(permissions, route, state);\n    }\n}\n","import { Directive, EventEmitter, Input, OnInit, Output, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { StrategyFunction } from '../service/configuration.service';\n\n@Directive({\n    selector: '[ngxPermissionsOnly],[ngxPermissionsExcept]'\n})\nexport class NgxPermissionsAllowStubDirective implements OnInit {\n\n    @Input() ngxPermissionsOnly: string | string[];\n    @Input() ngxPermissionsOnlyThen: TemplateRef<any>;\n    @Input() ngxPermissionsOnlyElse: TemplateRef<any>;\n\n    @Input() ngxPermissionsExcept: string | string[];\n    @Input() ngxPermissionsExceptElse: TemplateRef<any>;\n    @Input() ngxPermissionsExceptThen: TemplateRef<any>;\n\n    @Input() ngxPermissionsThen: TemplateRef<any>;\n    @Input() ngxPermissionsElse: TemplateRef<any>;\n\n    @Input() ngxPermissionsOnlyAuthorisedStrategy: string | StrategyFunction;\n    @Input() ngxPermissionsOnlyUnauthorisedStrategy: string | StrategyFunction;\n\n    @Input() ngxPermissionsExceptUnauthorisedStrategy: string | StrategyFunction;\n    @Input() ngxPermissionsExceptAuthorisedStrategy: string | StrategyFunction;\n\n    @Input() ngxPermissionsUnauthorisedStrategy: string | StrategyFunction;\n    @Input() ngxPermissionsAuthorisedStrategy: string | StrategyFunction;\n\n    @Output() permissionsAuthorized = new EventEmitter();\n    @Output() permissionsUnauthorized = new EventEmitter();\n\n\n    constructor(private viewContainer: ViewContainerRef,\n                private templateRef: TemplateRef<any>) {}\n\n\n    ngOnInit(): void {\n        this.viewContainer.clear();\n        this.viewContainer.createEmbeddedView(this.getAuthorizedTemplate());\n        this.permissionsUnauthorized.emit();\n    }\n\n\n    private getAuthorizedTemplate() {\n        return this.ngxPermissionsOnlyThen ||\n            this.ngxPermissionsExceptThen ||\n            this.ngxPermissionsThen ||\n            this.templateRef;\n    }\n\n}\n","import { Directive, EventEmitter, Input, OnInit, Output, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { StrategyFunction } from '../service/configuration.service';\n\n@Directive({\n    selector: '[ngxPermissionsOnly],[ngxPermissionsExcept]'\n})\nexport class NgxPermissionsRestrictStubDirective implements OnInit {\n\n    @Input() ngxPermissionsOnly: string | string[];\n    @Input() ngxPermissionsOnlyThen: TemplateRef<any>;\n    @Input() ngxPermissionsOnlyElse: TemplateRef<any>;\n\n    @Input() ngxPermissionsExcept: string | string[];\n    @Input() ngxPermissionsExceptElse: TemplateRef<any>;\n    @Input() ngxPermissionsExceptThen: TemplateRef<any>;\n\n    @Input() ngxPermissionsThen: TemplateRef<any>;\n    @Input() ngxPermissionsElse: TemplateRef<any>;\n\n    @Input() ngxPermissionsOnlyAuthorisedStrategy: string | StrategyFunction;\n    @Input() ngxPermissionsOnlyUnauthorisedStrategy: string | StrategyFunction;\n\n    @Input() ngxPermissionsExceptUnauthorisedStrategy: string | StrategyFunction;\n    @Input() ngxPermissionsExceptAuthorisedStrategy: string | StrategyFunction;\n\n    @Input() ngxPermissionsUnauthorisedStrategy: string | StrategyFunction;\n    @Input() ngxPermissionsAuthorisedStrategy: string | StrategyFunction;\n\n    @Output() permissionsAuthorized = new EventEmitter();\n    @Output() permissionsUnauthorized = new EventEmitter();\n\n\n    constructor(private viewContainer: ViewContainerRef) {}\n\n\n    ngOnInit(): void {\n        this.viewContainer.clear();\n        if (this.getUnAuthorizedTemplate()) {\n            this.viewContainer.createEmbeddedView(this.getUnAuthorizedTemplate());\n        }\n        this.permissionsUnauthorized.emit();\n    }\n\n\n    private getUnAuthorizedTemplate() {\n        return this.ngxPermissionsOnlyElse ||\n            this.ngxPermissionsExceptElse ||\n            this.ngxPermissionsElse;\n    }\n\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { NgxPermissionsDirective } from './directive/permissions.directive';\nimport { NgxPermissionsService, USE_PERMISSIONS_STORE } from './service/permissions.service';\nimport { NgxPermissionsGuard } from './router/permissions-guard.service';\nimport { NgxRolesService, USE_ROLES_STORE } from './service/roles.service';\nimport { NgxPermissionsStore } from './store/permissions.store';\nimport { NgxRolesStore } from './store/roles.store';\nimport { NgxPermissionsAllowStubDirective } from './testing/permissions-allow.directive.stub';\nimport { NgxPermissionsRestrictStubDirective } from './testing/permissions-restrict.directive.stub';\nimport { NgxPermissionsConfigurationService, USE_CONFIGURATION_STORE } from './service/configuration.service';\nimport { NgxPermissionsConfigurationStore } from './store/configuration.store';\n\nexport * from './store/roles.store';\nexport * from './store/permissions.store';\nexport * from './store/configuration.store';\n\nexport * from './directive/permissions.directive';\n\nexport * from './service/permissions.service';\nexport * from './service/roles.service';\nexport * from './service/configuration.service';\n\nexport * from './router/permissions-guard.service';\n\nexport * from './model/permissions-router-data.model';\nexport * from './model/role.model';\n\nexport * from './testing/permissions-allow.directive.stub';\nexport * from './testing/permissions-restrict.directive.stub';\n\nexport * from './enums/predefined-strategies.enum';\n\nexport interface NgxPermissionsModuleConfig {\n    // isolate the service instance, only works for lazy loaded modules or components with the \"providers\" property\n    rolesIsolate?: boolean;\n    permissionsIsolate?: boolean;\n    configurationIsolate?: boolean;\n}\n\n\n@NgModule({\n    imports: [],\n    declarations: [\n        NgxPermissionsDirective\n    ],\n    exports: [\n        NgxPermissionsDirective\n    ]\n})\nexport class NgxPermissionsModule {\n    static forRoot(config: NgxPermissionsModuleConfig = {}): ModuleWithProviders<NgxPermissionsModule> {\n        return {\n            ngModule: NgxPermissionsModule,\n            providers: [\n                NgxPermissionsStore,\n                NgxRolesStore,\n                NgxPermissionsConfigurationStore,\n                NgxPermissionsService,\n                NgxPermissionsGuard,\n                NgxRolesService,\n                NgxPermissionsConfigurationService,\n                {provide: USE_PERMISSIONS_STORE, useValue: config.permissionsIsolate},\n                {provide: USE_ROLES_STORE, useValue: config.rolesIsolate},\n                {provide: USE_CONFIGURATION_STORE, useValue: config.configurationIsolate},\n            ]\n        };\n    }\n\n    static forChild(config: NgxPermissionsModuleConfig = {}): ModuleWithProviders<NgxPermissionsModule> {\n        return {\n            ngModule: NgxPermissionsModule,\n            providers: [\n                {provide: USE_PERMISSIONS_STORE, useValue: config.permissionsIsolate},\n                {provide: USE_ROLES_STORE, useValue: config.rolesIsolate},\n                {provide: USE_CONFIGURATION_STORE, useValue: config.configurationIsolate},\n                NgxPermissionsConfigurationService,\n                NgxPermissionsService,\n                NgxRolesService,\n                NgxPermissionsGuard\n            ]\n        };\n    }\n}\n\n@NgModule({\n    imports: [],\n    declarations: [\n        NgxPermissionsAllowStubDirective\n    ],\n    exports: [\n        NgxPermissionsAllowStubDirective\n    ]\n})\nexport class NgxPermissionsAllowStubModule {\n}\n\n\n@NgModule({\n    imports: [],\n    declarations: [\n        NgxPermissionsRestrictStubDirective\n    ],\n    exports: [\n        NgxPermissionsRestrictStubDirective\n    ]\n})\nexport class NgxPermissionsRestrictStubModule {\n}\n\n\n","/*\n * Public API Surface of ngx-permissions\n */\nexport * from './lib/index';","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["BehaviorSubject","Injectable","InjectionToken","Inject","of","map","switchMap","catchError","from","mergeAll","first","mergeMap","every","EventEmitter","merge","skip","take","Directive","ViewContainerRef","ChangeDetectorRef","TemplateRef","Input","Output","forkJoin","tap","Router","NgModule"],"mappings":"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"}