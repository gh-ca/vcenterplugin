{"version":3,"file":"permissions-allow.directive.stub.d.ts","sources":["permissions-allow.directive.stub.d.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { EventEmitter, OnInit, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { StrategyFunction } from '../service/configuration.service';\nexport declare class NgxPermissionsAllowStubDirective implements OnInit {\n    private viewContainer;\n    private templateRef;\n    ngxPermissionsOnly: string | string[];\n    ngxPermissionsOnlyThen: TemplateRef<any>;\n    ngxPermissionsOnlyElse: TemplateRef<any>;\n    ngxPermissionsExcept: string | string[];\n    ngxPermissionsExceptElse: TemplateRef<any>;\n    ngxPermissionsExceptThen: TemplateRef<any>;\n    ngxPermissionsThen: TemplateRef<any>;\n    ngxPermissionsElse: TemplateRef<any>;\n    ngxPermissionsOnlyAuthorisedStrategy: string | StrategyFunction;\n    ngxPermissionsOnlyUnauthorisedStrategy: string | StrategyFunction;\n    ngxPermissionsExceptUnauthorisedStrategy: string | StrategyFunction;\n    ngxPermissionsExceptAuthorisedStrategy: string | StrategyFunction;\n    ngxPermissionsUnauthorisedStrategy: string | StrategyFunction;\n    ngxPermissionsAuthorisedStrategy: string | StrategyFunction;\n    permissionsAuthorized: EventEmitter<any>;\n    permissionsUnauthorized: EventEmitter<any>;\n    constructor(viewContainer: ViewContainerRef, templateRef: TemplateRef<any>);\n    ngOnInit(): void;\n    private getAuthorizedTemplate;\n}\n"]}