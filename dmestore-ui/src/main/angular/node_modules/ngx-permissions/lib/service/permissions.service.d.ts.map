{"version":3,"file":"permissions.service.d.ts","sources":["permissions.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { InjectionToken } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { NgxPermission } from '../model/permission.model';\nimport { ValidationFn } from '../model/permissions-router-data.model';\nimport { NgxPermissionsStore } from '../store/permissions.store';\nexport interface NgxPermissionsObject {\n    [name: string]: NgxPermission;\n}\nexport declare const USE_PERMISSIONS_STORE: InjectionToken<unknown>;\nexport declare class NgxPermissionsService {\n    private isolate;\n    private permissionsStore;\n    private permissionsSource;\n    permissions$: Observable<NgxPermissionsObject>;\n    constructor(isolate: boolean, permissionsStore: NgxPermissionsStore);\n    /**\n     * Remove all permissions from permissions source\n     */\n    flushPermissions(): void;\n    hasPermission(permission: string | string[]): Promise<boolean>;\n    loadPermissions(permissions: string[], validationFunction?: ValidationFn): void;\n    addPermission(permission: string | string[], validationFunction?: ValidationFn): void;\n    removePermission(permissionName: string): void;\n    getPermission(name: string): NgxPermission;\n    getPermissions(): NgxPermissionsObject;\n    private reducePermission;\n    private hasArrayPermission;\n    private hasPermissionValidationFunction;\n}\n"]}