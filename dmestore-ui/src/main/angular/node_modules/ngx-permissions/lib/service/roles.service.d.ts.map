{"version":3,"file":"roles.service.d.ts","sources":["roles.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { InjectionToken } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ValidationFn } from '../model/permissions-router-data.model';\nimport { NgxRole } from '../model/role.model';\nimport { NgxRolesStore } from '../store/roles.store';\nimport { NgxPermissionsService } from './permissions.service';\nexport declare const USE_ROLES_STORE: InjectionToken<unknown>;\nexport interface NgxRolesObject {\n    [name: string]: NgxRole;\n}\nexport declare class NgxRolesService {\n    private isolate;\n    private rolesStore;\n    private permissionsService;\n    private rolesSource;\n    roles$: Observable<NgxRolesObject>;\n    constructor(isolate: boolean, rolesStore: NgxRolesStore, permissionsService: NgxPermissionsService);\n    addRole(name: string, validationFunction: ValidationFn | string[]): void;\n    addRoles(rolesObj: {\n        [name: string]: ValidationFn | string[];\n    }): void;\n    flushRoles(): void;\n    removeRole(roleName: string): void;\n    getRoles(): NgxRolesObject;\n    getRole(name: string): NgxRole;\n    hasOnlyRoles(names: string | string[]): Promise<boolean>;\n    private hasRoleKey;\n    private hasRolePermission;\n}\n"]}