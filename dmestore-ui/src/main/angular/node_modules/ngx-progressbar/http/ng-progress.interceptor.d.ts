import { HttpInterceptor, HttpEvent, HttpHandler, HttpRequest } from '@angular/common/http';
import { Observable } from 'rxjs';
import { NgProgress } from 'ngx-progressbar';
import { NgProgressHttpConfig } from './ng-progress-http.interface';
import * as ɵngcc0 from '@angular/core';
export declare class NgProgressInterceptor implements HttpInterceptor {
    protected ngProgress: NgProgress;
    private _inProgressCount;
    private _progressRef;
    private readonly _config;
    constructor(ngProgress: NgProgress, config?: NgProgressHttpConfig);
    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>>;
    /**
     * Check if request is silent.
     * @param req request
     */
    private checkUrl;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NgProgressInterceptor, [null, { optional: true; }]>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<NgProgressInterceptor>;
}

//# sourceMappingURL=ng-progress.interceptor.d.ts.map