{"version":3,"file":"ng-progress.component.d.ts","sources":["ng-progress.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { OnChanges, OnDestroy, OnInit, EventEmitter } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { NgProgress } from './ng-progress.service';\nimport { NgProgressRef } from './ng-progress-ref';\nexport declare class NgProgressComponent implements OnInit, OnChanges, OnDestroy {\n    private _ngProgress;\n    private _started;\n    private _completed;\n    /** Progress bar worker */\n    progressRef: NgProgressRef;\n    /** Stream that emits progress state */\n    state$: Observable<{\n        active: boolean;\n        transform: string;\n    }>;\n    /** Creates a new instance if id is not already exists */\n    id: string;\n    /** Initializes inputs from the global config */\n    min: number;\n    max: number;\n    ease: string;\n    color: string;\n    speed: number;\n    thick: boolean;\n    fixed: boolean;\n    meteor: boolean;\n    spinner: boolean;\n    trickleSpeed: number;\n    debounceTime: number;\n    trickleFunc: (n: number) => number;\n    spinnerPosition: 'left' | 'right';\n    direction: 'ltr+' | 'ltr-' | 'rtl+' | 'rtl-';\n    started: EventEmitter<any>;\n    completed: EventEmitter<any>;\n    get isStarted(): boolean;\n    constructor(_ngProgress: NgProgress);\n    ngOnChanges(): void;\n    ngOnInit(): void;\n    ngOnDestroy(): void;\n    start(): void;\n    complete(): void;\n    inc(n?: number): void;\n    set(n: number): void;\n}\n"]}