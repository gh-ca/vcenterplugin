{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://ngx-progressbar/lib/ng-progress-ref.ts","ng://ngx-progressbar/lib/ng-progress.interface.ts","ng://ngx-progressbar/lib/ng-progress.service.ts","ng://ngx-progressbar/lib/ng-progress.component.ts","ng://ngx-progressbar/lib/ng-progress.module.ts"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__decorate","decorators","target","key","desc","d","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__read","o","m","Symbol","iterator","e","ar","next","done","push","value","error","NgProgressRef","customConfig","_onDestroyCallback","_this","_started","Subject","started","pipe","filter","isStarted","_completed","completed","_trickling","_worker","Subscription","EMPTY","_state","BehaviorSubject","active","_config","state","asObservable","config","combineLatest","debounce","_a","_b","start","timer","debounceTime","switchMap","onTrickling","onComplete","subscribe","currState","complete","inc","amount","trickleFunc","set","setState","clamp","setConfig","destroy","unsubscribe","Math","max","min","trickleSpeed","tap","of","delay","speed","finalize","takeUntil","NG_PROGRESS_CONFIG","InjectionToken","defaultConfig","fixed","meteor","thick","spinner","ease","color","direction","spinnerPosition","Éµ0","NgProgress","_instances","Map","ref","id","has","progressRef","get","deleteInstance","destroyAll","forEach","delete","Optional","type","Inject","args","Injectable","providedIn","NgProgressComponent","_ngProgress","EventEmitter","ngOnChanges","ngOnInit","state$","map","transform","observers","emit","ngOnDestroy","Input","Output","Component","selector","host","role","[attr.spinnerPosition]","[attr.dir]","[attr.thick]","[attr.fixed]","template","changeDetection","ChangeDetectionStrategy","OnPush","NgProgressModule","withConfig","ngModule","NgProgressModule_1","providers","provide","useValue","NgModule","declarations","exports","imports","CommonModule"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Observable, Subject, BehaviorSubject, timer, of, combineLatest, Subscription, EMPTY } from 'rxjs';\nimport { tap, delay, debounce, switchMap, takeUntil, finalize, filter } from 'rxjs/operators';\nimport { NgProgressState, NgProgressConfig } from './ng-progress.interface';\n\nexport class NgProgressRef {\n\n  // Stream that emits when progress state is changed\n  private readonly _state: BehaviorSubject<NgProgressState>;\n  state: Observable<NgProgressState>;\n\n  // Stream that emits when config is changed\n  private readonly _config: BehaviorSubject<NgProgressConfig>;\n  config: Observable<NgProgressState>;\n\n  // Progress start source event (used to cancel finalizing delays)\n  private readonly _started = new Subject();\n  // Progress start event: stream that emits only when it hasn't already started\n  readonly started = this._started.pipe(filter(() => !this.isStarted));\n\n  // Progress ended source event\n  private readonly _completed = new Subject();\n  // Progress start event: stream that emits only when it has already started\n  readonly completed = this._completed.pipe(filter(() => this.isStarted));\n\n  // Stream that increments and updates the progress state\n  private readonly _trickling = new Subject();\n\n  // Stream that combines \"_trickling\" and \"config\" streams\n  private readonly _worker = Subscription.EMPTY;\n\n  // Get current progress state\n  private get currState(): NgProgressState {\n    return this._state.value;\n  }\n\n  // Check if progress has started\n  get isStarted(): boolean {\n    return this.currState.active;\n  }\n\n  constructor(customConfig: NgProgressConfig, private _onDestroyCallback: () => void) {\n    this._state = new BehaviorSubject<NgProgressState>({ active: false, value: 0 });\n    this._config = new BehaviorSubject<NgProgressConfig>(customConfig);\n    this.state = this._state.asObservable();\n    this.config = this._state.asObservable();\n\n    this._worker = combineLatest(this._trickling, this._config).pipe(\n      debounce(([start, config]: [boolean, NgProgressConfig]) => timer(start ? config.debounceTime : 0)),\n      switchMap(([start, config]: [boolean, NgProgressConfig]) => start ? this.onTrickling(config) : this.onComplete(config))\n    ).subscribe();\n  }\n\n  /**\n   * Start the progress\n   */\n  start() {\n    this._started.next();\n    this._trickling.next(true);\n  }\n\n  /**\n   * Complete the progress\n   */\n  complete() {\n    this._trickling.next(false);\n  }\n\n  /**\n   * Increment the progress\n   */\n  inc(amount?: number) {\n    const n = this.currState.value;\n    if (!this.isStarted) {\n      this.start();\n    } else {\n      if (typeof amount !== 'number') {\n        amount = this._config.value.trickleFunc(n);\n      }\n      this.set(n + amount);\n    }\n  }\n\n  /**\n   * Set the progress\n   */\n  set(n: number) {\n    this.setState({ value: this.clamp(n), active: true });\n  }\n\n  /**\n   * Set config\n   */\n  setConfig(config: NgProgressConfig) {\n    this._config.next({ ...this._config.value, ...config });\n  }\n\n  /**\n   * Destroy progress reference\n   */\n  destroy() {\n    this._worker.unsubscribe();\n    this._trickling.complete();\n    this._state.complete();\n    this._config.complete();\n    this._started.complete();\n    this._completed.complete();\n    this._onDestroyCallback();\n  }\n\n  /**\n   * Set progress state\n   */\n  private setState(state: NgProgressState) {\n    this._state.next({ ...this.currState, ...state });\n  }\n\n  /**\n   * Clamps a value to be between min and max\n   */\n  private clamp(n: number): number {\n    return Math.max(this._config.value.min, Math.min(this._config.value.max, n));\n  }\n\n  /**\n   * Keeps incrementing the progress\n   */\n  private onTrickling(config: NgProgressConfig): Observable<number> {\n    if (!this.isStarted) {\n      this.set(this._config.value.min);\n    }\n    return timer(0, config.trickleSpeed).pipe(tap(() => this.inc()));\n  }\n\n  /**\n   * Completes then resets the progress\n   */\n  private onComplete(config: NgProgressConfig): Observable<any> {\n    this._completed.next();\n    return !this.isStarted ? EMPTY : of({}).pipe(\n      // Complete the progress\n      tap(() => this.setState({ value: 100 })),\n\n      // Deactivate the progress after a tiny delay\n      delay(config.speed * 1.7),\n      tap(() => this.setState({ active: false })),\n\n      // Use a tiny delay before resetting\n      delay(config.speed),\n      // Force the progress to reset even it got cancelled\n      finalize(() => this.setState({ value: 0 })),\n      // Cancel any of the finalizing delays if the progress has started again\n      takeUntil(this._started)\n    );\n  }\n}\n","import { InjectionToken } from '@angular/core';\n\nexport interface NgProgressState {\n  active?: boolean;\n  value?: number;\n}\n\nexport interface NgProgressConfig {\n  spinnerPosition?: 'left' | 'right';\n  direction?: 'ltr+' | 'ltr-' | 'rtl+' | 'rtl-';\n  ease?: string;\n  color?: string;\n  thick?: boolean;\n  fixed?: boolean;\n  meteor?: boolean;\n  spinner?: boolean;\n  max?: number;\n  min?: number;\n  speed?: number;\n  trickleSpeed?: number;\n  trickleFunc?: (n: number) => number;\n  debounceTime?: number;\n}\n\nexport const NG_PROGRESS_CONFIG = new InjectionToken<NgProgressConfig>('ngProgressConfig');\n","import { Injectable, Inject, Optional } from '@angular/core';\nimport { NgProgressRef } from './ng-progress-ref';\nimport { NgProgressConfig, NG_PROGRESS_CONFIG } from './ng-progress.interface';\n\nconst defaultConfig: NgProgressConfig = {\n  min: 8,\n  max: 100,\n  speed: 200,\n  debounceTime: 0,\n  trickleSpeed: 300,\n  fixed: true,\n  meteor: true,\n  thick: false,\n  spinner: true,\n  ease: 'linear',\n  color: '#1B95E0',\n  direction: 'ltr+',\n  spinnerPosition: 'right',\n  trickleFunc: (n: number): number => {\n    if (n >= 0 && n < 20) return 10;\n    if (n >= 20 && n < 50) return 4;\n    if (n >= 50 && n < 80) return 2;\n    if (n >= 80 && n < 99) return 0.5;\n    return 0;\n  }\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgProgress {\n\n  // Store progress bar instances\n  private readonly _instances = new Map<string, NgProgressRef>();\n\n  // Global config\n  config: NgProgressConfig;\n\n  constructor(@Optional() @Inject(NG_PROGRESS_CONFIG) config: NgProgressConfig) {\n    this.config = config ? {...defaultConfig, ...config} : defaultConfig;\n  }\n\n  /**\n   * Get or Create progress bar by ID\n   */\n  ref(id = 'root', config?: NgProgressConfig) {\n    if (this._instances.has(id)) {\n      // Get ProgressRef instance\n      const progressRef = this._instances.get(id);\n      if (config) {\n        progressRef.setConfig({...this.config, ...config});\n      }\n      return progressRef;\n    } else {\n      // Create new ProgressRef instance\n      const progressRef = new NgProgressRef({...this.config, ...config}, this.deleteInstance(id));\n      return this._instances.set(id, progressRef).get(id);\n    }\n  }\n\n  /**\n   * Destroy all progress bar instances\n   */\n  destroyAll() {\n    this._instances.forEach((ref: NgProgressRef) => ref.destroy());\n  }\n\n  /**\n   * A destroyer function for each progress bar instance\n   */\n  private deleteInstance(id: string) {\n    return () => {\n      this._instances.delete(id);\n    };\n  }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  ChangeDetectionStrategy,\n  EventEmitter,\n  ViewEncapsulation\n} from '@angular/core';\nimport { Observable, Subscription, SubscriptionLike} from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { NgProgress } from './ng-progress.service';\nimport { NgProgressRef } from './ng-progress-ref';\nimport { NgProgressState } from './ng-progress.interface';\n\n@Component({\n  selector: 'ng-progress',\n  host: {\n    'role': 'progressbar',\n    '[attr.spinnerPosition]': 'spinnerPosition',\n    '[attr.dir]': 'direction',\n    '[attr.thick]': 'thick',\n    '[attr.fixed]': 'fixed'\n  },\n  template: `\n    <ng-container *ngIf=\"state$ | async; let state\">\n      <div class=\"ng-progress-bar\"\n            [attr.active]=\"state.active\"\n            [style.transition]=\"'opacity ' + speed + 'ms ' + ease\">\n        <div class=\"ng-bar-placeholder\">\n          <div class=\"ng-bar\"\n                [style.transform]=\"state.transform\"\n                [style.backgroundColor]=\"color\"\n                [style.transition]=\"state.active ? 'all ' + speed + 'ms ' + ease : 'none'\">\n            <div *ngIf=\"meteor\" class=\"ng-meteor\" [style.boxShadow]=\"'0 0 10px '+ color + ', 0 0 5px ' + color\"></div>\n          </div>\n        </div>\n        <div *ngIf=\"spinner\" class=\"ng-spinner\">\n          <div class=\"ng-spinner-icon\"\n                [style.borderTopColor]=\"color\"\n                [style.borderLeftColor]=\"color\"></div>\n        </div>\n      </div>\n    </ng-container>\n  `,\n  styleUrls: ['./ng-progress.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class NgProgressComponent implements OnInit, OnChanges, OnDestroy {\n\n  private _started: SubscriptionLike = Subscription.EMPTY;\n  private _completed: SubscriptionLike = Subscription.EMPTY;\n\n  /** Progress bar worker */\n  progressRef: NgProgressRef;\n\n  /** Stream that emits progress state */\n  state$: Observable<{ active: boolean, transform: string }>;\n\n  /** Creates a new instance if id is not already exists */\n  @Input() id = 'root';\n\n  /** Initializes inputs from the global config */\n  @Input() min: number = this._ngProgress.config.min;\n  @Input() max: number = this._ngProgress.config.max;\n  @Input() ease: string = this._ngProgress.config.ease;\n  @Input() color: string = this._ngProgress.config.color;\n  @Input() speed: number = this._ngProgress.config.speed;\n  @Input() thick: boolean = this._ngProgress.config.thick;\n  @Input() fixed: boolean = this._ngProgress.config.fixed;\n  @Input() meteor: boolean = this._ngProgress.config.meteor;\n  @Input() spinner: boolean = this._ngProgress.config.spinner;\n  @Input() trickleSpeed: number = this._ngProgress.config.trickleSpeed;\n  @Input() debounceTime: number = this._ngProgress.config.debounceTime;\n  @Input() trickleFunc: (n: number) => number = this._ngProgress.config.trickleFunc;\n  @Input() spinnerPosition: 'left' | 'right' = this._ngProgress.config.spinnerPosition;\n  @Input() direction: 'ltr+' | 'ltr-' | 'rtl+' | 'rtl-' = this._ngProgress.config.direction;\n  @Output() started = new EventEmitter();\n  @Output() completed = new EventEmitter();\n\n  get isStarted() {\n    return this.progressRef.isStarted;\n  }\n\n  constructor(private _ngProgress: NgProgress) {\n  }\n\n  ngOnChanges() {\n    if (this.progressRef instanceof NgProgressRef) {\n      // Update progress bar config when inputs change\n      this.progressRef.setConfig({\n        max: (this.max > 0 && this.max <= 100) ? this.max : 100,\n        min: (this.min < 100 && this.min >= 0) ? this.min : 0,\n        speed: this.speed,\n        trickleSpeed: this.trickleSpeed,\n        trickleFunc: this.trickleFunc,\n        debounceTime: this.debounceTime\n      });\n    }\n  }\n\n  ngOnInit() {\n    // Get progress bar service instance\n    this.progressRef = this._ngProgress.ref(this.id, {\n      max: this.max,\n      min: this.min,\n      speed: this.speed,\n      trickleSpeed: this.trickleSpeed,\n      debounceTime: this.debounceTime\n    });\n\n    // Subscribe to progress state\n    this.state$ = this.progressRef.state.pipe(\n      map((state: NgProgressState) => ({\n        active: state.active,\n        transform: `translate3d(${state.value}%,0,0)`\n      }))\n    );\n\n    // Subscribes to started and completed events on demand\n    if (this.started.observers.length) {\n      this._started = this.progressRef.started.subscribe(() => this.started.emit());\n    }\n    if (this.completed.observers.length) {\n      this._completed = this.progressRef.completed.subscribe(() => this.completed.emit());\n    }\n  }\n\n  ngOnDestroy() {\n    this._started.unsubscribe();\n    this._completed.unsubscribe();\n    if (this.progressRef instanceof NgProgressRef) {\n      this.progressRef.destroy();\n    }\n  }\n\n  start() {\n    this.progressRef.start();\n  }\n\n  complete() {\n    this.progressRef.complete();\n  }\n\n  inc(n?: number) {\n    this.progressRef.inc(n);\n  }\n\n  set(n: number) {\n    this.progressRef.set(n);\n  }\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgProgressComponent } from './ng-progress.component';\nimport { NgProgressConfig, NG_PROGRESS_CONFIG } from './ng-progress.interface';\n\n@NgModule({\n  declarations: [NgProgressComponent],\n  exports: [NgProgressComponent],\n  imports: [CommonModule]\n})\nexport class NgProgressModule {\n  static withConfig(config: NgProgressConfig): ModuleWithProviders<NgProgressModule> {\n    return {\n      ngModule: NgProgressModule,\n      providers: [\n        {provide: NG_PROGRESS_CONFIG, useValue: config}\n      ]\n    };\n  }\n}\n"]}