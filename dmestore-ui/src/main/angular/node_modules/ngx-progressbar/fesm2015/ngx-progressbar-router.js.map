{"version":3,"file":"ngx-progressbar-router.js","sources":["ng://ngx-progressbar/router/ng-progress-router.interface.ts","ng://ngx-progressbar/router/ng-progress-router.service.ts","ng://ngx-progressbar/router/ng-progress-router.module.ts","ng://ngx-progressbar/router/ngx-progressbar-router.ts"],"sourcesContent":["import { InjectionToken, Type } from '@angular/core';\nimport { RouterEvent } from '@angular/router';\n\nexport interface NgProgressRouterConfig {\n  id?: string;\n  delay?: number;\n  startEvents?: Type<RouterEvent>[];\n  completeEvents?: Type<RouterEvent>[];\n}\n\nexport const NG_PROGRESS_ROUTER_CONFIG = new InjectionToken<NgProgressRouterConfig>('ngProgressRouterConfig');\n","import { Injectable, Optional, Inject, Type } from '@angular/core';\nimport { Router, NavigationStart, NavigationEnd, NavigationCancel, NavigationError, RouterEvent } from '@angular/router';\nimport { of } from 'rxjs';\nimport { tap, delay, switchMap, filter } from 'rxjs/operators';\nimport { NgProgress } from 'ngx-progressbar';\n// import { NgProgress } from '../../src/public-api';\nimport { NgProgressRouterConfig, NG_PROGRESS_ROUTER_CONFIG } from './ng-progress-router.interface';\n\n/**\n * Check if a router event type exists in an array of router event types\n * @param routerEvent\n * @param events\n */\nfunction eventExists(routerEvent: RouterEvent, events: Type<RouterEvent>[]) {\n  let res = false;\n  events.map((event: Type<RouterEvent>) => res = res || routerEvent instanceof event);\n  return res;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgProgressRouter {\n  private readonly _config: NgProgressRouterConfig = {\n    id: 'root',\n    delay: 0,\n    startEvents: [NavigationStart],\n    completeEvents: [NavigationEnd, NavigationCancel, NavigationError]\n  };\n\n  constructor(progress: NgProgress, router: Router, @Optional() @Inject(NG_PROGRESS_ROUTER_CONFIG) config: NgProgressRouterConfig) {\n    this._config = config ? {...this._config, ...config} : this._config;\n    const progressRef = progress.ref(this._config.id);\n\n    const startProgress = of({}).pipe(\n      tap(() => progressRef.start())\n    );\n\n    const completeProgress = of({}).pipe(\n      delay(this._config.delay),\n      tap(() => progressRef.complete())\n    );\n\n    const filterEvents = [...this._config.startEvents, ...this._config.completeEvents];\n\n    router.events.pipe(\n      filter((event: RouterEvent) => eventExists(event, filterEvents)),\n      switchMap((event: RouterEvent) => eventExists(event, this._config.startEvents) ? startProgress : completeProgress)\n    ).subscribe();\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { NgProgressRouterConfig, NG_PROGRESS_ROUTER_CONFIG } from './ng-progress-router.interface';\nimport { NgProgressRouter } from './ng-progress-router.service';\n\n@NgModule({})\nexport class NgProgressRouterModule {\n\n  // Inject the service to activate it\n  constructor(ngProgressRouter: NgProgressRouter) {\n  }\n\n  static withConfig(config: NgProgressRouterConfig): ModuleWithProviders<NgProgressRouterModule> {\n    return {\n      ngModule: NgProgressRouterModule,\n      providers: [\n        { provide: NG_PROGRESS_ROUTER_CONFIG, useValue: config }\n      ]\n    };\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n\nexport {NgProgressRouter as Éµa} from './ng-progress-router.service';"],"names":[],"mappings":";;;;;;;MAUa,yBAAyB,GAAG,IAAI,cAAc,CAAyB,wBAAwB;;ACF5G;;;;;AAKA,SAAS,WAAW,CAAC,WAAwB,EAAE,MAA2B;IACxE,IAAI,GAAG,GAAG,KAAK,CAAC;IAChB,MAAM,CAAC,GAAG,CAAC,CAAC,KAAwB,KAAK,GAAG,GAAG,GAAG,IAAI,WAAW,YAAY,KAAK,CAAC,CAAC;IACpF,OAAO,GAAG,CAAC;AACb,CAAC;IAKY,gBAAgB,GAA7B,MAAa,gBAAgB;IAQ3B,YAAY,QAAoB,EAAE,MAAc,EAAiD,MAA8B;QAP9G,YAAO,GAA2B;YACjD,EAAE,EAAE,MAAM;YACV,KAAK,EAAE,CAAC;YACR,WAAW,EAAE,CAAC,eAAe,CAAC;YAC9B,cAAc,EAAE,CAAC,aAAa,EAAE,gBAAgB,EAAE,eAAe,CAAC;SACnE,CAAC;QAGA,IAAI,CAAC,OAAO,GAAG,MAAM,mCAAO,IAAI,CAAC,OAAO,GAAK,MAAM,IAAI,IAAI,CAAC,OAAO,CAAC;QACpE,MAAM,WAAW,GAAG,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;QAElD,MAAM,aAAa,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,CAC/B,GAAG,CAAC,MAAM,WAAW,CAAC,KAAK,EAAE,CAAC,CAC/B,CAAC;QAEF,MAAM,gBAAgB,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,CAClC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,EACzB,GAAG,CAAC,MAAM,WAAW,CAAC,QAAQ,EAAE,CAAC,CAClC,CAAC;QAEF,MAAM,YAAY,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;QAEnF,MAAM,CAAC,MAAM,CAAC,IAAI,CAChB,MAAM,CAAC,CAAC,KAAkB,KAAK,WAAW,CAAC,KAAK,EAAE,YAAY,CAAC,CAAC,EAChE,SAAS,CAAC,CAAC,KAAkB,KAAK,WAAW,CAAC,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,GAAG,aAAa,GAAG,gBAAgB,CAAC,CACnH,CAAC,SAAS,EAAE,CAAC;KACf;EACF;;YApBuB,UAAU;YAAU,MAAM;4CAAG,QAAQ,YAAI,MAAM,SAAC,yBAAyB;;;AARpF,gBAAgB;IAH5B,UAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;IASmD,WAAA,QAAQ,EAAE,CAAA,EAAE,WAAA,MAAM,CAAC,yBAAyB,CAAC,CAAA;GARrF,gBAAgB,CA4B5B;;;IC7CY,sBAAsB,8BAAnC,MAAa,sBAAsB;;IAGjC,YAAY,gBAAkC;KAC7C;IAED,OAAO,UAAU,CAAC,MAA8B;QAC9C,OAAO;YACL,QAAQ,EAAE,wBAAsB;YAChC,SAAS,EAAE;gBACT,EAAE,OAAO,EAAE,yBAAyB,EAAE,QAAQ,EAAE,MAAM,EAAE;aACzD;SACF,CAAC;KACH;EACF;;YAX+B,gBAAgB;;AAHnC,sBAAsB;IADlC,QAAQ,CAAC,EAAE,CAAC;GACA,sBAAsB,CAclC;;ACnBD;;;;;;"}