{"version":3,"file":"ngx-progressbar-http.js","sources":["ng://ngx-progressbar/http/ng-progress-http.interface.ts","ng://ngx-progressbar/http/ng-progress.interceptor.ts","ng://ngx-progressbar/http/ng-progress-http.module.ts","ng://ngx-progressbar/http/ngx-progressbar-http.ts"],"sourcesContent":["import { InjectionToken } from '@angular/core';\n\nexport interface NgProgressHttpConfig {\n  id?: string;\n  silentApis?: string[];\n}\n\nexport const NG_PROGRESS_HTTP_CONFIG = new InjectionToken<NgProgressHttpConfig>('ngProgressHttpConfig');\n","import { Injectable, Optional, Inject } from '@angular/core';\nimport { HttpInterceptor, HttpEvent, HttpHandler, HttpRequest } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { finalize } from 'rxjs/operators';\nimport { NgProgress, NgProgressRef } from 'ngx-progressbar';\n// import { NgProgress, NgProgressRef } from '../../src/public-api';\nimport { NgProgressHttpConfig, NG_PROGRESS_HTTP_CONFIG } from './ng-progress-http.interface';\n\n@Injectable()\nexport class NgProgressInterceptor implements HttpInterceptor {\n\n  private _inProgressCount = 0;\n  private _progressRef: NgProgressRef;\n  private readonly _config: NgProgressHttpConfig = {\n    id: 'root',\n    silentApis: []\n  };\n\n  constructor(protected ngProgress: NgProgress, @Optional() @Inject(NG_PROGRESS_HTTP_CONFIG) config?: NgProgressHttpConfig) {\n    this._config = config ? {...this._config, ...config} : this._config;\n  }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\n    // Ignore by request headers\n    if (req.headers.has('ignoreProgressBar')) {\n      return next.handle(req.clone({headers: req.headers.delete('ignoreProgressBar')}));\n    }\n\n    // Ignore silent api requests\n    if (this.checkUrl(req)) {\n      return next.handle(req);\n    }\n\n    this._inProgressCount++;\n\n    this._progressRef = this.ngProgress.ref(this._config.id);\n    if (!this._progressRef.isStarted) {\n      this._progressRef.start();\n    }\n\n    return next.handle(req).pipe(\n      finalize(() => {\n        this._inProgressCount--;\n        if (this._inProgressCount === 0) {\n          this._progressRef.complete();\n        }\n      })\n    );\n  }\n\n  /**\n   * Check if request is silent.\n   * @param req request\n   */\n  private checkUrl(req: HttpRequest<any>) {\n    const url = req.url.toLowerCase();\n    const found = this._config.silentApis.find((u) => url.startsWith(u));\n    return !!found;\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { NgProgressInterceptor } from './ng-progress.interceptor';\nimport { NgProgressHttpConfig, NG_PROGRESS_HTTP_CONFIG } from './ng-progress-http.interface';\n\n@NgModule({\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: NgProgressInterceptor, multi: true }\n  ]\n})\nexport class NgProgressHttpModule {\n  static withConfig(config: NgProgressHttpConfig): ModuleWithProviders<NgProgressHttpModule> {\n    return {\n      ngModule: NgProgressHttpModule,\n      providers: [\n        { provide: NG_PROGRESS_HTTP_CONFIG, useValue: config }\n      ]\n    };\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n\nexport {NgProgressInterceptor as Éµa} from './ng-progress.interceptor';"],"names":[],"mappings":";;;;;;MAOa,uBAAuB,GAAG,IAAI,cAAc,CAAuB,sBAAsB;;ICEzF,qBAAqB,GAAlC,MAAa,qBAAqB;IAShC,YAAsB,UAAsB,EAA+C,MAA6B;QAAlG,eAAU,GAAV,UAAU,CAAY;QAPpC,qBAAgB,GAAG,CAAC,CAAC;QAEZ,YAAO,GAAyB;YAC/C,EAAE,EAAE,MAAM;YACV,UAAU,EAAE,EAAE;SACf,CAAC;QAGA,IAAI,CAAC,OAAO,GAAG,MAAM,mCAAO,IAAI,CAAC,OAAO,GAAK,MAAM,IAAI,IAAI,CAAC,OAAO,CAAC;KACrE;IAED,SAAS,CAAC,GAAqB,EAAE,IAAiB;;QAGhD,IAAI,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC,EAAE;YACxC,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,EAAC,OAAO,EAAE,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,mBAAmB,CAAC,EAAC,CAAC,CAAC,CAAC;SACnF;;QAGD,IAAI,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;YACtB,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;SACzB;QAED,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAExB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;QACzD,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE;YAChC,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;SAC3B;QAED,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAC1B,QAAQ,CAAC;YACP,IAAI,CAAC,gBAAgB,EAAE,CAAC;YACxB,IAAI,IAAI,CAAC,gBAAgB,KAAK,CAAC,EAAE;gBAC/B,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC;aAC9B;SACF,CAAC,CACH,CAAC;KACH;;;;;IAMO,QAAQ,CAAC,GAAqB;QACpC,MAAM,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC;QAClC,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;QACrE,OAAO,CAAC,CAAC,KAAK,CAAC;KAChB;EACF;;YA1CmC,UAAU;4CAAG,QAAQ,YAAI,MAAM,SAAC,uBAAuB;;AAT9E,qBAAqB;IADjC,UAAU,EAAE;IAUoC,WAAA,QAAQ,EAAE,CAAA,EAAE,WAAA,MAAM,CAAC,uBAAuB,CAAC,CAAA;GAT/E,qBAAqB,CAmDjC;;;IClDY,oBAAoB,4BAAjC,MAAa,oBAAoB;IAC/B,OAAO,UAAU,CAAC,MAA4B;QAC5C,OAAO;YACL,QAAQ,EAAE,sBAAoB;YAC9B,SAAS,EAAE;gBACT,EAAE,OAAO,EAAE,uBAAuB,EAAE,QAAQ,EAAE,MAAM,EAAE;aACvD;SACF,CAAC;KACH;EACF;AATY,oBAAoB;IALhC,QAAQ,CAAC;QACR,SAAS,EAAE;YACT,EAAE,OAAO,EAAE,iBAAiB,EAAE,QAAQ,EAAE,qBAAqB,EAAE,KAAK,EAAE,IAAI,EAAE;SAC7E;KACF,CAAC;GACW,oBAAoB,CAShC;;ACnBD;;;;;;"}