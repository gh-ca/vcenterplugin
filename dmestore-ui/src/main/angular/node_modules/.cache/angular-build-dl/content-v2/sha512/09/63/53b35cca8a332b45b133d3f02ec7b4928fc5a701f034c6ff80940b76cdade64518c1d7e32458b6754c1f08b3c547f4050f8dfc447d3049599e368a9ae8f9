{"version":3,"sources":["webpack:///src/app/routes/bestpractice/bestpractice-routing.module.ts","webpack:///src/app/routes/bestpractice/bestpractice.component.ts","webpack:///src/app/routes/bestpractice/bestpractice.component.html","webpack:///src/app/routes/bestpractice/bestpractice.module.ts"],"names":["routes","path","component","BestpracticeRoutingModule","forChild","imports","exports","BestpracticeComponent","cdr","http","commonService","rowSelected","isLoading","list","total","query","result","items","hostSetting","recommendValue","level","violation","total_count","hostModalShow","hostSelected","hostIsLoading","hostList","hostTotal","hostQuery","q","sort","order","page","per_page","hostResult","post","subscribe","console","log","err","error","state","params","refresh","get","code","data","length","detectChanges","bestpractice","currentBestpractice","hostRefresh","apply","recheck","practiceRefresh","selector","templateUrl","styleUrls","changeDetection","OnPush","providers","Bestpractice","Host","COMPONENTS","COMPONENTS_DYNAMIC","BestpracticeModule","declarations","entryComponents"],"mappings":"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","file":"bestpractice-bestpractice-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { BestpracticeComponent } from './bestpractice.component';\r\n\r\nconst routes: Routes = [{ path: '', component: BestpracticeComponent }];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class BestpracticeRoutingModule { }\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  ChangeDetectionStrategy, ChangeDetectorRef,\r\n} from '@angular/core';\r\nimport {ClrDatagridStateInterface} from '@clr/angular';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport { CommonService } from '../common.service';\r\n\r\n@Component({\r\n  selector: 'app-bestpractice',\r\n  templateUrl: './bestpractice.component.html',\r\n  styleUrls: ['./bestpractice.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [CommonService]\r\n})\r\nexport class BestpracticeComponent implements OnInit {\r\n\r\n  // ================最佳实践列表=============\r\n  rowSelected = []; // 当前选中数据\r\n  isLoading = true; // table数据loading\r\n  list: Bestpractice[] = []; // 数据列表\r\n  total = 0; // 总数据数量\r\n\r\n  query = { // 查询数据\r\n\r\n  };\r\n\r\n  result = {\r\n    items: [{hostSetting: 'Disk Max IOSize',\r\n       recommendValue: 1,\r\n       level: 'waning',\r\n       violation: 49}],\r\n     total_count: 1\r\n  };\r\n  // =================END===============\r\n\r\n  // ================主机列表=============\r\n  hostModalShow = false;\r\n  hostSelected = []; // 主机选中列表\r\n  hostIsLoading = false; // table数据loading\r\n  hostList: Host[] = []; // 数据列表\r\n  hostTotal = 0; // 总数据数量\r\n  currentBestpractice: Bestpractice;\r\n\r\n  hostQuery = { // 查询数据\r\n    q: '',\r\n    sort: 'hostName',\r\n    order: 'desc',\r\n    page: 0,\r\n    per_page: 5,\r\n  };\r\n  hostResult = {};\r\n  // ================END====================\r\n\r\n  constructor(private cdr: ChangeDetectorRef, private http: HttpClient, private commonService: CommonService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  apply() {}\r\n\r\n  recheck() {\r\n    this.http.post('http://localhost:8080/v1/bestpractice', {}).subscribe((result: any) => {\r\n      console.log(result);\r\n    }, err => {\r\n      console.error('ERROR', err);\r\n    });\r\n  }\r\n\r\n  practiceRefresh(state: ClrDatagridStateInterface){\r\n    this.isLoading = true;\r\n    const params = this.commonService.refresh(state, this.query);\r\n    this.http.get('http://localhost:8080/v1/bestpractice/records/all', params).subscribe((result: any) => {\r\n          console.log(result);\r\n          if (result.code === '0'){\r\n            this.list = result.data;\r\n            this.total = result.data.length;\r\n            this.isLoading = false;\r\n            this.cdr.detectChanges(); // 此方法变化检测，异步处理数据都要添加此方法\r\n          }\r\n    }, err => {\r\n      console.error('ERROR', err);\r\n    });\r\n  }\r\n\r\n  openHostList(bestpractice: Bestpractice){\r\n    this.hostModalShow = true;\r\n    this.currentBestpractice = bestpractice;\r\n    this.hostRefresh(null, bestpractice);\r\n  }\r\n\r\n  hostRefresh(state: ClrDatagridStateInterface, bestpractice: Bestpractice){\r\n    if (this.hostModalShow === true){\r\n      this.hostIsLoading = true;\r\n      console.log(bestpractice.hostList.length);\r\n      if (state){\r\n        const params = this.commonService.refresh(state, this.hostQuery);\r\n        // this.http.get('https://api.github.com/search/repositories', this.hostParams).subscribe((result: any) => {\r\n        //   console.log(result)\r\n        //   this.hostList = result.items;\r\n        //   this.total = result.total_count;\r\n        //   this.hostIsLoading = false;\r\n        //   this.cdr.detectChanges(); // 此方法变化检测，异步处理数据都要添加此方法\r\n        // });\r\n        this.hostList = bestpractice.hostList;\r\n        this.hostTotal = bestpractice.hostList.length;\r\n      } else{\r\n        this.hostList = bestpractice.hostList;\r\n        this.hostTotal = bestpractice.hostList.length;\r\n      }\r\n      this.hostIsLoading = false;\r\n      this.cdr.detectChanges(); // 此方法变化检测，异步处理数据都要添加此方法\r\n    }\r\n  }\r\n}\r\n\r\nclass Bestpractice {\r\n  hostSetting: string;\r\n  recommendValue: number;\r\n  level: string;\r\n  count: number;\r\n  hostList: Host[];\r\n}\r\n\r\nclass Host {\r\n  hostSetting: string;\r\n  level: string;\r\n  hostName: string;\r\n  recommendValue: number;\r\n  actualValue: number;\r\n  needReboot: string;\r\n  hostId: string;\r\n  autoRepair: string;\r\n}\r\n","<div>\r\n  <!-- 头部按钮组 -->\r\n  <div>\r\n    <button class=\"btn btn-primary\" [disabled]=\"rowSelected.length === 0\" (click)=\"apply()\">Apply Best Practice</button>\r\n    <button class=\"btn btn-primary\" (click)=\"recheck()\">Recheck</button>\r\n  </div>\r\n  <!-- 列表页 -->\r\n  <clr-datagrid [(clrDgSelected)]=\"rowSelected\"   (clrDgRefresh)=\"practiceRefresh($event)\" [clrDgLoading]=\"isLoading\">\r\n\r\n    <clr-dg-column [clrDgField]=\"'hostSetting'\">Host Setting</clr-dg-column>\r\n    <clr-dg-column [clrDgField]=\"'recommendValue'\">Recommend Value</clr-dg-column>\r\n    <clr-dg-column [clrDgField]=\"'level'\">Level</clr-dg-column>\r\n    <clr-dg-column [clrDgField]=\"'violation'\" [clrDgSortOrder]=\"'violation'\">Violation</clr-dg-column>\r\n\r\n    <clr-dg-row *clrDgItems=\"let item of list\" [clrDgItem]=\"item\">\r\n      <clr-dg-cell>{{item.hostSetting}}</clr-dg-cell>\r\n      <clr-dg-cell>{{item.recommendValue}}</clr-dg-cell>\r\n      <clr-dg-cell>{{item.level}}</clr-dg-cell>\r\n      <clr-dg-cell><span (click)=\"openHostList(item)\" style=\"color:#00F;cursor:pointer\">{{item.count}}</span></clr-dg-cell>\r\n    </clr-dg-row>\r\n\r\n    <clr-dg-footer>\r\n      <clr-dg-pagination #pagination [clrDgPageSize]=\"5\" [clrDgTotalItems]=\"total\">\r\n        <clr-dg-page-size [clrPageSizeOptions]=\"[5,10,50,100]\">per page</clr-dg-page-size>\r\n        {{pagination.firstItem + 1}} - {{pagination.lastItem + 1}}\r\n        of {{pagination.totalItems}}\r\n      </clr-dg-pagination>\r\n    </clr-dg-footer>\r\n\r\n\r\n  </clr-datagrid>\r\n\r\n  <!-- 弹出框 -->\r\n  <clr-modal [(clrModalOpen)]=\"hostModalShow\" style=\"Width: 576px; height: 300px\">\r\n    <h3 class=\"modal-title\">Non-compliant Host</h3>\r\n    <div class=\"modal-body\">\r\n      <div>\r\n        <button class=\"btn btn-primary\" [disabled]=\"hostSelected.length === 0\" (click)=\"apply()\">Apply Best Practice</button>\r\n      </div>\r\n      <!-- 列表页 -->\r\n      <clr-datagrid [(clrDgSelected)]=\"hostSelected\"   (clrDgRefresh)=\"hostRefresh($event, currentBestpractice)\" [clrDgLoading]=\"hostIsLoading\">\r\n\r\n        <clr-dg-column [clrDgField]=\"'hostName'\">Host Setting</clr-dg-column>\r\n        <clr-dg-column [clrDgField]=\"'actualValue'\">Actual Value</clr-dg-column>\r\n        <clr-dg-column [clrDgField]=\"'recommendValue'\">Recommend Value</clr-dg-column>\r\n\r\n        <clr-dg-row *clrDgItems=\"let item of hostList\" [clrDgItem]=\"item\">\r\n          <clr-dg-cell>{{item.hostName}}</clr-dg-cell>\r\n          <clr-dg-cell>{{item.actualValue}}</clr-dg-cell>\r\n          <clr-dg-cell>{{item.recommendValue}}</clr-dg-cell>\r\n        </clr-dg-row>\r\n\r\n        <clr-dg-footer>\r\n          <clr-dg-pagination #pagination1 [clrDgPageSize]=\"5\" [clrDgTotalItems]=\"hostTotal\">\r\n            <clr-dg-page-size [clrPageSizeOptions]=\"[5,10,50,100]\">per page</clr-dg-page-size>\r\n            {{pagination1.firstItem + 1}} - {{pagination1.lastItem + 1}}\r\n            of {{pagination1.totalItems}}\r\n          </clr-dg-pagination>\r\n        </clr-dg-footer>\r\n\r\n      </clr-datagrid>\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n      <button type=\"button\" class=\"btn btn-outline\" (click)=\"hostModalShow = false\">Close</button>\r\n    </div>\r\n  </clr-modal>\r\n\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { SharedModule } from '@shared/shared.module';\r\nimport { BestpracticeRoutingModule } from './bestpractice-routing.module';\r\n\r\nimport { BestpracticeComponent } from './bestpractice.component';\r\n\r\nconst COMPONENTS = [BestpracticeComponent];\r\nconst COMPONENTS_DYNAMIC = [];\r\n\r\n@NgModule({\r\n  imports: [SharedModule, BestpracticeRoutingModule],\r\n  declarations: [...COMPONENTS, ...COMPONENTS_DYNAMIC],\r\n  entryComponents: COMPONENTS_DYNAMIC,\r\n})\r\nexport class BestpracticeModule { }\r\n"]}