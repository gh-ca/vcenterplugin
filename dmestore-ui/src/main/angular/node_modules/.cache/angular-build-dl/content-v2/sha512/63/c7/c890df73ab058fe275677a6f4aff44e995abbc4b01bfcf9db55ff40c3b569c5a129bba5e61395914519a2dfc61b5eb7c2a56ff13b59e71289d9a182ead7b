{"version":3,"sources":["webpack:///src/app/routes/vmfs/list/list.component.ts","webpack:///src/app/routes/vmfs/list/list.component.html","webpack:///src/app/routes/vmfs/list/list.service.ts","webpack:///src/app/routes/vmfs/vmfs-routing.module.ts","webpack:///src/app/routes/vmfs/vmfs.module.ts","webpack:///src/app/routes/vmfs/volume-attribute/attribute.component.ts","webpack:///src/app/routes/vmfs/volume-attribute/attribute.component.html","webpack:///src/app/routes/vmfs/volume-attribute/attribute.service.ts","webpack:///src/app/routes/vmfs/volume-performance/performance.component.ts","webpack:///src/app/routes/vmfs/volume-performance/performance.component.html"],"names":["VmfsListComponent","remoteSrv","cdr","gs","expendActive","list","radioCheck","levelCheck","total","isLoading","rowSelected","volumnIds","query","q","sort","order","page","per_page","modifyShow","popShow","form","getAddForm","modifyForm","getEditForm","expandForm","getExpandForm","changeServiceLevelForm","getChangeLevelForm","storageList","storagePoolList","blockSizeOptions","srgOptions","deviceList","hostRootDirectory","name","icon","expanded","files","clusterRootDirectory","serviceLevelList","mountShow","delShow","unmountShow","reclaimShow","changeServiceLevelShow","expandShow","hostList","clusterList","mountForm","getMountForm","refresh","console","log","length","oldDsName","volume_id","volumeId","max_iops","maxIops","max_bandwidth","maxBandwidth","min_iops","minIops","min_bandwidth","minBandwidth","dataStoreObjectId","objectid","control_policy","isSameName","newVoName","newDsName","updateVmfs","subscribe","result","code","description","getData","params","data","volumeIds","forEach","item","push","getChartData","chartResult","chartList","charItem","iops","bandwidth","readResponseTime","writeResponseTime","detectChanges","deviceType","deviceName","deviceId","hostId","host","cluster","clusterId","getStorages","storage_id","getStoragePoolsByStorId","options","versionVal","version","option0","key","value","option1","option2","blockSize","setSrgOptions","blockValue","spaceReclamationGranularity","Promise","resolve","reject","getHostList","hostInfo","hostName","hostDataloadSuccess","getClusterList","clusterInfo","clusterName","culDataloadSuccess","setBlockSizeOptions","setHostDatas","then","res","setClusterDatas","setServiceLevelList","getServiceLevelList","volumeName","capacityUnit","capacity","chooseDevice","service_level_id","service_level_name","createVmfs","serviceLevId","serviceLevName","getStorageList","getClientSdk","app","navigateTo","targetViewId","objectId","map","delVmfs","objectIds","dataStoreObjectIds","getHostListByObjectId","getClusterListByObjectId","mountType","chooseHost","chooseCluster","mountVmfs","unmountVMFS","vmfsNames","reclaimVmfs","volume_ids","ds_name","serviceLevelName","changeServiceLevel","vo_add_capacity","expandVMFS","p","Object","assign","addBtnClickFunc","modifyData","expandBtnFunc","addVmfsHanlde","customerClickFunc","modifyHandleFunc","delHandleFunc","unmountHandleFunc","reclaimHandleFunc","changeSLHandleFunc","expandHandleFunc","selector","templateUrl","styleUrls","changeDetection","OnPush","providers","VmfsListService","http","get","storageId","put","post","GetForm","addform","count","spaceReclamationPriority","pool_raw_id","workload_type_id","alloctype","latency","maxbandwidth","maxbandwidthChoose","maxiops","maxiopsChoose","minbandwidth","minbandwidthChoose","miniops","miniopsChoose","qosname","editForm","changeLevelForm","routes","path","component","title","VmfsRoutingModule","forChild","imports","exports","COMPONENTS","COMPONENTS_DYNAMIC","VmfsModule","declarations","entryComponents","AttributeComponent","attribute","volNames","ctx","getContextObjects","getVolumeInfoByVolID","volumeInfoList","selectVolName","selectVolume","getVolByName","volumeInfo","filter","changeVolFunc","AttributeService","volumnId","PerformanceComponent","perService","ngZone","iopsChart","bandwidthChart","latencyChart","indicatorIdsIOPS","indicatorIdsBDWT","indicatorIdsREST","objIds","beginTime","endTime","timeInterval","runOutsideAngular","initChart","range","getIopsChart","objTypeId","interval"],"mappings":"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","file":"vmfs-vmfs-module-es5.js","sourcesContent":["import {\r\n  Component,\r\n  OnInit,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef, ElementRef, ViewChild\r\n} from '@angular/core';\r\nimport {\r\n  VmfsListService,\r\n  List,\r\n  StorageList,\r\n  StoragePoolList,\r\n  HostList,\r\n  ClusterList,\r\n  ServiceLevelList, HostOrCluster, GetForm,\r\n} from './list.service';\r\nimport {ClrDatagridStateInterface} from '@clr/angular';\r\nimport {GlobalsService} from '../../../shared/globals.service';\r\nimport {Cluster, Host} from '../../nfs/nfs.service';\r\n\r\n@Component({\r\n  selector: 'app-list',\r\n  templateUrl: './list.component.html',\r\n  styleUrls: ['./list.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [VmfsListService],\r\n})\r\nexport class VmfsListComponent implements OnInit {\r\n  get params() { // 对query进行处理\r\n    const p = Object.assign({}, this.query);\r\n    return p;\r\n  }\r\n  /* get currentData() {\r\n    const data = Object.assign({}, this.rowSelected[0]);\r\n    return data || {}\r\n  } */\r\n  constructor(private remoteSrv: VmfsListService, private cdr: ChangeDetectorRef, public gs: GlobalsService) {}\r\n  expendActive = false // 示例\r\n  list: List[] = []; // 数据列表\r\n  radioCheck = 'list'; // 切换列表页显示\r\n  levelCheck = 'level'; // 是否选择服务等级：level 选择服务器等级 customer 未选择服务等级\r\n  total = 0; // 总数据数量\r\n  isLoading = true; // table数据loading\r\n  rowSelected = []; // 当前选中数据\r\n  volumnIds = []; // 卷ID\r\n  query = { // 查询数据\r\n    q: 'user:VMware',\r\n    sort: 'stars',\r\n    order: 'desc',\r\n    page: 0,\r\n    per_page: 5,\r\n  };\r\n\r\n  modifyShow = false;\r\n\r\n  popShow = false; // 弹出层显示\r\n  // 添加表单数据\r\n  form = new GetForm().getAddForm();\r\n  // 编辑form提交数据\r\n  modifyForm = new GetForm().getEditForm();\r\n  // 扩容form\r\n  expandForm = new GetForm().getExpandForm();\r\n  // 变更服务等级\r\n  changeServiceLevelForm = new GetForm().getChangeLevelForm();\r\n  storageList: StorageList[] = []; // 存储数据\r\n  storagePoolList: StoragePoolList[] = []; // 存储池ID\r\n  blockSizeOptions = []; // 块大小选择\r\n  srgOptions = []; // 空间回收粒度初始化\r\n  deviceList: HostOrCluster[] = []; // 主机AND集群\r\n  chooseDevice: HostOrCluster; // 已选择的主机/集群\r\n  hostRootDirectory: any[] = [\r\n    {\r\n      name: 'Host',\r\n      icon: 'folder',\r\n      expanded: false,\r\n      files: []\r\n    }\r\n  ]; // 主机树结构\r\n  clusterRootDirectory: any[] = [\r\n    {\r\n      name: 'Cluster',\r\n      icon: 'folder',\r\n      expanded: false,\r\n      files: []\r\n    }\r\n  ]; // 集群树结构\r\n  serviceLevelList: ServiceLevelList[] = []; // 服务等级列表\r\n  mountShow = false; // 挂载窗口\r\n  delShow = false; // 删除窗口\r\n  unmountShow = false; // 卸载窗口\r\n  reclaimShow = false; // 卸载窗口\r\n  changeServiceLevelShow = false; // 变更服务等级\r\n  expandShow = false; // 变更服务等级\r\n  hostList: HostList[] = []; // 挂载页面 主机列表\r\n  clusterList: ClusterList[] = []; // 挂载页面集群列表\r\n  // 挂载form表单\r\n  mountForm = new GetForm().getMountForm();\r\n  chooseHost: HostList; // 已选择的主机\r\n  chooseCluster: ClusterList; // 已选择的集群\r\n  // 生命周期： 初始化数据\r\n  ngOnInit() {\r\n    // 列表数据\r\n    this.refresh();\r\n  }\r\n  // 修改\r\n  modifyData() {\r\n    console.log(this.rowSelected[0]);\r\n    // 初始化form\r\n    this.modifyForm = new GetForm().getEditForm();\r\n    if (this.rowSelected.length === 1) {\r\n      this.modifyForm.name = this.rowSelected[0].name;\r\n      this.modifyForm.oldDsName = this.rowSelected[0].name;\r\n      this.modifyForm.volume_id = this.rowSelected[0].volumeId;\r\n      this.modifyForm.max_iops = this.rowSelected[0].maxIops;\r\n      this.modifyForm.max_bandwidth = this.rowSelected[0].maxBandwidth;\r\n      this.modifyForm.min_iops = this.rowSelected[0].minIops;\r\n      this.modifyForm.min_bandwidth = this.rowSelected[0].minBandwidth;\r\n      this.modifyForm.dataStoreObjectId = this.rowSelected[0].objectid;\r\n      if (this.modifyForm.max_iops !== '0') {\r\n        this.modifyForm.control_policy = '1';\r\n      } else {\r\n        this.modifyForm.control_policy = '0';\r\n      }\r\n      this.modifyShow = true;\r\n    }\r\n  }\r\n  // 修改 处理\r\n  modifyHandleFunc() {\r\n    console.log(this.modifyForm);\r\n    // 设置修改的卷名称以及修改后的名称\r\n    if (this.modifyForm.isSameName) {\r\n      this.modifyForm.newVoName = this.modifyForm.name;\r\n    }\r\n    this.modifyForm.newDsName = this.modifyForm.name;\r\n    this.remoteSrv.updateVmfs(this.modifyForm.volume_id, this.modifyForm).subscribe((result: any) => {\r\n      if (result.code === '0') {\r\n        console.log('modify success:' + this.modifyForm.oldDsName);\r\n      } else {\r\n        console.log('modify faild：' + this.modifyForm.oldDsName + result.description);\r\n      }\r\n      // 关闭编辑窗口\r\n      this.modifyShow = false;\r\n      // 重新请求列表数据\r\n      // this.refresh();\r\n    });\r\n  }\r\n  // table数据处理\r\n  refresh() {\r\n    this.isLoading = true;\r\n    // We convert the filters from an array to a map,\r\n    // because that's what our backend-calling service is expecting\r\n    // let sort\r\n    // <{order: Boolean, sort: String}> sort\r\n    // sort = state.sort\r\n    // // 排序 排序规则order:  true降序  false升序 ;   排序值by: 字符串  按照某个字段排序  在html里[clrDgSortBy]自定义\r\n    // if (sort) {\r\n    //   this.query.order = sort.reverse ? 'desc' : 'asc'\r\n    //   this.query.sort = sort.by\r\n    // }\r\n    // // 过滤器   过滤内容\r\n    // let filters: {[prop:string]: any[]} = {};\r\n    // if (state.filters) {\r\n    //   for (let filter of state.filters) {\r\n    //     let {property, value} = <{property: string, value: string}> filter;\r\n    //     filters[property] = [value];\r\n    //   }\r\n    // }\r\n    // 分页器数据current: 1 当前页;    size: 5 分页大小\r\n    // if (state.page) {\r\n    //   this.query.page = state.page.current;\r\n    //   this.query.per_page = state.page.size;\r\n    // }\r\n    // 进行数据加载\r\n    this.remoteSrv.getData(this.params)\r\n        .subscribe((result: any) => {\r\n          console.log(result);\r\n          if (result.code === '0' && null != result.data ) {\r\n            this.list = result.data;\r\n            if (null !== this.list) {\r\n              this.total = this.list.length;\r\n              this.isLoading = false;\r\n              // 获取chart 数据\r\n              const volumeIds = [];\r\n              this.list.forEach(item => {\r\n                volumeIds.push(item.volumeId);\r\n              });\r\n              // 设置卷ID集合\r\n              this.volumnIds = volumeIds;\r\n\r\n              if (this.volumnIds.length > 0) {\r\n                this.remoteSrv.getChartData(this.volumnIds).subscribe((chartResult: any) => {\r\n                  console.log('chartResult');\r\n                  console.log(chartResult);\r\n                  if (chartResult.code === '0' && chartResult.data != null) {\r\n                    const chartList: List [] = chartResult.data;\r\n                    this.list.forEach(item => {\r\n                      chartList.forEach(charItem => {\r\n                        // 若属同一个卷则将chartItem的带宽、iops、读写相应时间 值赋予列表\r\n                        if (item.volumeId === charItem.volumeId) {\r\n                          item.iops = charItem.iops;\r\n                          item.bandwidth = charItem.bandwidth;\r\n                          item.readResponseTime = charItem.readResponseTime;\r\n                          item.writeResponseTime = charItem.writeResponseTime;\r\n                        }\r\n                      });\r\n                    });\r\n                    this.cdr.detectChanges(); // 此方法变化检测，异步处理数据都要添加此方法\r\n                  } else {\r\n                    console.log(chartResult.description);\r\n                  }\r\n                });\r\n              }\r\n              this.cdr.detectChanges(); // 此方法变化检测，异步处理数据都要添加此方法\r\n            }\r\n          } else {\r\n            console.log(result.description);\r\n          }\r\n        });\r\n  }\r\n\r\n  // 主机或集群数据处理 deviceType: 设备类型、deviceName 设备名称、主机/集群ID\r\n  deviceDataHandle(deviceType: string, deviceName: string, deviceId) {\r\n      console.log('deviceType:' + deviceType + ', deviceName: ' + deviceName + ',deviceId: ' + deviceId);\r\n      this.form.deviceName = deviceName;\r\n      switch (deviceType) {\r\n        case 'Host':\r\n          this.form.hostId = deviceId;\r\n          this.form.host = deviceName;\r\n          this.hostRootDirectory[0].expanded = false;\r\n          break;\r\n        case 'Cluster':\r\n          this.form.cluster = deviceName;\r\n          this.form.clusterId = deviceId;\r\n          this.clusterRootDirectory[0].expanded = false;\r\n          break;\r\n        default:\r\n          this.form.hostId = '';\r\n          this.form.host = '';\r\n          this.form.cluster = '';\r\n          this.form.clusterId = '';\r\n          break;\r\n      }\r\n  }\r\n  // 获取所有存储数据\r\n  getStorageList() {\r\n    this.remoteSrv.getStorages().subscribe((result: any) => {\r\n      console.log(result);\r\n      if (result.code === '0' && result.data !== null) {\r\n        this.storageList = result.data.data;\r\n        this.cdr.detectChanges(); // 此方法变化检测，异步处理数据都要添加此方法\r\n      }\r\n    });\r\n  }\r\n\r\n  // 获取存储池数据\r\n  getStoragePoolsByStorId() {\r\n    console.log('selectSotrageId' + this.form.storage_id);\r\n    if (null !== this.form.storage_id && '' !== this.form.storage_id) {\r\n      this.remoteSrv.getStoragePoolsByStorId(this.form.storage_id).subscribe((result: any) => {\r\n        console.log(result);\r\n        if (result.code === '0' && result.data !== null) {\r\n          this.storagePoolList = result.data.data;\r\n          this.cdr.detectChanges(); // 此方法变化检测，异步处理数据都要添加此方法\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  // 初始化块大小（修改版本触发事件）\r\n  setBlockSizeOptions() {\r\n    const options = [];\r\n    // const versionVal = this.versionBtn.nativeElement.value;\r\n    const versionVal = this.form.version + '';\r\n    const option0 = {key: null, value : ''};\r\n    options.push(option0);\r\n    console.log('versionVal' + versionVal);\r\n    if (versionVal === '6') {\r\n      const option1 = {key: 1024, value : '1MB'};\r\n      options.push(option1);\r\n      const option2 = {key: 64, value : '64KB'};\r\n      options.push(option2);\r\n    } else if (versionVal === '5') {\r\n      const option1 = {key: 1024, value : '1MB'};\r\n      options.push(option1);\r\n    }\r\n    // 重置blockSize的值\r\n    this.form.blockSize = null;\r\n    // this.blockSizeBtn.nativeElement.value = null;\r\n    // 设置blockSize 可选值\r\n    this.blockSizeOptions = options;\r\n    // 重置空间回收粒度\r\n    // this.form.spaceReclamationGranularity = 0;\r\n    this.setSrgOptions();\r\n  }\r\n  // 初始化空间回收粒度\r\n  setSrgOptions() {\r\n    const options = [];\r\n    // const srgValue = this.blockSizeBtn.nativeElement.value;\r\n    const blockValue = this.form.blockSize + '';\r\n    const option0 = {key: null, value : ''};\r\n    options.push(option0);\r\n    if (blockValue === '1024') {\r\n      const option1 = {key: 1024, value : '1MB'};\r\n      options.push(option1);\r\n      const option2 = {key: 8, value : '8KB'};\r\n      options.push(option2);\r\n    } else if (blockValue === '64') {\r\n      const option1 = {key: 64, value : '64KB'};\r\n      options.push(option1);\r\n      const option2 = {key: 8, value : '8KB'};\r\n      options.push(option2);\r\n    }\r\n    this.srgOptions = options;\r\n    this.form.spaceReclamationGranularity = null;\r\n    console.log('this.form.blockSize:' + this.form.blockSize);\r\n    console.log('this.form.spaceReclamationGranularity:' + this.form.spaceReclamationGranularity);\r\n  }\r\n\r\n  // 设置主机数据\r\n  setHostDatas() {\r\n    return new Promise((resolve, reject) => {\r\n      this.remoteSrv.getHostList().subscribe((result: any) => {\r\n        let hostList: HostList[] = []; // 主机列表\r\n        /*console.log(result);*/\r\n        if (result.code === '0' && result.data !== null) {\r\n          hostList = result.data;\r\n          hostList.forEach(item => {\r\n            // const hostData = {\r\n            //   icon: 'map',\r\n            //   id: item.hostId,\r\n            //   name: item.hostName,\r\n            //   active: false\r\n            // };\r\n            // this.hostRootDirectory[0].files.push(hostData);\r\n\r\n            const hostInfo = {\r\n              deviceId: item.hostId,\r\n              deviceName: item.hostName,\r\n              deviceType: 'host',\r\n            };\r\n            this.deviceList.push(hostInfo);\r\n          });\r\n          /*console.log('this.deviceList  host::');\r\n          console.log(this.deviceList);*/\r\n          this.form.hostDataloadSuccess = true;\r\n          resolve(this.deviceList);\r\n        }\r\n      });\r\n    });\r\n  }\r\n  // 设置集群数据\r\n  setClusterDatas() {\r\n    // return new Promise((resolve, reject) => {\r\n      this.remoteSrv.getClusterList().subscribe((result: any) => {\r\n        let clusterList: ClusterList [] = []; // 集群列表\r\n        console.log(result);\r\n        if (result.code === '0' && result.data !== null) {\r\n          clusterList = result.data;\r\n          clusterList.forEach(item => {\r\n            // const culData = {\r\n            //   icon: 'map',\r\n            //   id: item.clusterId,\r\n            //   name: item.clusterName,\r\n            //   active: false\r\n            // };\r\n            // this.clusterRootDirectory[0].files.push(culData);\r\n\r\n            const clusterInfo = {\r\n              deviceId: item.clusterId,\r\n              deviceName: item.clusterName,\r\n              deviceType: 'cluster',\r\n            };\r\n            this.deviceList.push(clusterInfo);\r\n          });\r\n          // resolve(this.deviceList);\r\n          this.form.culDataloadSuccess = true;\r\n          this.cdr.detectChanges(); // 此方法变化检测，异步处理数据都要添加此方法\r\n        }\r\n      });\r\n    // });\r\n  }\r\n  // 点击addBtn触发事件\r\n  addBtnClickFunc() {\r\n    // 初始化表单\r\n    this.form = new GetForm().getAddForm();\r\n    // 添加页面显示\r\n    this.popShow = true;\r\n    // 版本、块大小、粒度下拉框初始化\r\n    this.setBlockSizeOptions();\r\n    // 初始化数据\r\n    this.deviceList = [];\r\n    // 初始添加页面的主机集群信息\r\n    this.setHostDatas().then(res => {\r\n      this.cdr.detectChanges(); // 此方法变化检测，异步处理数据都要添加此方法\r\n    });\r\n\r\n    this.setClusterDatas();\r\n    // 初始化服务等级数据\r\n    this.setServiceLevelList();\r\n  }\r\n  // 获取服务等级数据\r\n  setServiceLevelList() {\r\n    this.remoteSrv.getServiceLevelList().subscribe((result: any) => {\r\n      console.log(result);\r\n      if (result.code === '0' && result.data !== null) {\r\n        this.serviceLevelList = result.data.data;\r\n        this.cdr.detectChanges(); // 此方法变化检测，异步处理数据都要添加此方法\r\n      }\r\n    });\r\n  }\r\n\r\n  // 添加vmfs 处理\r\n  addVmfsHanlde() {\r\n    // 数据预处----卷名称\r\n    if (this.form.isSameName) { // 卷名称与vmfs名称相同（PS：不同时为必填）\r\n      this.form.volumeName = this.form.name;\r\n    }\r\n    // 数据预处----容量 （后端默认单位为GB）\r\n    switch (this.form.capacityUnit) {\r\n      case 'TB':\r\n        this.form.capacity = this.form.capacity * 1024;\r\n        break;\r\n      case 'MB':\r\n        this.form.capacity = this.form.capacity / 1024;\r\n        break;\r\n      case 'KB':\r\n        this.form.capacity = this.form.capacity / (1024 * 1024);\r\n        break;\r\n      default: // 默认GB 不变\r\n        break;\r\n    }\r\n    // 主机/集群数据处理\r\n    if (this.chooseDevice.deviceType === 'host') {\r\n      this.form.host = this.chooseDevice.deviceName;\r\n      this.form.hostId = this.chooseDevice.deviceId;\r\n    } else {\r\n      this.form.cluster = this.chooseDevice.deviceName;\r\n      this.form.clusterId = this.chooseDevice.deviceId;\r\n    }\r\n    if (this.levelCheck === 'customer') { // 未选择 服务等级 需要将服务等级数据设置为空\r\n      this.form.service_level_id = null;\r\n      this.form.service_level_name = null;\r\n    }\r\n\r\n    console.log(this.form);\r\n    this.remoteSrv.createVmfs(this.form).subscribe((result: any) => {\r\n      if (result.code === '0') {\r\n        console.log('创建成功');\r\n      } else {\r\n        console.log('创建失败：' + result.description);\r\n      }\r\n    });\r\n  }\r\n  // 服务等级 点击事件 serviceLevId:服务等级ID、serviceLevName：服务等级名称\r\n  serviceLevelClickHandel(serviceLevId: string, serviceLevName: string) {\r\n    this.form.service_level_id = serviceLevId;\r\n    this.form.service_level_name = serviceLevName;\r\n    console.log('serviceLevId:' + serviceLevId + 'serviceLevName:' + serviceLevName);\r\n  }\r\n  // 未选择服务等级 时调用方法\r\n  customerClickFunc() {\r\n    this.levelCheck = 'customer';\r\n    this.getStorageList();\r\n  }\r\n  // 页面跳转\r\n  navigateTo(objectid: string){\r\n    console.log('页面跳转了');\r\n    console.log(objectid);\r\n    this.gs.getClientSdk().app.navigateTo({\r\n      targetViewId: 'vsphere.core.datastore.summary',\r\n      objectId: objectid\r\n    });\r\n  }\r\n\r\n  // 删除VMFS 处理函数\r\n  delHandleFunc() {\r\n    const volumeIds = this.rowSelected.map(item => item.volumeId);\r\n    console.log('del vmfs volumeIds:' + volumeIds);\r\n    this.remoteSrv.delVmfs(volumeIds).subscribe((result: any) => {\r\n      // 隐藏删除提示页面\r\n      this.delShow = false;\r\n      if (result.code === '0'){\r\n        console.log('DEL success' + this.rowSelected[0].name + ' success');\r\n        // 空间回收完成重新请求数据\r\n        this.refresh();\r\n      } else {\r\n        console.log('DEL faild: ' + result.description);\r\n      }\r\n      // 关闭删除页面\r\n      this.delShow = false;\r\n    });\r\n  }\r\n  // 挂载按钮点击事件\r\n  mountBtnFunc() {\r\n    // 初始化表单\r\n    this.mountForm = new GetForm().getMountForm();\r\n    const objectIds = [];\r\n    objectIds.push(this.rowSelected[0].objectid);\r\n    this.mountForm.dataStoreObjectIds = objectIds;\r\n    // 获取服务器 通过ObjectId过滤已挂载的服务器\r\n    this.remoteSrv.getHostListByObjectId(this.rowSelected[0].objectid).subscribe((result: any) => {\r\n    // this.remoteSrv.getHostList().subscribe((result: any) => {\r\n      if (result.code === '0' && result.data !== null){\r\n        this.hostList = result.data;\r\n        this.cdr.detectChanges();\r\n      }\r\n    });\r\n    // 获取集群 通过ObjectId过滤已挂载的集群\r\n    this.remoteSrv.getClusterListByObjectId(this.rowSelected[0].objectid).subscribe((result: any) => {\r\n    // this.remoteSrv.getClusterList().subscribe((result: any) => {\r\n      if (result.code === '0'){\r\n        this.clusterList = result.data;\r\n        this.cdr.detectChanges();\r\n      }\r\n    });\r\n    // 打开挂载页面\r\n    this.mountShow = true;\r\n  }\r\n  // 挂载提交\r\n  mountSubmit(){\r\n    // 数据封装\r\n    if (this.mountForm.mountType === '1'){ // 服务器\r\n      this.mountForm.hostId = this.chooseHost.hostId;\r\n      this.mountForm.host = this.chooseHost.hostName;\r\n    }else if (this.mountForm.mountType === '2'){ // 集群\r\n      this.mountForm.cluster = this.chooseCluster.clusterName;\r\n      this.mountForm.clusterId = this.chooseCluster.clusterId;\r\n    }\r\n    this.remoteSrv.mountVmfs(this.mountForm).subscribe((result: any) => {\r\n      if (result.code  ===  '0'){\r\n        console.log('挂载成功');\r\n      } else {\r\n        console.log('挂载异常：' + result.description);\r\n      }\r\n      // 隐藏挂载页面\r\n      this.mountShow = false;\r\n    });\r\n  }\r\n  // 卸载处理函数\r\n  unmountHandleFunc() {\r\n    this.remoteSrv.unmountVMFS().subscribe((result: any) => {\r\n\r\n      if (result.code === '0'){\r\n        console.log('unmount ' + name + ' success');\r\n        // 空间回收完成重新请求数据\r\n        this.refresh();\r\n      } else {\r\n        console.log('unmount ' + name + ' fail：' + result.description);\r\n      }\r\n      // 关闭卸载页面\r\n      this.unmountShow = false;\r\n    });\r\n  }\r\n  // 回收空间 处理\r\n  reclaimHandleFunc() {\r\n    const name = this.rowSelected[0].name;\r\n    console.log('reclaim:' + name);\r\n    const vmfsNames = this.rowSelected.map(item => item.name);\r\n    this.remoteSrv.reclaimVmfs(vmfsNames).subscribe((result: any) => {\r\n      if (result.code === '0'){\r\n        console.log('Reclaim ' + name + ' success');\r\n        // 空间回收完成重新请求数据\r\n        this.refresh();\r\n      } else {\r\n        console.log('Reclaim ' + name + ' fail：' + result.description);\r\n      }\r\n      // 关闭回收空间页面\r\n      this.reclaimShow = false;\r\n    });\r\n  }\r\n  // 变更服务等级 按钮点击事件\r\n  changeServiceLevelBtnFunc() {\r\n    // 初始化表单\r\n    this.changeServiceLevelForm = new GetForm().getChangeLevelForm();\r\n    if (this.rowSelected.length === 1) {\r\n      // 设置表单默认参数\r\n      const volumeIds = [];\r\n      volumeIds.push(this.rowSelected[0].volumeId);\r\n      this.changeServiceLevelForm.volume_ids = volumeIds;\r\n      this.changeServiceLevelForm.ds_name = this.rowSelected[0].name;\r\n      this.changeServiceLevelForm.service_level_name = this.rowSelected[0].serviceLevelName;\r\n\r\n      // 显示修改服务等级页面\r\n      this.changeServiceLevelShow = true;\r\n      // 初始化服务等级列表数据\r\n      this.setServiceLevelList();\r\n    }\r\n  }\r\n  // 变更服务等级 处理\r\n  changeSLHandleFunc() {\r\n    this.remoteSrv.changeServiceLevel(this.changeServiceLevelForm).subscribe((result: any) => {\r\n      if (result.code === '0'){\r\n        console.log('change service level success:' + name);\r\n        // 空间回收完成重新请求数据\r\n        this.refresh();\r\n      } else {\r\n        console.log('change service level faild: ' + name  + ' Reason:' + result.description);\r\n      }\r\n      // 关闭修改服务等级页面\r\n      this.changeServiceLevelShow = false;\r\n    });\r\n  }\r\n  // 扩容按钮点击事件\r\n  expandBtnFunc() {\r\n    if (this.rowSelected.length === 1) {\r\n      // 初始化form表单\r\n      this.expandForm = new GetForm().getExpandForm();\r\n\r\n      this.expandShow = true;\r\n      console.log(this.rowSelected[0]);\r\n      this.expandForm.volume_id = this.rowSelected[0].volumeId;\r\n      this.expandForm.ds_name = this.rowSelected[0].name;\r\n    }\r\n  }\r\n  // 扩容处理\r\n  expandHandleFunc() {\r\n    // 容量单位转换\r\n    switch (this.expandForm.capacityUnit) {\r\n      case 'TB':\r\n        this.expandForm.vo_add_capacity = this.expandForm.vo_add_capacity * 1024;\r\n        break;\r\n      case 'MB':\r\n        this.expandForm.vo_add_capacity = this.expandForm.vo_add_capacity / 1024;\r\n        break;\r\n      case 'KB':\r\n        this.expandForm.vo_add_capacity = this.expandForm.vo_add_capacity / (1024 * 1024);\r\n        break;\r\n      default: // 默认GB 不变\r\n        break;\r\n    }\r\n    // 参数封装\r\n    const params = [];\r\n    params.push(this.expandForm);\r\n    this.remoteSrv.expandVMFS(params).subscribe((result: any) => {\r\n      if (result.code === '0'){\r\n        console.log('expand success:' + name);\r\n      }else {\r\n        console.log('expand: ' + name  + ' Reason:' + result.description);\r\n      }\r\n      // 隐藏扩容页面\r\n      this.expandShow = false;\r\n    });\r\n  }\r\n}\r\n","<div>\r\n<!--  <div><span *ngFor=\"let item of rowSelected\">{{item.name}}</span></div>-->\r\n  <!-- 头部按钮组 -->\r\n  <div class=\"gh-btngroup-header\">\r\n    <div class=\"gh-btngroup-left\">\r\n      <!--添加-->\r\n      <button class=\"btn btn-primary\" (click)=\"addBtnClickFunc();\">{{'menu.add' | translate}}</button>\r\n      <!--编辑-->\r\n      <button class=\"btn btn-primary\" [disabled]=\"rowSelected.length !== 1\" (click)=\"modifyData()\">{{'menu.edit' | translate}}</button>\r\n      <!--扩容-->\r\n      <button class=\"btn btn-primary\" (click)=\"expandBtnFunc();\" [disabled]=\"rowSelected.length !== 1\">{{'menu.expand' | translate}}</button>\r\n      <!-- 更多操作 -->\r\n      <clr-dropdown [clrCloseMenuOnItemClick]=\"false\">\r\n        <button clrDropdownTrigger class=\"btn btn-primary\" aria-label=\"Dropdown demo button\">\r\n          {{'menu.more' | translate}}\r\n          <clr-icon shape=\"caret down\"></clr-icon>\r\n        </button>\r\n        <clr-dropdown-menu *clrIfOpen>\r\n          <!--空间回收-->\r\n          <div aria-label=\"Dropdown header Action 1\" (click)=\"reclaimShow=true;\" [disabled]=\"rowSelected.length < 1\" clrDropdownItem>{{'menu.reclaim' | translate}}</div>\r\n          <div class=\"dropdown-divider\" role=\"separator\" aria-hidden=\"true\"></div>\r\n          <!--修改服务等级  按钮展示条件：Datastore所在卷属于服务等级时（选中的单条数据），才呈现“变更服务等级”按钮或菜单-->\r\n          <div aria-label=\"Dropdown header Action 2\" (click)=\"changeServiceLevelBtnFunc();\" *ngIf=\"rowSelected.length === 1 && rowSelected[0].serviceLevelName !== '' && rowSelected[0].serviceLevelName !== null\" clrDropdownItem>{{'menu.changeServiceLevel' | translate}}</div>\r\n          <div class=\"dropdown-divider\" role=\"separator\" aria-hidden=\"true\"></div>\r\n          <!--挂载-->\r\n          <div aria-label=\"Dropdown header Action 2\" (click)=\"mountBtnFunc();\" [disabled]=\"rowSelected.length !== 1\" clrDropdownItem>{{'menu.mount' | translate}}</div>\r\n          <!--卸载-->\r\n          <div aria-label=\"Dropdown header Action 2\" (click)=\"unmountShow=true\" [disabled]=\"rowSelected.length !== 1\" clrDropdownItem>{{'menu.unmount' | translate}}</div>\r\n          <div class=\"dropdown-divider\" role=\"separator\" aria-hidden=\"true\"></div>\r\n          <!--删除-->\r\n          <div aria-label=\"Dropdown header Action 2\" (click)=\"delShow=true\" [disabled]=\"rowSelected.length < 1\" clrDropdownItem>{{'menu.del' | translate}}</div>\r\n        </clr-dropdown-menu>\r\n      </clr-dropdown>\r\n    </div>\r\n    <!-- 基本视图、性能视图、刷新 -->\r\n    <div class=\"btn-group btn-icon\">\r\n      <div class=\"radio btn\">\r\n        <input (click)=\"radioCheck = 'list'\" type=\"radio\" name=\"btn-group-demo-radios\" id=\"btn-demo-radio-1\" checked>\r\n        <label for=\"btn-demo-radio-1\"><clr-icon shape=\"list\" size=\"20\"></clr-icon></label>\r\n      </div>\r\n      <div class=\"radio btn\">\r\n        <input (click)=\"radioCheck = 'chart'\" type=\"radio\" name=\"btn-group-demo-radios\" id=\"btn-demo-radio-2\">\r\n        <label for=\"btn-demo-radio-2\"><clr-icon shape=\"dashboard\" size=\"20\"></clr-icon></label>\r\n      </div>\r\n      <div class=\"radio btn merginLeft\">\r\n        <!--<input type=\"radio\" name=\"btn-group-demo-radios\" id=\"btn-demo-radio-3\">-->\r\n        <label><clr-icon shape=\"refresh\" size=\"20\" (click)=\"refresh();\"></clr-icon></label>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <!-- 列表页 -->\r\n  <!-- 列表页 -->\r\n  <clr-datagrid [(clrDgSelected)]=\"rowSelected\" [clrDgLoading]=\"isLoading\">\r\n    <clr-dg-column [clrDgField]=\"'name'\">{{'vmfs.name' | translate}}</clr-dg-column>\r\n    <clr-dg-column hidden [clrDgField]=\"'volumeId'\">volumeId</clr-dg-column>\r\n    <clr-dg-column hidden [clrDgField]=\"'objectid'\">objectid</clr-dg-column>\r\n    <clr-dg-column [hidden]=\"radioCheck!=='list'\" [clrDgField]=\"'status'\">{{'vmfs.status' | translate}}</clr-dg-column>\r\n    <clr-dg-column [hidden]=\"radioCheck!=='list'\" [clrDgField]=\"'capacity'\" [clrDgSortOrder]=\"'capacity'\">{{'vmfs.capacity' | translate}}</clr-dg-column>\r\n    <clr-dg-column [hidden]=\"radioCheck!=='list'\" [clrDgField]=\"'usedCapacity'\" [clrDgSortOrder]=\"'usedCapacity'\">{{'vmfs.usedCapacity' | translate}}</clr-dg-column>\r\n    <clr-dg-column [hidden]=\"radioCheck!=='list'\" [clrDgField]=\"'capacityUsage'\" [clrDgSortOrder]=\"'capacityUsage'\">{{'vmfs.capacityUsage' | translate}}</clr-dg-column>\r\n    <clr-dg-column [hidden]=\"radioCheck!=='list'\" [clrDgField]=\"'freeSpace'\" [clrDgSortOrder]=\"'freeSpace'\">{{'vmfs.freeSpace' | translate}}</clr-dg-column>\r\n    <clr-dg-column [hidden]=\"radioCheck!=='list'\"  [clrDgField]=\"'reserveCapacity'\" [clrDgSortOrder]=\"'reserveCapacity'\">{{'vmfs.reserveCapacity' | translate}}</clr-dg-column>\r\n    <clr-dg-column [hidden]=\"radioCheck!=='list'\" [clrDgField]=\"'device'\">{{'vmfs.device' | translate}}</clr-dg-column>\r\n    <clr-dg-column [hidden]=\"radioCheck!=='list'\" [clrDgField]=\"'serviceLevelName'\">{{'vmfs.serviceLevelName' | translate}}</clr-dg-column>\r\n    <clr-dg-column [hidden]=\"radioCheck!=='list'\" [clrDgField]=\"'protectionStatus'\">{{'vmfs.protectionStatus' | translate}}</clr-dg-column>\r\n    <clr-dg-column [hidden]=\"radioCheck!=='chart'\" [clrDgField]=\"'iops'\">{{'vmfs.iops' | translate}}</clr-dg-column>\r\n    <clr-dg-column [hidden]=\"radioCheck!=='chart'\">{{'vmfs.iopsQoSTarget' | translate}}</clr-dg-column>\r\n    <clr-dg-column [hidden]=\"radioCheck!=='chart'\" [clrDgField]=\"'bandwidth'\">{{'vmfs.bandwidth' | translate}}</clr-dg-column>\r\n    <clr-dg-column [hidden]=\"radioCheck!=='chart'\">{{'vmfs.bandwidthQoSTarget' | translate}}</clr-dg-column>\r\n    <clr-dg-column [hidden]=\"radioCheck!=='chart'\" [clrDgField]=\"'readResponseTime'\">{{'vmfs.readResponseTime' | translate}}</clr-dg-column>\r\n    <clr-dg-column [hidden]=\"radioCheck!=='chart'\" [clrDgField]=\"'writeResponseTime'\">{{'vmfs.writeResponseTime' | translate}}</clr-dg-column>\r\n    <clr-dg-column [hidden]=\"radioCheck!=='chart'\" [clrDgField]=\"'latency'\">{{'vmfs.latency' | translate}}</clr-dg-column>\r\n    <clr-dg-column [hidden]=\"radioCheck!=='chart'\">{{'vmfs.latencyQoSTarget' | translate}}</clr-dg-column>\r\n    <clr-dg-row *clrDgItems=\"let item of list\" [clrDgItem]=\"item\">\r\n      <clr-dg-cell (click)=\"navigateTo(item.objectid);\">{{item.name}}</clr-dg-cell>\r\n      <clr-dg-cell hidden>{{item.volumeId}}</clr-dg-cell>\r\n      <clr-dg-cell hidden>{{item.objectid}}</clr-dg-cell>\r\n      <clr-dg-cell [hidden]=\"radioCheck!=='list'\">{{item.status}}</clr-dg-cell>\r\n      <clr-dg-cell [hidden]=\"radioCheck!=='list'\">{{item.capacity}}</clr-dg-cell>\r\n      <clr-dg-cell [hidden]=\"radioCheck!=='list'\">{{item.capacity - item.freeSpace}}</clr-dg-cell>\r\n      <clr-dg-cell [hidden]=\"radioCheck!=='list'\"><clr-progress-bar clrValue=\"{{((item.capacity - item.freeSpace)/item.capacity * 100).toFixed(2)}}\" clrSuccess clrLabeled></clr-progress-bar></clr-dg-cell>\r\n      <clr-dg-cell [hidden]=\"radioCheck!=='list'\">{{item.freeSpace}}</clr-dg-cell>\r\n      <clr-dg-cell [hidden]=\"radioCheck!=='list'\">{{item.reserveCapacity}}</clr-dg-cell>\r\n      <clr-dg-cell [hidden]=\"radioCheck!=='list'\">{{item.device}}</clr-dg-cell>\r\n      <clr-dg-cell [hidden]=\"radioCheck!=='list'\">{{item.serviceLevelName}}</clr-dg-cell>\r\n      <clr-dg-cell [hidden]=\"radioCheck!=='list'\">{{item.vmfsProtected ? '保护':'未保护'}}</clr-dg-cell>\r\n      <clr-dg-cell [hidden]=\"radioCheck!=='chart'\">{{item.iops}}</clr-dg-cell>\r\n      <clr-dg-cell [hidden]=\"radioCheck!=='chart'\">{{('vmfs.upper' | translate)+' '+item.maxIops+' | '+('vmfs.lower' | translate)+' '+item.minIops}}</clr-dg-cell>\r\n      <clr-dg-cell [hidden]=\"radioCheck!=='chart'\">{{item.bandwidth}}</clr-dg-cell>\r\n      <clr-dg-cell [hidden]=\"radioCheck!=='chart'\">{{('vmfs.upper' | translate)+' '+item.maxBandwidth+' | '+('vmfs.lower' | translate)+' '+item.minBandwidth}}</clr-dg-cell>\r\n      <clr-dg-cell [hidden]=\"radioCheck!=='chart'\">{{item.readResponseTime}}</clr-dg-cell>\r\n      <clr-dg-cell [hidden]=\"radioCheck!=='chart'\">{{item.writeResponseTime}}</clr-dg-cell>\r\n      <clr-dg-cell [hidden]=\"radioCheck!=='chart'\">{{item.latency}}</clr-dg-cell>\r\n      <clr-dg-cell [hidden]=\"radioCheck!=='chart'\" >{{('vmfs.lower' | translate)+' '+item.latency}}</clr-dg-cell>\r\n    </clr-dg-row>\r\n    <clr-dg-footer>\r\n\r\n      <clr-dg-pagination #pagination [clrDgPageSize]=\"5\" [clrDgTotalItems]=\"total\">\r\n        <clr-dg-page-size [clrPageSizeOptions]=\"[5,10,50,100]\">per page</clr-dg-page-size>\r\n        {{pagination.firstItem + 1}} - {{pagination.lastItem + 1}}\r\n        of {{pagination.totalItems}}\r\n      </clr-dg-pagination>\r\n    </clr-dg-footer>\r\n  </clr-datagrid>\r\n  <!-- 示例 -->\r\n  <span class=\"tabs-btn-wrap\">\r\n    <span (click)=\"expendActive = !expendActive\" class=\"tabs-btn\" [ngClass]=\"{'tabs-btn_active': !expendActive}\">按钮1</span>\r\n    <span (click)=\"expendActive = !expendActive\" class=\"tabs-btn\" [ngClass]=\"{'tabs-btn_active': expendActive}\">按钮2</span>\r\n  </span>\r\n  <div class=\"expend-wrap\" [ngClass]=\"{'expend-wrap_active': expendActive}\">\r\n    <div (click)=\"expendActive = !expendActive\" class=\"expend-title\">\r\n      这里是标题\r\n    </div>\r\n    <div [hidden]=\"!expendActive\" class=\"expend-content\">\r\n      <table class=\"table table-vertical table-noborder table-compact\">\r\n        <tbody>\r\n          <tr>\r\n            <th hidden></th>\r\n            <th>\r\n              3333333\r\n            </th>\r\n          </tr>\r\n        <tr>\r\n          <th hidden></th>\r\n            <td>{{'vmfs.capacityUsage' | translate}}</td>\r\n          <td>{{'vmfs.qos' | translate}}</td>\r\n          <td>{{'vmfs.protection' | translate}}</td>\r\n        </tr>\r\n        <tr>\r\n          <th hidden></th>\r\n          <th><clr-progress-bar clrValue=\"100\" clrSuccess clrLabeled></clr-progress-bar></th>\r\n          <th>IOPS <= 100</th>\r\n        </tr>\r\n          <tr>\r\n            <th hidden></th>\r\n            <th>3 GB/4GB</th>\r\n            <th>Latency: 1414</th>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </div>\r\n  \r\n  <!-- 弹出form提交框 添加 -->\r\n  <clr-wizard #wizard [(clrWizardOpen)]=\"popShow\">\r\n    <clr-wizard-title>{{'vmfs.addTitle' | translate}}</clr-wizard-title>\r\n  \r\n    <clr-wizard-button [type]=\"'cancel'\">{{'menu.cancel' | translate}}</clr-wizard-button>\r\n    <clr-wizard-button [type]=\"'previous'\">{{'menu.previous' | translate}}</clr-wizard-button>\r\n    <clr-wizard-button [type]=\"'next'\">{{'menu.next' | translate}}</clr-wizard-button>\r\n    <clr-wizard-button (click)=\"addVmfsHanlde();\" [type]=\"'finish'\">{{'menu.ok' | translate}}</clr-wizard-button>\r\n\r\n    <!--Page1 -->\r\n    <clr-wizard-page [clrWizardPageNextDisabled]=\"name.pristine || !formPageOne.valid\">\r\n        <ng-template clrPageTitle>{{'vmfs.datastoreSetting' | translate}}</ng-template> <!-- mandatory -->\r\n  \r\n        <form clrForm #formPageOne=\"ngForm\">\r\n          <!--名称 -->\r\n          <clr-input-container>\r\n            <label>{{'vmfs.name' | translate}}</label>\r\n            <input clrInput  [(ngModel)]=\"form.name\" name=\"name\" #name=\"ngModel\" />\r\n            <clr-control-error>This field is required!</clr-control-error>\r\n          </clr-input-container>\r\n          <clr-checkbox-container>\r\n            <label></label>\r\n            <clr-checkbox-wrapper>\r\n              <input type=\"checkbox\" clrCheckbox name=\"isSameName\" [(ngModel)]=\"form.isSameName\" />\r\n              <label>{{'vmfs.vmfsAddNameDesc' | translate}}</label>\r\n            </clr-checkbox-wrapper>\r\n          </clr-checkbox-container>\r\n          <clr-input-container *ngIf=\"!form.isSameName\">\r\n            <label>{{'vmfs.volumeName' | translate}}</label>\r\n            <input clrInput  [(ngModel)]=\"form.volumeName\" name=\"volumeName\" />\r\n            <clr-control-error>This field is required!</clr-control-error>\r\n          </clr-input-container>\r\n\r\n\r\n          <!--版本 -->\r\n          <clr-select-container>\r\n            <label>{{'vmfs.version' | translate}}</label>\r\n            <select (change)=\"setBlockSizeOptions();\"  [(ngModel)]=\"form.version\" clrSelect name=\"version\">\r\n              <option value='5'>VMFS 5</option>\r\n              <option value='6'>VMFS 6</option>\r\n            </select>\r\n          </clr-select-container>\r\n\r\n          <!-- 容量 -->\r\n          <clr-input-container>\r\n            <label>{{'vmfs.capacity' | translate}}</label>\r\n              <input clrInput  class=\"inputOneLine\" type=\"number\" [(ngModel)]=\"form.capacity\" name=\"capacity\" #number=\"ngModel\" />\r\n              <select clrInput  [(ngModel)]=\"form.capacityUnit\" name=\"capacityUnit\" >\r\n                <option value=\"TB\">TB</option>\r\n                <option value=\"GB\">GB</option>\r\n                <option value=\"MB\">MB</option>\r\n                <option value=\"KB\">KB</option>\r\n              </select>\r\n              <input clrInput style=\"width: 20px;\" readonly value=\"{{'vmfs.multiply' | translate}}\">\r\n              <input clrInput  class=\"inputOneLine\" type=\"number\" [(ngModel)]=\"form.count\" name=\"count\" #number=\"ngModel\" />\r\n          </clr-input-container>\r\n\r\n          <!-- 块大小 -->\r\n          <clr-select-container>\r\n            <label>{{'vmfs.blockSize' | translate}}</label>\r\n              <select  clrSelect [(ngModel)]=\"form.blockSize\" name=\"blockSize\" (change)=\"setSrgOptions();\">\r\n                <option *ngFor=\"let item of blockSizeOptions\" value=\"{{item.key}}\">{{item.value}}</option>\r\n            </select>\r\n          </clr-select-container>\r\n\r\n          <!-- 空间回收粒度 -->\r\n          <clr-select-container>\r\n            <label>{{'vmfs.spaceReclamationGranularity' | translate}}</label>\r\n            <select  clrSelect (ngModelOptions)=\"srgOptions\"  [(ngModel)]=\"form.spaceReclamationGranularity\" name=\"spaceReclamationGranularity\" >\r\n              <option *ngFor=\"let item of srgOptions\" value=\"{{item.key}}\">{{item.value}}</option>\r\n            </select>\r\n          </clr-select-container>\r\n\r\n          <!-- 空间回收优先级 -->\r\n          <clr-select-container>\r\n            <label>{{'vmfs.spaceReclamationPriority' | translate}}</label>\r\n            <select  clrSelect [(ngModel)]=\"form.spaceReclamationPriority\" name=\"spaceReclamationPriority\" >\r\n              <option value=\"low\">{{'vmfs.low' | translate}}</option>\r\n              <option value=\"none\">{{'vmfs.none' | translate}}</option>\r\n            </select>\r\n          </clr-select-container>\r\n\r\n          <!-- 主机/集群 -->\r\n<!--          <clr-select-container>-->\r\n<!--            <label>{{'vmfs.hostOrCluster' | translate}}</label>-->\r\n<!--            <select hidden clrSelect class=\"inputOneLine\">-->\r\n<!--            </select>-->\r\n<!--            <label>-->\r\n<!--              <input readonly required clrInput [(ngModel)]=\"form.deviceName\" name=\"deviceName\">-->\r\n<!--              <clr-tree>-->\r\n<!--                &lt;!&ndash; 主机&ndash;&gt;-->\r\n<!--                <clr-tree-node *ngFor=\"let directory of hostRootDirectory\" [(clrExpanded)]=\"directory.expanded\">-->\r\n<!--                  <clr-icon [attr.shape]=\"directory.icon\"></clr-icon>-->\r\n<!--                  {{directory.name}}-->\r\n<!--                  <clr-tree-node *ngFor=\"let file of directory.files\">-->\r\n<!--                    <button-->\r\n<!--                      (click)=\"deviceDataHandle(directory.name, file.name, file.id)\"-->\r\n<!--                      class=\"clr-treenode-link\"-->\r\n<!--                      [class.active]=\"file.active\">-->\r\n<!--                      <clr-icon [attr.shape]=\"file.icon\"></clr-icon>-->\r\n<!--                      {{file.name}}-->\r\n<!--                    </button>-->\r\n<!--                  </clr-tree-node>-->\r\n<!--                </clr-tree-node>-->\r\n<!--                &lt;!&ndash; 集群 &ndash;&gt;-->\r\n<!--                <clr-tree-node *ngFor=\"let directory of clusterRootDirectory\" [(clrExpanded)]=\"directory.expanded\">-->\r\n<!--                  <clr-icon [attr.shape]=\"directory.icon\"></clr-icon>-->\r\n<!--                  {{directory.name}}-->\r\n<!--                  <clr-tree-node *ngFor=\"let file of directory.files\">-->\r\n<!--                    <button-->\r\n<!--                      (click)=\"deviceDataHandle(directory.name, file.name, file.id)\"-->\r\n<!--                      class=\"clr-treenode-link\"-->\r\n<!--                      [class.active]=\"file.active\">-->\r\n<!--                      <clr-icon [attr.shape]=\"file.icon\"></clr-icon>-->\r\n<!--                      {{file.name}}-->\r\n<!--                    </button>-->\r\n<!--                  </clr-tree-node>-->\r\n<!--                </clr-tree-node>-->\r\n<!--              </clr-tree>-->\r\n<!--            </label>-->\r\n<!--          </clr-select-container>-->\r\n          <clr-combobox-container>\r\n            <label>{{'vmfs.hostOrCluster' | translate}}</label>\r\n            <clr-combobox [(ngModel)]=\"chooseDevice\" name=\"chooseDevice\">\r\n              <clr-options *ngIf=\"form.hostDataloadSuccess && form.culDataloadSuccess\">\r\n                <clr-option *clrOptionItems=\"let device of deviceList; field:'deviceName'\" [clrValue]=\"device\">\r\n                  <clr-icon shape=\"world\" role=\"img\" aria-label=\"World is turning\"></clr-icon> {{device.deviceName}}\r\n                  <clr-icon shape=\"sun\" role=\"img\" aria-label=\"Sun is shining\"></clr-icon>\r\n                </clr-option>\r\n              </clr-options>\r\n            </clr-combobox>\r\n            <clr-control-helper>Helper text</clr-control-helper>\r\n            <clr-control-error>There was an error</clr-control-error>\r\n          </clr-combobox-container>\r\n        </form>\r\n    </clr-wizard-page>\r\n    <!--Page2 储存库设置-->\r\n    <clr-wizard-page [clrWizardPageNextDisabled]=\"number.pristine || !formPageTwo.valid\">\r\n        <ng-template clrPageTitle>\r\n          {{'vmfs.storageSetting' | translate}}\r\n        </ng-template> <!-- mandatory -->\r\n      <div class=\"btn-group btn-icon\">\r\n        <div class=\"radio btn\">\r\n          <input (click)=\"levelCheck = 'level'\" type=\"radio\" name=\"btn-group-demo-radios\" id=\"btn-demo-radio-3\" checked>\r\n          <label for=\"btn-demo-radio-3\" class=\"setBorderedius\">{{'vmfs.byServiceLevel' | translate}}</label>\r\n        </div>\r\n        <div class=\"radio btn\">\r\n          <input (click)=\"customerClickFunc();\" type=\"radio\" name=\"btn-group-demo-radios\" id=\"btn-demo-radio-4\">\r\n          <label for=\"btn-demo-radio-4\" class=\"setBorderedius\">{{'vmfs.customer' | translate}}</label>\r\n        </div>\r\n      </div>\r\n        <form clrForm #formPageTwo=\"ngForm\">\r\n          <!-- 1、选择 服务等级-->\r\n          <ng-container *ngIf=\"levelCheck==='level'\">\r\n            <clr-accordion>\r\n              <clr-accordion-panel *ngFor=\"let item of serviceLevelList\">\r\n                <clr-accordion-title>{{item.name}}</clr-accordion-title>\r\n                <clr-accordion-content (click)=\"serviceLevelClickHandel(item.id, item.name);\" class=\"blueBg\" *clrIfExpanded>\r\n                  <table class=\"table table-vertical table-noborder table-compact\">\r\n                      <tbody>\r\n                        <tr>\r\n                          <th hidden></th>\r\n                          <th>\r\n                            {{item.name}}\r\n                          </th>\r\n                        </tr>\r\n                      <tr>\r\n                        <th hidden></th>\r\n                          <td>{{'vmfs.capacityUsage' | translate}}</td>\r\n                        <td>{{'vmfs.qos' | translate}}</td>\r\n                        <td>{{'vmfs.protection' | translate}}</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <th hidden></th>\r\n                        <th><clr-progress-bar clrValue=\"{{(item.used_capacity/item.total_capacity * 100).toFixed(2)}}\" clrSuccess clrLabeled></clr-progress-bar></th>\r\n                        <th *ngIf=\"item.simpleCapabilities.qosParam.qosPolicy.max_iops != null\">IOPS <= {{item.simpleCapabilities.qosParam.qosPolicy.max_iops}}</th>\r\n                        <th *ngIf=\"item.simpleCapabilities.qosParam.qosPolicy.min_iops != null\">IOPS >= {{item.simpleCapabilities.qosParam.qosPolicy.min_iops}}</th>\r\n                      </tr>\r\n                        <tr>\r\n                          <th hidden></th>\r\n                          <th>{{item.used_capacity}} GB/{{item.total_capacity}}GB</th>\r\n                          <th>Latency: {{item.simpleCapabilities.qosParam.qosPolicy.latency + item.simpleCapabilities.qosParam.qosPolicy.latencyUnit}}</th>\r\n                        </tr>\r\n                      </tbody>\r\n                  </table>\r\n                </clr-accordion-content>\r\n              </clr-accordion-panel>\r\n            </clr-accordion>\r\n          </ng-container>\r\n          <!-- 2、未选择 服务等级-->\r\n          <ng-container *ngIf=\"levelCheck==='customer'\">\r\n            <!--a.基本信息 -->\r\n            <clr-input-container>\r\n              <label>{{'vmfs.basicInformation' | translate}}</label>\r\n            </clr-input-container>\r\n            <clr-select-container>\r\n              <label>{{'vmfs.storageDevice' | translate}}</label>\r\n              <select clrSelect  [(ngModel)]=\"form.storage_id\" name=\"storage_id\" (ngModelChange)=\"getStoragePoolsByStorId();\">\r\n                <option value=\"\"></option>\r\n                <option *ngFor=\"let item of storageList\" value=\"{{item.id}}\">{{item.name}}</option>\r\n              </select>\r\n            </clr-select-container>\r\n            <clr-select-container>\r\n              <label>{{'vmfs.storagePool' | translate}}</label>\r\n              <select clrSelect [(ngModel)]=\"form.pool_raw_id\" name=\"pool_raw_id\" >\r\n                <option value=\"\"></option>\r\n                <option *ngFor=\"let item of storagePoolList\" value=\"{{item.id}}\">{{item.name}}</option>\r\n              </select>\r\n            </clr-select-container>\r\n\r\n            <!--b.QoS 设置 -->\r\n            <clr-input-container>\r\n              <label>{{'vmfs.qosPolicy' | translate}}</label>\r\n            </clr-input-container>\r\n            <!-- 控制策略 -->\r\n            <clr-radio-container clrInline>\r\n              <label>{{'vmfs.controlPolicy' | translate}}</label>\r\n              <clr-radio-wrapper>\r\n                <input type=\"radio\" clrRadio name=\"control_policy\" checked=\"checked\" value=\"1\" [(ngModel)]=\"form.control_policy\" />\r\n                <label>{{'vmfs.upperLimitControl' | translate}}</label>\r\n              </clr-radio-wrapper>\r\n              <clr-radio-wrapper>\r\n                <input type=\"radio\" clrRadio name=\"control_policy\" value=\"0\" [(ngModel)]=\"form.control_policy\" />\r\n                <label>{{'vmfs.lowerLimitControl' | translate}}</label>\r\n              </clr-radio-wrapper>\r\n            </clr-radio-container>\r\n            <!-- 交通管制对象 带宽 上限-->\r\n            <clr-checkbox-container *ngIf=\"form.control_policy === '1'\">\r\n              <label>{{'vmfs.trafficControlObject' | translate}}</label>\r\n              <clr-checkbox-wrapper>\r\n                <input type=\"checkbox\" [(ngModel)]=\"form.maxbandwidthChoose\" name=\"maxbandwidthChoose\" clrCheckbox/>\r\n                <label>\r\n                  {{'vmfs.bandwidthLimitUpper' | translate}}\r\n                  <input class=\"inputOneLine\" name=\"maxbandwidth\" [(ngModel)]=\"form.maxbandwidth\"/>{{'vmfs.unitM' | translate}}\r\n                </label>\r\n              </clr-checkbox-wrapper>\r\n            </clr-checkbox-container>\r\n            <!-- 交通管制对象 IOPS 上限-->\r\n            <clr-checkbox-container *ngIf=\"form.control_policy === '1'\">\r\n              <label></label>\r\n              <clr-checkbox-wrapper>\r\n                <input type=\"checkbox\" clrCheckbox/>\r\n                <label>\r\n                  {{'vmfs.IOPSLimitUpper' | translate}}\r\n                  <input class=\"inputOneLine\" name=\"maxiops\" [(ngModel)]=\"form.maxiops\"/>\r\n                </label>\r\n              </clr-checkbox-wrapper>\r\n            </clr-checkbox-container>\r\n\r\n            <!-- 交通管制对象 带宽 下限-->\r\n            <clr-checkbox-container *ngIf=\"form.control_policy === '0'\">\r\n              <label>{{'vmfs.trafficControlObject' | translate}}</label>\r\n              <clr-checkbox-wrapper>\r\n                <input type=\"checkbox\" clrCheckbox/>\r\n                <label>\r\n                  {{'vmfs.bandwidthLimitLower' | translate}}\r\n                  <input class=\"inputOneLine\" name=\"minbandwidth\" [(ngModel)]=\"form.minbandwidth\"/>{{'vmfs.unitM' | translate}}\r\n                </label>\r\n              </clr-checkbox-wrapper>\r\n            </clr-checkbox-container>\r\n            <!-- 交通管制对象 IOPS 下限-->\r\n            <clr-checkbox-container *ngIf=\"form.control_policy === '0'\">\r\n              <label></label>\r\n              <clr-checkbox-wrapper>\r\n                <input type=\"checkbox\" clrCheckbox/>\r\n                <label>\r\n                  {{'vmfs.IOPSLimitLower' | translate}}\r\n                  <input class=\"inputOneLine\" name=\"miniops\" [(ngModel)]=\"form.miniops\"/>\r\n                </label>\r\n              </clr-checkbox-wrapper>\r\n            </clr-checkbox-container>\r\n\r\n            <!--c.QoS 资源调优 -->\r\n            <clr-input-container>\r\n              <label>{{'vmfs.resourceTuning' | translate}}</label>\r\n            </clr-input-container>\r\n            <clr-select-container>\r\n              <label>{{'vmfs.provisioningType' | translate}}</label>\r\n              <select clrSelect [(ngModel)]=\"form.alloctype\" name=\"alloctype\" >\r\n                <option value=\"thin\">thin</option>\r\n                <option value=\"thick\">thick</option>\r\n              </select>\r\n            </clr-select-container>\r\n          </ng-container>\r\n\r\n        </form>\r\n    </clr-wizard-page>\r\n  </clr-wizard>\r\n  <!-- 编辑页面 -->\r\n  <clr-modal [(clrModalOpen)]=\"modifyShow\">\r\n    <h3 class=\"modal-title\">{{'menu.edit' | translate}}</h3>\r\n\r\n    <div class=\"modal-body\">\r\n      <form *ngIf=\"rowSelected.length === 1\" clrForm #formPageOne=\"ngForm\">\r\n        <!-- 名称 -->\r\n        <clr-input-container>\r\n          <label>{{'vmfs.name' | translate}}</label>\r\n          <input clrInput  [(ngModel)]=\"modifyForm.name\" name=\"name\" #name=\"ngModel\" /><br>\r\n          <clr-control-error>This field is required!</clr-control-error>\r\n        </clr-input-container>\r\n        <clr-checkbox-container>\r\n          <label></label>\r\n          <clr-checkbox-wrapper>\r\n            <input type=\"checkbox\" clrCheckbox name=\"isSameName\" [(ngModel)]=\"modifyForm.isSameName\" />\r\n            <label>{{'vmfs.modifyNameDesc' | translate}}</label>\r\n          </clr-checkbox-wrapper>\r\n        </clr-checkbox-container>\r\n\r\n        <!-- 控制策略 -->\r\n        <clr-radio-container clrInline>\r\n          <label>{{'vmfs.controlPolicy' | translate}}</label>\r\n          <clr-radio-wrapper>\r\n            <input type=\"radio\" clrRadio name=\"control_policy\" checked=\"checked\" value=\"1\" [(ngModel)]=\"modifyForm.control_policy\" />\r\n            <label>{{'vmfs.upperLimitControl' | translate}}</label>\r\n          </clr-radio-wrapper>\r\n          <clr-radio-wrapper>\r\n            <input type=\"radio\" clrRadio name=\"control_policy\" value=\"0\" [(ngModel)]=\"modifyForm.control_policy\" />\r\n            <label>{{'vmfs.lowerLimitControl' | translate}}</label>\r\n          </clr-radio-wrapper>\r\n        </clr-radio-container>\r\n        <!-- 交通管制对象 带宽 上限-->\r\n        <clr-checkbox-container *ngIf=\"modifyForm.control_policy === '1'\">\r\n          <label>{{'vmfs.trafficControlObject' | translate}}</label>\r\n          <clr-checkbox-wrapper>\r\n            <input type=\"checkbox\" clrCheckbox/>\r\n            <label>\r\n              {{'vmfs.bandwidthLimitUpper' | translate}}\r\n              <input type=\"number\" class=\"inputOneLine\" name=\"maxbandwidth\" [(ngModel)]=\"modifyForm.max_bandwidth\"/>{{'vmfs.unitM' | translate}}\r\n            </label>\r\n          </clr-checkbox-wrapper>\r\n        </clr-checkbox-container>\r\n        <!-- 交通管制对象 IOPS 上限-->\r\n        <clr-checkbox-container *ngIf=\"modifyForm.control_policy === '1'\">\r\n          <label></label>\r\n          <clr-checkbox-wrapper>\r\n            <input type=\"checkbox\" clrCheckbox/>\r\n            <label>\r\n              {{'vmfs.IOPSLimitUpper' | translate}}\r\n              <input type=\"number\" class=\"inputOneLine\" name=\"maxiops\" [(ngModel)]=\"modifyForm.max_iops\"/>\r\n            </label>\r\n          </clr-checkbox-wrapper>\r\n        </clr-checkbox-container>\r\n\r\n        <!-- 交通管制对象 带宽 下限-->\r\n        <clr-checkbox-container *ngIf=\"modifyForm.control_policy === '0'\">\r\n          <label>{{'vmfs.trafficControlObject' | translate}}</label>\r\n          <clr-checkbox-wrapper>\r\n            <input type=\"checkbox\" clrCheckbox/>\r\n            <label>\r\n              {{'vmfs.bandwidthLimitLower' | translate}}\r\n              <input type=\"number\" class=\"inputOneLine\" name=\"minbandwidth\" [(ngModel)]=\"modifyForm.min_bandwidth\"/>{{'vmfs.unitM' | translate}}\r\n            </label>\r\n          </clr-checkbox-wrapper>\r\n        </clr-checkbox-container>\r\n        <!-- 交通管制对象 IOPS 下限-->\r\n        <clr-checkbox-container *ngIf=\"modifyForm.control_policy === '0'\">\r\n          <label></label>\r\n          <clr-checkbox-wrapper>\r\n            <input type=\"checkbox\" clrCheckbox/>\r\n            <label>\r\n              {{'vmfs.IOPSLimitLower' | translate}}\r\n              <input type=\"number\" class=\"inputOneLine\" name=\"miniops\" [(ngModel)]=\"modifyForm.min_iops\"/>\r\n            </label>\r\n          </clr-checkbox-wrapper>\r\n        </clr-checkbox-container>\r\n      </form>\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n      <button type=\"button\" class=\"btn btn-outline\" (click)=\"modifyShow = false\">{{'menu.cancel' | translate}}</button>\r\n      <button type=\"button\" class=\"btn btn-primary\" (click)=\"modifyHandleFunc()\">{{'menu.ok' | translate}}</button>\r\n    </div>\r\n  </clr-modal>\r\n  <!--挂载弹窗-->\r\n  <clr-modal [(clrModalOpen)]=\"mountShow\">\r\n    <h3 class=\"modal-title\">{{'vmfs.mount.mount' | translate}}</h3>\r\n    <div class=\"modal-body\">\r\n      <form *ngIf=\"rowSelected.length === 1\" clrForm>\r\n\r\n        <clr-radio-container clrInline>\r\n          <label class=\"floatleft\">{{'vmfs.mount.mountObj' | translate}}</label>\r\n          <clr-radio-wrapper>\r\n            <input type=\"radio\" clrRadio name=\"controlPolicy\" value=\"1\" [(ngModel)]=\"mountForm.mountType\" ng-checked=\"true\"/>\r\n            <label>{{'vmfs.mount.host' | translate}}</label>\r\n          </clr-radio-wrapper>\r\n          <clr-radio-wrapper>\r\n            <input type=\"radio\" clrRadio name=\"controlPolicy\" value=\"2\"  [(ngModel)]=\"mountForm.mountType\" />\r\n            <label>{{'vmfs.mount.cluster' | translate}}</label>\r\n          </clr-radio-wrapper>\r\n        </clr-radio-container>\r\n\r\n\r\n\r\n        <clr-combobox-container *ngIf=\"mountForm.mountType==='1'\">\r\n          <label>{{'vmfs.mount.host' | translate}}</label>\r\n          <clr-combobox [(ngModel)]=\"chooseHost\" name=\"chooseHost\" required>\r\n            <clr-options>\r\n              <clr-option *clrOptionItems=\"let state of hostList; field:'hostName'\" [clrValue]=\"state\">\r\n                <clr-icon shape=\"sun\" role=\"img\" aria-label=\"Sun is shining\"></clr-icon>{{state.hostName}}\r\n              </clr-option>\r\n            </clr-options>\r\n          </clr-combobox>\r\n        </clr-combobox-container>\r\n\r\n        <clr-combobox-container *ngIf=\"mountForm.mountType==='2'\">\r\n          <label>{{'vmfs.mount.cluster' | translate}}</label>\r\n          <clr-combobox [(ngModel)]=\"chooseCluster\" name=\"chooseCluster\" required>\r\n            <clr-options>\r\n              <clr-option *clrOptionItems=\"let state of clusterList; field:'clusterName'\" [clrValue]=\"state\">\r\n                <clr-icon shape=\"sun\" role=\"img\" aria-label=\"Sun is shining\"></clr-icon>{{state.clusterName}}\r\n              </clr-option>\r\n            </clr-options>\r\n          </clr-combobox>\r\n        </clr-combobox-container>\r\n\r\n<!--        <clr-select-container>-->\r\n<!--          <label>{{'vmfs.mount.mountType' | translate}}</label>-->\r\n<!--          <select clrSelect [(ngModel)]=\"mountForm.mountType\" name=\"mountType\">-->\r\n<!--            <option value=\"readOnly\">{{'vmfs.mount.readOnly' | translate}}</option>-->\r\n<!--            <option value=\"readWrite\">{{'vmfs.mount.readWrite' | translate}}</option>-->\r\n<!--          </select>-->\r\n<!--        </clr-select-container>-->\r\n        <div class=\"modal-footer\">\r\n          <button type=\"button\" class=\"btn btn-outline\" (click)=\"mountShow = false\">{{'menu.cancel' | translate}}</button>\r\n          <button type=\"button\" class=\"btn btn-primary\" (click)=\"mountSubmit()\">{{'menu.ok' | translate}}</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </clr-modal>\r\n  <!--删除提示-->\r\n  <clr-modal [(clrModalOpen)]=\"delShow\" [clrModalSize]=\"'sm'\">\r\n    <h3 class=\"modal-title\">{{'vmfs.del.title' | translate}}</h3>\r\n    <div class=\"modal-body\">\r\n      <p>{{'vmfs.del.content' | translate}}</p>\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n      <button type=\"button\" class=\"btn btn-outline\" (click)=\"delShow=false\">{{'menu.cancel' | translate}}</button>\r\n      <button type=\"button\" class=\"btn btn-primary\" (click)=\"delHandleFunc()\">{{'menu.ok' | translate}}</button>\r\n    </div>\r\n  </clr-modal>\r\n  <!--卸载提示-->\r\n  <clr-modal [(clrModalOpen)]=\"unmountShow\" [clrModalSize]=\"'sm'\">\r\n    <h3 class=\"modal-title\">{{'vmfs.unmount.title' | translate}}</h3>\r\n    <div class=\"modal-body\">\r\n      <p>{{'vmfs.unmount.content' | translate}}</p>\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n      <button type=\"button\" class=\"btn btn-outline\" (click)=\"unmountShow=false\">{{'menu.cancel' | translate}}</button>\r\n      <button type=\"button\" class=\"btn btn-primary\" (click)=\"unmountHandleFunc();\">{{'menu.ok' | translate}}</button>\r\n    </div>\r\n  </clr-modal>\r\n  <!--空间回收提示-->\r\n  <clr-modal [(clrModalOpen)]=\"reclaimShow\" [clrModalSize]=\"'sm'\">\r\n    <h3 class=\"modal-title\">{{'vmfs.reclaim.title' | translate}}</h3>\r\n    <div class=\"modal-body\">\r\n      <p>{{'vmfs.reclaim.content' | translate}}</p>\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n      <button type=\"button\" class=\"btn btn-outline\" (click)=\"reclaimShow=false\">{{'menu.cancel' | translate}}</button>\r\n      <button type=\"button\" class=\"btn btn-primary\" (click)=\"reclaimHandleFunc()\">{{'menu.ok' | translate}}</button>\r\n    </div>\r\n  </clr-modal>\r\n  <!--变更服务等级-->\r\n  <clr-modal [(clrModalOpen)]=\"changeServiceLevelShow\">\r\n    <h3 class=\"modal-title\">{{'vmfs.changeServiceLevel' | translate}}</h3>\r\n    <div class=\"modal-body\">\r\n      <form *ngIf=\"rowSelected.length === 1\" clrForm #formPageOne=\"ngForm\">\r\n        <!-- 1、选择 服务等级-->\r\n        <ng-container>\r\n          <clr-accordion>\r\n            <clr-accordion-panel *ngFor=\"let item of serviceLevelList\">\r\n              <clr-accordion-title>{{item.name}}</clr-accordion-title>\r\n              <clr-accordion-content (click)=\"serviceLevelClickHandel(item.id, item.name);\" class=\"blueBg\" *clrIfExpanded>\r\n                <table class=\"table table-vertical table-noborder table-compact\">\r\n                  <tbody>\r\n                  <tr>\r\n                    <th hidden></th>\r\n                    <th>\r\n                      {{item.name}}\r\n                    </th>\r\n                  </tr>\r\n                  <tr>\r\n                    <th hidden></th>\r\n                    <td>{{'vmfs.capacityUsage' | translate}}</td>\r\n                    <td>{{'vmfs.qos' | translate}}</td>\r\n                    <td>{{'vmfs.protection' | translate}}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <th hidden></th>\r\n                    <th><clr-progress-bar clrValue=\"{{(item.used_capacity/item.total_capacity * 100).toFixed(2)}}\" clrSuccess clrLabeled></clr-progress-bar></th>\r\n                    <th *ngIf=\"item.simpleCapabilities.qosParam.qosPolicy.max_iops != null\">IOPS <= {{item.simpleCapabilities.qosParam.qosPolicy.max_iops}}</th>\r\n                    <th *ngIf=\"item.simpleCapabilities.qosParam.qosPolicy.min_iops != null\">IOPS >= {{item.simpleCapabilities.qosParam.qosPolicy.min_iops}}</th>\r\n                  </tr>\r\n                  <tr>\r\n                    <th hidden></th>\r\n                    <th>{{item.used_capacity}} GB/{{item.total_capacity}}GB</th>\r\n                    <th>Latency: {{item.simpleCapabilities.qosParam.qosPolicy.latency + item.simpleCapabilities.qosParam.qosPolicy.latencyUnit}}</th>\r\n                  </tr>\r\n                  </tbody>\r\n                </table>\r\n              </clr-accordion-content>\r\n            </clr-accordion-panel>\r\n          </clr-accordion>\r\n        </ng-container>\r\n      </form>\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n      <button type=\"button\" class=\"btn btn-outline\" (click)=\"changeServiceLevelShow = false\">{{'menu.cancel' | translate}}</button>\r\n      <button type=\"button\" class=\"btn btn-primary\" (click)=\"changeSLHandleFunc()\">{{'menu.ok' | translate}}</button>\r\n    </div>\r\n  </clr-modal>\r\n  <!--扩容-->\r\n  <clr-modal [(clrModalOpen)]=\"expandShow\">\r\n    <h3 class=\"modal-title\">{{'menu.expand' | translate}}</h3>\r\n    <div class=\"modal-body\">\r\n      <!--名称-->\r\n      <clr-input-container>\r\n        <label>{{'vmfs.expandSize' | translate}}</label>\r\n        <input clrInput type=\"number\" name=\"vo_add_capacity\" [(ngModel)]=\"expandForm.vo_add_capacity\"/>\r\n        <select clrInput  [(ngModel)]=\"expandForm.capacityUnit\" name=\"capacityUnit\" >\r\n          <option value=\"TB\">TB</option>\r\n          <option value=\"GB\">GB</option>\r\n          <option value=\"MB\">MB</option>\r\n          <option value=\"KB\">KB</option>\r\n        </select>\r\n      </clr-input-container>\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n      <button type=\"button\" class=\"btn btn-outline\" (click)=\"expandShow = false;\">{{'menu.cancel' | translate}}</button>\r\n      <button type=\"button\" class=\"btn btn-primary\" (click)=\"expandHandleFunc();\">{{'menu.ok' | translate}}</button>\r\n    </div>\r\n  </clr-modal>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport construct = Reflect.construct;\r\n\r\n@Injectable()\r\nexport class VmfsListService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  // 主列表数据\r\n  getData(params = {}) {\r\n    return this.http.get('http://localhost:8080/accessvmfs/listvmfs', params );\r\n  }\r\n  // 附列表数据\r\n  getChartData(volumeIds: string[] ) {\r\n    return this.http.get('http://localhost:8080/accessvmfs/listvmfsperformance', {params: {volumeIds}});\r\n  }\r\n  // 获取存储\r\n  getStorages() {\r\n    return this.http.get('http://localhost:8080/dmestorage/storages');\r\n  }\r\n  // 通过存储ID获取存储池数据\r\n  getStoragePoolsByStorId(storageId: string) {\r\n    return this.http.get('http://localhost:8080/dmestorage/storagepools', {params: {storageId}});\r\n  }\r\n\r\n  // 获取所有的主机\r\n  getHostList() {\r\n    return this.http.get('http://localhost:8080/accessvmware/listhost');\r\n  }\r\n\r\n  // 获取所有的集群\r\n  getClusterList() {\r\n    return this.http.get('http://localhost:8080/accessvmware/listcluster');\r\n  }\r\n\r\n  // 通过名称获取主机\r\n  getHostListByObjectId(objectId: string){\r\n    return this.http.get('http://localhost:8080/accessvmware/gethostsbydsobjectid?dataStoreObjectId=' + objectId);\r\n  }\r\n  // 通过名称获取集群\r\n  getClusterListByObjectId(objectId: string){\r\n    return this.http.get('http://localhost:8080/accessvmware/getclustersbydsobjectid?dataStoreObjectId=' + objectId);\r\n  }\r\n\r\n  // 获取所有的服务等级数据\r\n  getServiceLevelList(params = {}) {\r\n    return this.http.put('http://localhost:8080/operatevmfs/listvmfsservicelevel', params);\r\n  }\r\n\r\n  // 创建vmfs\r\n  createVmfs(params = {}) {\r\n     return  this.http.post('http://localhost:8080/accessvmfs/createvmfs', params);\r\n  }\r\n\r\n  // 修改VMFS\r\n  updateVmfs(volumeId: string, params = {}) {\r\n    return  this.http.put('http://localhost:8080/operatevmfs/updatevmfs?volume_id=' + volumeId, params);\r\n  }\r\n  // 删除\r\n  delVmfs(params = {}) {\r\n    return  this.http.post('http://localhost:8080/accessvmfs/deletevmfs', params);\r\n  }\r\n  // 卸载\r\n  unmountVMFS(params = {}) {\r\n    return  this.http.post('http://localhost:8080/accessvmfs/mountvmfs', params);\r\n  }\r\n  // 挂载\r\n  mountVmfs(params = {}) {\r\n    return  this.http.post('http://localhost:8080/accessvmfs/mountvmfs', params);\r\n  }\r\n  // 空间回收\r\n  reclaimVmfs(params = {}) { // vmfs空间回收\r\n    return  this.http.post('http://localhost:8080/operatevmfs/recyclevmfs', params);\r\n  }\r\n\r\n  // 修改服务等级\r\n  changeServiceLevel(params = {}) {\r\n    return  this.http.post('http://localhost:8080/operatevmfs/updatevmfsservicelevel', params);\r\n  }\r\n\r\n  // 扩容\r\n  expandVMFS(params = {}) {\r\n    return  this.http.post('http://localhost:8080/operatevmfs/expandvmfs', params);\r\n  }\r\n}\r\n// vmfs列表\r\nexport interface List {\r\n  objectid: string; // 跳转用唯一id\r\n  name: string;\r\n  status: string;\r\n  capacity: number;\r\n  freeSpace: number;\r\n  reserveCapacity: number;\r\n  deviceId: string;\r\n  device: string;\r\n  serviceLevelName: string;\r\n  vmfsProtected: boolean;\r\n  maxIops: number;\r\n  minIops: number;\r\n  iops: number;\r\n  maxBandwidth: number;\r\n  minBandwidth: number;\r\n  bandwidth: number;\r\n  readResponseTime: number;\r\n  writeResponseTime: number;\r\n  latency: number;\r\n  volumeId: number;\r\n\r\n}\r\n// 存储\r\nexport interface StorageList {\r\n  name: string;\r\n  id: string;\r\n}\r\n// 存储池\r\nexport interface StoragePoolList {\r\n  name: string;\r\n  id: string;\r\n}\r\n// 主机列表\r\nexport interface HostList {\r\n  hostId: string;\r\n  hostName: string;\r\n}\r\n// 集群列表\r\nexport interface ClusterList {\r\n  clusterId: string;\r\n  clusterName: string;\r\n}\r\n// 服务等级\r\nexport interface ServiceLevelList {\r\n  id: string;\r\n  name: string;\r\n  free_capacity: number;\r\n  used_capacity: number;\r\n  total_capacity: number;\r\n  description: string;\r\n  type: string;\r\n  protocol: string;\r\n  simpleCapabilities: {\r\n    resource_type: string;\r\n    compression: boolean;\r\n    deduplication: boolean;\r\n    smarttier: {\r\n      enabled: boolean;\r\n      policy: number;\r\n    };\r\n    qosParam: {\r\n      enabled: boolean;\r\n      qosPolicy: {\r\n        latency: string;\r\n        latencyUnit: string;\r\n        min_bandwidth: string;\r\n        min_iops: string;\r\n        max_bandwidth: string;\r\n        max_iops: string;\r\n        control_policy: string;\r\n      };\r\n    };\r\n  };\r\n}\r\nexport interface HostOrCluster {\r\n  deviceId: string;\r\n  deviceName: string;\r\n  deviceType: string;\r\n}\r\n\r\nexport class GetForm {\r\n  // 获取添加form表单（初始化的添加表单）\r\n  getAddForm() {\r\n    const addform = {\r\n      name: null, // vmfs stor的名称 必\r\n      volumeName: null, // 卷名称 必\r\n      isSameName: true, // 卷名称与数据存储名称相同 true相同 false 不同\r\n      capacity: 0, // 容量，单位GB 必\r\n      capacityUnit: 'GB', // 容量单位 （最后需转换为GB）\r\n      count: 0, // 数量 必\r\n      service_level_id: null, // 服务等级id 若未选择服务等级，可选择存储设备、存储池、设置QoS、Thin、Workload\r\n      service_level_name: null, // 服务等级名称  必\r\n      version: '5', // 版本\r\n      blockSize: '1024', // 块大小，单位KB\r\n      spaceReclamationGranularity: '1024', // 空间回收粒度 单位K\r\n      spaceReclamationPriority: 'low', // 空间回收优先权\r\n      host: null, // 主机  必\r\n      hostId: null, // 主机  必\r\n      cluster: null, // 集群\r\n      clusterId: null, // 集群\r\n      storage_id: null, // 存储设备id\r\n      pool_raw_id: null, // 卷所属存储池在存储设备上的id\r\n      workload_type_id: 0, // 应用类型id\r\n      alloctype: null, // 卷分配类型，取值范围 thin，thick\r\n      control_policy: '1', // 控制策略\r\n      latency: 0, // 时延，单位ms\r\n      maxbandwidth: 0, // 最大带宽\r\n      maxbandwidthChoose: false, // 最大带宽 选中\r\n      maxiops: 0, // 最大iops\r\n      maxiopsChoose: false, // 最大iops 选中\r\n      minbandwidth: 0, // 最小带宽\r\n      minbandwidthChoose: false, // 最小带宽 选中\r\n      miniops: 0, // 最小iops\r\n      miniopsChoose: false, // 最小iops 选中\r\n      qosname: null, // Smart QoS名称\r\n      deviceName: null,\r\n      hostDataloadSuccess: false, // 主机数据是否加载完毕\r\n      culDataloadSuccess: false // 集群数据是否加载完毕\r\n    };\r\n    return addform;\r\n  }\r\n  // 获取修改form表单（初始化的添加表单）\r\n  getEditForm() {\r\n    const editForm = {\r\n      name: '',\r\n      isSameName: true, // 卷名称与vmfs名称是否相同\r\n      volume_id: '', // 卷ID\r\n      control_policy: '1', // 控制策略,\r\n      max_iops: '',\r\n      max_bandwidth: '',\r\n      newVoName: null, // 新卷名称\r\n      oldDsName: '', // 旧VMFS名称\r\n      newDsName: '', // 新VMFS名称\r\n      min_iops: '',\r\n      min_bandwidth: '',\r\n      dataStoreObjectId: '' // objectID\r\n    };\r\n    return editForm;\r\n  }\r\n  // 扩容form（初始化的添加表单）\r\n  getExpandForm() {\r\n    const expandForm = {\r\n      vo_add_capacity: 0, // 扩容大小默认GB\r\n      capacityUnit: 'GB', // 容量单位 （最后需转换为GB）\r\n      volume_id: '', // 卷ID\r\n      ds_name: '' // vmfsName\r\n    };\r\n    return expandForm;\r\n  }\r\n  // 服务等级变更\r\n  getChangeLevelForm() {\r\n    const changeLevelForm = {\r\n      volume_ids: [], // 卷ID\r\n      ds_name: '', // vmfsName\r\n      service_level_id: '', // 服务等级id\r\n      service_level_name: '', // 服务等级名称\r\n    };\r\n    return changeLevelForm;\r\n  }\r\n  // 挂载form\r\n  getMountForm() {\r\n    const mountForm = {\r\n      hostId: null,\r\n      host: null,\r\n      clusterId: null,\r\n      cluster: null,\r\n      dataStoreObjectIds: [], // datastore object id列表 必,\r\n      mountType: '1' // 挂载的设备类型 1 服务器、0 集群 前端自用参数\r\n    };\r\n    return mountForm;\r\n  }\r\n}\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { VmfsListComponent } from './list/list.component';\r\nimport { AttributeComponent } from './volume-attribute/attribute.component';\r\nimport { PerformanceComponent } from './volume-performance/performance.component';\r\n\r\nconst routes: Routes = [\r\n  { path: 'list', component: VmfsListComponent, data: { title: 'Vmfs List' } },\r\n  { path: 'attribute', component: AttributeComponent, data: { title: 'Vmfs volumeAttribute' } },\r\n  { path: 'performance', component: PerformanceComponent, data: { title: 'Vmfs volume-performance' } },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class VmfsRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { SharedModule } from '@shared/shared.module';\r\nimport { VmfsRoutingModule } from './vmfs-routing.module';\r\n\r\nimport { VmfsListComponent } from './list/list.component';\r\nimport { AttributeComponent } from './volume-attribute/attribute.component';\r\nimport { PerformanceComponent } from './volume-performance/performance.component';\r\nimport { NgxEchartsModule } from 'ngx-echarts';\r\nimport {FormsModule} from \"@angular/forms\";\r\nimport {ClarityModule} from \"@clr/angular\";\r\nimport {CommonModule} from \"@angular/common\";\r\nimport {TranslateModule} from \"@ngx-translate/core\";\r\n\r\nconst COMPONENTS = [VmfsListComponent];\r\nconst COMPONENTS_DYNAMIC = [];\r\n\r\n@NgModule({\r\n  imports: [SharedModule, VmfsRoutingModule, NgxEchartsModule, FormsModule, ClarityModule, CommonModule, TranslateModule],\r\n  declarations: [...COMPONENTS, ...COMPONENTS_DYNAMIC, AttributeComponent, PerformanceComponent],\r\n  entryComponents: COMPONENTS_DYNAMIC,\r\n})\r\nexport class VmfsModule {}\r\n","import {ChangeDetectorRef, Component, OnInit} from '@angular/core';\r\nimport { AttributeService, VolumeInfo } from './attribute.service';\r\nimport {GlobalsService} from '@shared/globals.service';\r\n\r\n@Component({\r\n  selector: 'app-attribute',\r\n  templateUrl: './attribute.component.html',\r\n  styleUrls: ['./attribute.component.scss'],\r\n  providers: [AttributeService],\r\n})\r\nexport class AttributeComponent implements OnInit {\r\n  // 卷信息\r\n  volumeInfoList: VolumeInfo[];\r\n  // 选中的卷数据\r\n  selectVolume: VolumeInfo;\r\n  // 选中的卷名称\r\n  selectVolName: string;\r\n  // 卷名称集合\r\n  volNames: string[] = [];\r\n\r\n  constructor(private attribute: AttributeService, private cdr: ChangeDetectorRef, private gs: GlobalsService) { }\r\n\r\n  ngOnInit(): void {\r\n    const ctx = this.gs.getClientSdk().app.getContextObjects();\r\n    // const objectId=ctx[0].id;\r\n    const objectId = '123';\r\n    this.getVolumeInfoByVolID(objectId);\r\n  }\r\n\r\n  getVolumeInfoByVolID(objectId: string){\r\n    console.log('objectId: ' + objectId);\r\n    this.attribute.getData(objectId).subscribe((result: any) => {\r\n      console.log(result);\r\n      if (result.code === '0') {\r\n        this.volumeInfoList = result.data;\r\n        this.volumeInfoList.forEach(item => {\r\n          this.volNames.push(item.name);\r\n        });\r\n        // 设置默认选中数据\r\n        this.selectVolName = this.volNames[0];\r\n        this.selectVolume = this.getVolByName(this.selectVolName);\r\n        this.cdr.detectChanges(); // 此方法变化检测，异步处理数据都要添加此方法\r\n      } else {\r\n        console.log(result.description);\r\n      }\r\n    });\r\n  }\r\n\r\n  // 通过名称获取卷信息\r\n  getVolByName(name): any {\r\n    const volumeInfo = this.volumeInfoList.filter(item  => item.name === name)[0];\r\n    return volumeInfo;\r\n  }\r\n\r\n  // 切换卷函数\r\n  changeVolFunc() {\r\n    console.log(this.selectVolName);\r\n    this.selectVolume = this.getVolByName(this.selectVolName);\r\n  }\r\n}\r\n","<div>\r\n  <clr-select-container>\r\n    <select clrSelect (ngModelOptions)=\"volNames\" [(ngModel)]=\"selectVolName\" name=\"defaultSelect\" class=\"clr-select\" (change)=\"changeVolFunc()\">\r\n      <option *ngFor=\"let item of volNames\" value=\"{{item}}\">{{item}}</option>\r\n    </select>\r\n  </clr-select-container>\r\n  <table class=\"table table-vertical table-noborder table-compact\">\r\n    <tbody>\r\n    <!-- Basic Information -->\r\n    <tr>\r\n      <th>{{'vmfs.basicInformation' | translate}}</th>\r\n    </tr>\r\n    <tr>\r\n      <th hidden></th>\r\n      <td>{{'vmfs.name' | translate}}</td>\r\n      <td>{{selectVolume.name}}</td>\r\n      <td>{{'vmfs.wwn' | translate}}</td>\r\n      <td>{{selectVolume.wwn}}</td>\r\n    </tr>\r\n    <tr>\r\n      <th hidden></th>\r\n      <td>{{'vmfs.storage' | translate}}</td>\r\n      <td>{{selectVolume.storage}}</td>\r\n      <td>{{'vmfs.storagePool' | translate}}</td>\r\n      <td>{{selectVolume.storagePool}}</td>\r\n    </tr>\r\n    <tr>\r\n      <th hidden></th>\r\n      <td>{{'vmfs.serviceLevelName' | translate}}</td>\r\n      <td>{{selectVolume.serviceLevel}}</td>\r\n    </tr>\r\n    <!-- Qos Policy -->\r\n    <tr>\r\n      <th>{{'vmfs.qosPolicy' | translate}}</th>\r\n    </tr>\r\n    <tr>\r\n      <th hidden></th>\r\n      <td>{{'vmfs.controlPolicy' | translate}}</td>\r\n      <td>{{selectVolume.controlPolicy}}</td>\r\n      <td>{{'vmfs.trafficControlObject' | translate}}</td>\r\n      <td>{{selectVolume.trafficControl}}</td>\r\n    </tr>\r\n    <!-- Qos SmartTier -->\r\n    <tr>\r\n      <th>{{'vmfs.smartTier' | translate}}</th>\r\n    </tr>\r\n    <tr>\r\n      <th hidden></th>\r\n      <td>{{'vmfs.smartTierPolicy' | translate}}</td>\r\n      <td>{{selectVolume.smartTier}}</td>\r\n    </tr>\r\n    <!-- Resource Tuning -->\r\n    <tr>\r\n      <th>{{'vmfs.applicationType' | translate}}</th>\r\n    </tr>\r\n    <tr>\r\n      <th hidden></th>\r\n      <td>{{'vmfs.applicationType' | translate}}</td>\r\n      <td>{{selectVolume.provisionType}}</td>\r\n      <td>{{'vmfs.provisioningType' | translate}}</td>\r\n      <td>{{selectVolume.provisionType}}</td>\r\n    </tr>\r\n    <tr>\r\n      <th hidden></th>\r\n      <td>{{'vmfs.deduplication' | translate}}</td>\r\n      <td>{{selectVolume.dudeplication}}</td>\r\n      <td>{{'vmfs.compression' | translate}}</td>\r\n      <td>{{selectVolume.compression}}</td>\r\n    </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class AttributeService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getData(volumnId: string) {\r\n    return this.http.get('http://localhost:8080/accessvmfs/volume/' + volumnId );\r\n  }\r\n}\r\nexport interface VolumeInfo{\r\n  name: string;\r\n  wwn: string;\r\n  storage: string;\r\n  storagePool: string;\r\n  serviceLevel: string;\r\n  controlPolicy: string;\r\n  trafficControl: string;\r\n  smartTier: string;\r\n  applicationType: string;\r\n  provisionType: string;\r\n  dudeplication: boolean;\r\n  compression: boolean;\r\n}\r\n","import {AfterViewInit, Component, NgZone, OnInit, ChangeDetectorRef} from '@angular/core';\r\nimport { EChartOption } from 'echarts';\r\nimport { VmfsPerformanceService } from './performance.service';\r\nimport {VmfsListService} from '../list/list.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-performance',\r\n  templateUrl: './performance.component.html',\r\n  styleUrls: ['./performance.component.scss'],\r\n  providers: [VmfsPerformanceService],\r\n})\r\nexport class PerformanceComponent implements OnInit, AfterViewInit {\r\n\r\n  // 创建表格对象\r\n  // IOPS+QoS上下限\r\n  iopsChart: EChartOption = {};\r\n  // 带宽+QoS上下限\r\n  bandwidthChart: EChartOption = {};\r\n  // 响应时间+QoS下限\r\n  latencyChart: EChartOption = {};\r\n\r\n  // obj_type_id  (卷类型ID)\r\n  objTypeId;\r\n  // indicator_ids 获取参数指标（上下限等） 0 上限 1下限\r\n  indicatorIdsIOPS: Array<string> = ['1407379178651656', '1407379178586113'];\r\n  indicatorIdsBDWT: Array<string> = ['1407379178651656', '1407379178586113'];\r\n  indicatorIdsREST: Array<string> = ['1407379178651656', '1407379178586113'];\r\n  // obj_ids 卷ID\r\n  objIds: Array<string> = ['47FEBD5002AB344D90EC6CFCD6127BA3'];\r\n  // interval 时间间隔单位 ONE_MINUTE MINUTE HALF_HOUR HOUR DAY WEEK MONTH\r\n  interval;\r\n  // range 时间段 LAST_5_MINUTE LAST_1_HOUR LAST_1_DAY LAST_1_WEEK LAST_1_MONTH LAST_1_QUARTER HALF_1_YEAR LAST_1_YEAR BEGIN_END_TIME INVALID\r\n  range;\r\n  // begin_time 开始时间 时间戳(例：1552477343834)\r\n  beginTime = 1552477343834;\r\n  // end_time 结束时间 时间戳\r\n  endTime = 1552567343000;\r\n  // 定时函数执行时间 默认一天\r\n  timeInterval = 1 * 60 * 60 * 1000;\r\n  // 卷ID\r\n  constructor( private perService: VmfsPerformanceService, private ngZone: NgZone, private cdr: ChangeDetectorRef) {\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.ngZone.runOutsideAngular(() => this.initChart());\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  // 初始化表格对象\r\n  async initChart() {\r\n    switch (this.range) {\r\n      case 'LAST_1_HOUR': // 过去一小时\r\n        break;\r\n      case 'LAST_4_HOUR': // 过去四小时 此值目前接口没有\r\n        break;\r\n      case 'LAST_12_HOUR': // 过去12小时 此值目前接口没有\r\n        break;\r\n      default: // 默认过去24h\r\n        break;\r\n    }\r\n    // IOPS\r\n    this.perService.getIopsChart('IOPS', 'IO/s', this.objTypeId, this.indicatorIdsIOPS, this.objIds,\r\n      this.interval, this.range, this.beginTime, this.endTime).then(res => {\r\n      this.iopsChart = res;\r\n      this.cdr.detectChanges();\r\n    });\r\n\r\n    // 带宽\r\n    this.perService.getIopsChart('Bandwidth', 'MS/s', this.objTypeId, this.indicatorIdsBDWT, this.objIds,\r\n      this.interval, this.range, this.beginTime, this.endTime).then(res => {\r\n      this.bandwidthChart = res;\r\n      this.cdr.detectChanges();\r\n    });\r\n    // 响应时间\r\n    this.perService.getIopsChart('Latency', 'ms', this.objTypeId, this.indicatorIdsREST, this.objIds,\r\n      this.interval, this.range, this.beginTime, this.endTime).then(res => {\r\n      this.latencyChart = res;\r\n      this.cdr.detectChanges();\r\n    });\r\n  }\r\n}\r\n","<div echarts [options]=\"iopsChart\" id=\"iopsChart\" style=\"height: 600px;\"></div>\r\n<div echarts [options]=\"bandwidthChart\" id=\"bandwidthChart\" style=\"height: 600px;\"></div>\r\n<div echarts [options]=\"latencyChart\" id=\"latencyChart\" style=\"height: 600px;\"></div>\r\n"]}