{"version":3,"sources":["./node_modules/echarts-liquidfill/index.js","./node_modules/echarts-liquidfill/src/liquidFill.js","./node_modules/echarts-liquidfill/src/liquidFillLayout.js","./node_modules/echarts-liquidfill/src/liquidFillSeries.js","./node_modules/echarts-liquidfill/src/liquidFillView.js","./src/app/routes/servicelevel/servicelevel-routing.module.ts","./src/app/routes/servicelevel/servicelevel.component.ts","./src/app/routes/servicelevel/servicelevel.component.html","./src/app/routes/servicelevel/servicelevel.module.ts"],"names":[],"mappings":";;;;;;;;;AAAA,iBAAiB,mBAAO,CAAC,6EAAkB;;;;;;;;;;;;ACA3C,cAAc,mBAAO,CAAC,kEAAqB;;AAE3C,mBAAO,CAAC,qFAAoB;AAC5B,mBAAO,CAAC,iFAAkB;;;AAG1B;AACA;AACA,QAAQ,mBAAO,CAAC,oFAA8B;AAC9C;AACA;;;;;;;;;;;;ACVA,cAAc,mBAAO,CAAC,kEAAqB;;AAE3C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,YAAY;AACnC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;;;AAID;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AClKA,yBAAyB,mBAAO,CAAC,gHAA4C;AAC7E,cAAc,mBAAO,CAAC,kEAAqB;;AAE3C;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;AC9ED,cAAc,mBAAO,CAAC,kEAAqB;AAC3C;AACA,iBAAiB,mBAAO,CAAC,0EAAyB;AAClD;;AAEA,mBAAmB,mBAAO,CAAC,qFAAoB;;AAE/C;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;;AAEjB;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,+BAA+B,uBAAuB;AACtD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,+BAA+B,uBAAuB;AACtD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;;AAEjB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,2EAA2E;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA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","file":"servicelevel-servicelevel-module-es2015.js","sourcesContent":["module.exports = require('./src/liquidFill');\n","var echarts = require('echarts/lib/echarts');\n\nrequire('./liquidFillSeries');\nrequire('./liquidFillView');\n\n\necharts.registerVisual(\n    echarts.util.curry(\n        require('echarts/lib/visual/dataColor'), 'liquidFill'\n    )\n);\n","var echarts = require('echarts/lib/echarts');\n\nmodule.exports = echarts.graphic.extendShape({\n    type: 'ec-liquid-fill',\n\n    shape: {\n        waveLength: 0,\n        radius: 0,\n        radiusY: 0,\n        cx: 0,\n        cy: 0,\n        waterLevel: 0,\n        amplitude: 0,\n        phase: 0,\n        inverse: false\n    },\n\n    buildPath: function (ctx, shape) {\n        if (shape.radiusY == null) {\n            shape.radiusY = shape.radius;\n        }\n\n        /**\n         * We define a sine wave having 4 waves, and make sure at least 8 curves\n         * is drawn. Otherwise, it may cause blank area for some waves when\n         * wave length is large enough.\n         */\n        var curves = Math.max(\n            Math.ceil(2 * shape.radius / shape.waveLength * 4) * 2,\n            8\n        );\n\n        // map phase to [-Math.PI * 2, 0]\n        while (shape.phase < -Math.PI * 2) {\n            shape.phase += Math.PI * 2;\n        }\n        while (shape.phase > 0) {\n            shape.phase -= Math.PI * 2;\n        }\n        var phase = shape.phase / Math.PI / 2 * shape.waveLength;\n\n        var left = shape.cx - shape.radius + phase - shape.radius * 2;\n\n        /**\n         * top-left corner as start point\n         *\n         * draws this point\n         *  |\n         * \\|/\n         *  ~~~~~~~~\n         *  |      |\n         *  +------+\n         */\n        ctx.moveTo(left, shape.waterLevel);\n\n        /**\n         * top wave\n         *\n         * ~~~~~~~~ <- draws this sine wave\n         * |      |\n         * +------+\n         */\n        var waveRight = 0;\n        for (var c = 0; c < curves; ++c) {\n            var stage = c % 4;\n            var pos = getWaterPositions(c * shape.waveLength / 4, stage,\n                shape.waveLength, shape.amplitude);\n            ctx.bezierCurveTo(pos[0][0] + left, -pos[0][1] + shape.waterLevel,\n                pos[1][0] + left, -pos[1][1] + shape.waterLevel,\n                pos[2][0] + left, -pos[2][1] + shape.waterLevel);\n\n            if (c === curves - 1) {\n                waveRight = pos[2][0];\n            }\n        }\n\n        if (shape.inverse) {\n            /**\n             * top-right corner\n             *                  2. draws this line\n             *                          |\n             *                       +------+\n             * 3. draws this line -> |      | <- 1. draws this line\n             *                       ~~~~~~~~\n             */\n            ctx.lineTo(waveRight + left, shape.cy - shape.radiusY);\n            ctx.lineTo(left, shape.cy - shape.radiusY);\n            ctx.lineTo(left, shape.waterLevel);\n        }\n        else {\n            /**\n             * top-right corner\n             *\n             *                       ~~~~~~~~\n             * 3. draws this line -> |      | <- 1. draws this line\n             *                       +------+\n             *                          ^\n             *                          |\n             *                  2. draws this line\n             */\n            ctx.lineTo(waveRight + left, shape.cy + shape.radiusY);\n            ctx.lineTo(left, shape.cy + shape.radiusY);\n            ctx.lineTo(left, shape.waterLevel);\n        }\n\n        ctx.closePath();\n    }\n});\n\n\n\n/**\n * Using Bezier curves to fit sine wave.\n * There is 4 control points for each curve of wave,\n * which is at 1/4 wave length of the sine wave.\n *\n * The control points for a wave from (a) to (d) are a-b-c-d:\n *          c *----* d\n *     b *\n *       |\n * ... a * ..................\n *\n * whose positions are a: (0, 0), b: (0.5, 0.5), c: (1, 1), d: (PI / 2, 1)\n *\n * @param {number} x          x position of the left-most point (a)\n * @param {number} stage      0-3, stating which part of the wave it is\n * @param {number} waveLength wave length of the sine wave\n * @param {number} amplitude  wave amplitude\n */\nfunction getWaterPositions(x, stage, waveLength, amplitude) {\n    if (stage === 0) {\n        return [\n            [x + 1 / 2 * waveLength / Math.PI / 2, amplitude / 2],\n            [x + 1 / 2 * waveLength / Math.PI,     amplitude],\n            [x + waveLength / 4,                   amplitude]\n        ];\n    }\n    else if (stage === 1) {\n        return [\n            [x + 1 / 2 * waveLength / Math.PI / 2 * (Math.PI - 2),\n            amplitude],\n            [x + 1 / 2 * waveLength / Math.PI / 2 * (Math.PI - 1),\n            amplitude / 2],\n            [x + waveLength / 4,                   0]\n        ]\n    }\n    else if (stage === 2) {\n        return [\n            [x + 1 / 2 * waveLength / Math.PI / 2, -amplitude / 2],\n            [x + 1 / 2 * waveLength / Math.PI,     -amplitude],\n            [x + waveLength / 4,                   -amplitude]\n        ]\n    }\n    else {\n        return [\n            [x + 1 / 2 * waveLength / Math.PI / 2 * (Math.PI - 2),\n            -amplitude],\n            [x + 1 / 2 * waveLength / Math.PI / 2 * (Math.PI - 1),\n            -amplitude / 2],\n            [x + waveLength / 4,                   0]\n        ]\n    }\n}\n","var completeDimensions = require('echarts/lib/data/helper/completeDimensions');\nvar echarts = require('echarts/lib/echarts');\n\necharts.extendSeriesModel({\n\n    type: 'series.liquidFill',\n\n    visualColorAccessPath: 'textStyle.normal.color',\n\n    optionUpdated: function () {\n        var option = this.option;\n        option.gridSize = Math.max(Math.floor(option.gridSize), 4);\n    },\n\n    getInitialData: function (option, ecModel) {\n        var dimensions = completeDimensions(['value'], option.data);\n        var list = new echarts.List(dimensions, this);\n        list.initData(option.data);\n        return list;\n    },\n\n    defaultOption: {\n        color: ['#294D99', '#156ACF', '#1598ED', '#45BDFF'],\n        center: ['50%', '50%'],\n        radius: '50%',\n        amplitude: '8%',\n        waveLength: '80%',\n        phase: 'auto',\n        period: 'auto',\n        direction: 'right',\n        shape: 'circle',\n\n        waveAnimation: true,\n        animationEasing: 'linear',\n        animationEasingUpdate: 'linear',\n        animationDuration: 2000,\n        animationDurationUpdate: 1000,\n\n        outline: {\n            show: true,\n            borderDistance: 8,\n            itemStyle: {\n                color: 'none',\n                borderColor: '#294D99',\n                borderWidth: 8,\n                shadowBlur: 20,\n                shadowColor: 'rgba(0, 0, 0, 0.25)'\n            }\n        },\n\n        backgroundStyle: {\n            color: '#E3F7FF'\n        },\n\n        itemStyle: {\n            opacity: 0.95,\n            shadowBlur: 50,\n            shadowColor: 'rgba(0, 0, 0, 0.4)'\n        },\n\n        label: {\n            show: true,\n            color: '#294D99',\n            insideColor: '#fff',\n            fontSize: 50,\n            fontWeight: 'bold',\n\n            align: 'center',\n            baseline: 'middle',\n            position: 'inside'\n        },\n\n        emphasis: {\n            itemStyle: {\n                opacity: 0.8\n            }\n        }\n    }\n});\n","var echarts = require('echarts/lib/echarts');\nvar numberUtil = echarts.number;\nvar symbolUtil = require('echarts/lib/util/symbol');\nvar parsePercent = numberUtil.parsePercent;\n\nvar LiquidLayout = require('./liquidFillLayout');\n\nfunction getShallow(model, path) {\n    return model && model.getShallow(path);\n}\n\necharts.extendChartView({\n\n    type: 'liquidFill',\n\n    render: function (seriesModel, ecModel, api) {\n        var group = this.group;\n        group.removeAll();\n\n        var data = seriesModel.getData();\n\n        var itemModel = data.getItemModel(0);\n\n        var center = itemModel.get('center');\n        var radius = itemModel.get('radius');\n\n        var width = api.getWidth();\n        var height = api.getHeight();\n        var size = Math.min(width, height);\n        // itemStyle\n        var outlineDistance = 0;\n        var outlineBorderWidth = 0;\n        var showOutline = seriesModel.get('outline.show');\n\n        if (showOutline) {\n            outlineDistance = seriesModel.get('outline.borderDistance');\n            outlineBorderWidth = parsePercent(\n                seriesModel.get('outline.itemStyle.borderWidth'), size\n            );\n        }\n\n        var cx = parsePercent(center[0], width);\n        var cy = parsePercent(center[1], height);\n\n        var outterRadius;\n        var innerRadius;\n        var paddingRadius;\n\n        var isFillContainer = false;\n\n        var symbol = seriesModel.get('shape');\n        if (symbol === 'container') {\n            // a shape that fully fills the container\n            isFillContainer = true;\n\n            outterRadius = [\n                width / 2,\n                height / 2\n            ];\n            innerRadius = [\n                outterRadius[0] - outlineBorderWidth / 2,\n                outterRadius[1] - outlineBorderWidth / 2\n            ];\n            paddingRadius = [\n                parsePercent(outlineDistance, width),\n                parsePercent(outlineDistance, height)\n            ];\n\n            radius = [\n                Math.max(innerRadius[0] - paddingRadius[0], 0),\n                Math.max(innerRadius[1] - paddingRadius[1], 0)\n            ];\n        }\n        else {\n            outterRadius = parsePercent(radius, size) / 2;\n            innerRadius = outterRadius - outlineBorderWidth / 2;\n            paddingRadius = parsePercent(outlineDistance, size);\n\n            radius = Math.max(innerRadius - paddingRadius, 0);\n        }\n\n        if (showOutline) {\n            var outline = getOutline();\n            outline.style.lineWidth = outlineBorderWidth;\n            group.add(getOutline());\n        }\n\n        var left = isFillContainer ? 0 : cx - radius;\n        var top = isFillContainer ? 0 : cy - radius;\n\n        var wavePath = null;\n\n        group.add(getBackground());\n\n        // each data item for a wave\n        var oldData = this._data;\n        var waves = [];\n        data.diff(oldData)\n            .add(function (idx) {\n                var wave = getWave(idx, false);\n\n                var waterLevel = wave.shape.waterLevel;\n                wave.shape.waterLevel = isFillContainer ? height / 2 : radius;\n                echarts.graphic.initProps(wave, {\n                    shape: {\n                        waterLevel: waterLevel\n                    }\n                }, seriesModel);\n\n                wave.z2 = 2;\n                setWaveAnimation(idx, wave, null);\n\n                group.add(wave);\n                data.setItemGraphicEl(idx, wave);\n                waves.push(wave);\n            })\n            .update(function (newIdx, oldIdx) {\n                var waveElement = oldData.getItemGraphicEl(oldIdx);\n\n                // new wave is used to calculate position, but not added\n                var newWave = getWave(newIdx, false, waveElement);\n\n                // changes with animation\n                var shape = {};\n                var shapeAttrs = ['amplitude', 'cx', 'cy', 'phase', 'radius', 'radiusY', 'waterLevel', 'waveLength'];\n                for (var i = 0; i < shapeAttrs.length; ++i) {\n                    var attr = shapeAttrs[i];\n                    if (newWave.shape.hasOwnProperty(attr)) {\n                        shape[attr] = newWave.shape[attr];\n                    }\n                }\n\n                var style = {};\n                var styleAttrs = ['fill', 'opacity', 'shadowBlur', 'shadowColor'];\n                for (var i = 0; i < styleAttrs.length; ++i) {\n                    var attr = styleAttrs[i];\n                    if (newWave.style.hasOwnProperty(attr)) {\n                        style[attr] = newWave.style[attr];\n                    }\n                }\n\n                if (isFillContainer) {\n                    shape.radiusY = height / 2;\n                }\n\n                // changes with animation\n                echarts.graphic.updateProps(waveElement, {\n                    shape: shape\n                }, seriesModel);\n\n                waveElement.useStyle(style);\n\n                // instant changes\n                waveElement.position = newWave.position;\n                waveElement.setClipPath(newWave.clipPath);\n                waveElement.shape.inverse = newWave.inverse;\n\n                setWaveAnimation(newIdx, waveElement, waveElement);\n                group.add(waveElement);\n                data.setItemGraphicEl(newIdx, waveElement);\n                waves.push(waveElement);\n            })\n            .remove(function (idx) {\n                var wave = oldData.getItemGraphicEl(idx);\n                group.remove(wave);\n            })\n            .execute();\n\n        if (itemModel.get('label.show')) {\n            group.add(getText(waves));\n        }\n\n        this._data = data;\n\n        /**\n         * Get path for outline, background and clipping\n         *\n         * @param {number} r outter radius of shape\n         * @param {boolean|undefined} isForClipping if the shape is used\n         *                                          for clipping\n         */\n        function getPath(r, isForClipping) {\n            if (symbol) {\n                // customed symbol path\n                if (symbol.indexOf('path://') === 0) {\n                    var path = echarts.graphic.makePath(symbol.slice(7), {});\n                    var bouding = path.getBoundingRect();\n                    var w = bouding.width;\n                    var h = bouding.height;\n                    if (w > h) {\n                        h = r * 2 / w * h;\n                        w = r * 2;\n                    }\n                    else {\n                        w = r * 2 / h * w;\n                        h = r * 2;\n                    }\n\n                    var left = isForClipping ? 0 : cx - w / 2;\n                    var top = isForClipping ? 0 : cy - h / 2;\n                    path = echarts.graphic.makePath(\n                        symbol.slice(7),\n                        {},\n                        new echarts.graphic.BoundingRect(left, top, w, h)\n                    );\n                    if (isForClipping) {\n                        path.position = [-w / 2, -h / 2];\n                    }\n                    return path;\n                }\n                else if (isFillContainer) {\n                    // fully fill the container\n                    var x = isForClipping ? -r[0] : cx - r[0];\n                    var y = isForClipping ? -r[1] : cy - r[1];\n                    return symbolUtil.createSymbol(\n                        'rect', x, y, r[0] * 2, r[1] * 2\n                    );\n                }\n                else {\n                    var x = isForClipping ? -r : cx - r;\n                    var y = isForClipping ? -r : cy - r;\n                    if (symbol === 'pin') {\n                        y += r;\n                    }\n                    else if (symbol === 'arrow') {\n                        y -= r;\n                    }\n                    return symbolUtil.createSymbol(symbol, x, y, r * 2, r * 2);\n                }\n            }\n\n            return new echarts.graphic.Circle({\n                shape: {\n                    cx: isForClipping ? 0 : cx,\n                    cy: isForClipping ? 0 : cy,\n                    r: r\n                }\n            });\n        }\n        /**\n         * Create outline\n         */\n        function getOutline() {\n            var outlinePath = getPath(outterRadius);\n            outlinePath.style.fill = null;\n\n            outlinePath.setStyle(seriesModel.getModel('outline.itemStyle')\n                .getItemStyle());\n\n            return outlinePath;\n        }\n\n        /**\n         * Create background\n         */\n        function getBackground() {\n            // Seperate stroke and fill, so we can use stroke to cover the alias of clipping.\n            var strokePath = getPath(radius);\n            strokePath.setStyle(seriesModel.getModel('backgroundStyle')\n                .getItemStyle());\n            strokePath.style.fill = null;\n\n            // Stroke is front of wave\n            strokePath.z2 = 5;\n\n            var fillPath = getPath(radius);\n            fillPath.setStyle(seriesModel.getModel('backgroundStyle')\n                .getItemStyle());\n            fillPath.style.stroke = null;\n\n            var group = new echarts.graphic.Group();\n            group.add(strokePath);\n            group.add(fillPath);\n\n            return group;\n        }\n\n        /**\n         * wave shape\n         */\n        function getWave(idx, isInverse, oldWave) {\n            var radiusX = isFillContainer ? radius[0] : radius;\n            var radiusY = isFillContainer ? height / 2 : radius;\n\n            var itemModel = data.getItemModel(idx);\n            var itemStyleModel = itemModel.getModel('itemStyle');\n            var phase = itemModel.get('phase');\n            var amplitude = parsePercent(itemModel.get('amplitude'),\n                radiusY * 2);\n            var waveLength = parsePercent(itemModel.get('waveLength'),\n                radiusX * 2);\n\n            var value = data.get('value', idx);\n            var waterLevel = radiusY - value * radiusY * 2;\n            phase = oldWave ? oldWave.shape.phase\n                : (phase === 'auto' ? idx * Math.PI / 4 : phase);\n            var normalStyle = itemStyleModel.getItemStyle();\n            if (!normalStyle.fill) {\n                var seriesColor = seriesModel.get('color');\n                var id = idx % seriesColor.length;\n                normalStyle.fill = seriesColor[id];\n            }\n\n            var x = radiusX * 2;\n            var wave = new LiquidLayout({\n                shape: {\n                    waveLength: waveLength,\n                    radius: radiusX,\n                    radiusY: radiusY,\n                    cx: x,\n                    cy: 0,\n                    waterLevel: waterLevel,\n                    amplitude: amplitude,\n                    phase: phase,\n                    inverse: isInverse\n                },\n                style: normalStyle,\n                position: [cx, cy]\n            });\n            wave.shape._waterLevel = waterLevel;\n\n            var hoverStyle = itemModel.getModel('emphasis.itemStyle')\n                .getItemStyle();\n            hoverStyle.lineWidth = 0;\n            echarts.graphic.setHoverStyle(wave, hoverStyle);\n\n            // clip out the part outside the circle\n            var clip = getPath(radius, true);\n            // set fill for clipPath, otherwise it will not trigger hover event\n            clip.setStyle({\n                fill: 'white'\n            });\n            wave.setClipPath(clip);\n\n            return wave;\n        }\n\n        function setWaveAnimation(idx, wave, oldWave) {\n            var itemModel = data.getItemModel(idx);\n\n            var maxSpeed = itemModel.get('period');\n            var direction = itemModel.get('direction');\n\n            var value = data.get('value', idx);\n\n            var phase = itemModel.get('phase');\n            phase = oldWave ? oldWave.shape.phase\n                : (phase === 'auto' ? idx * Math.PI / 4 : phase);\n\n            var defaultSpeed = function (maxSpeed) {\n                var cnt = data.count();\n                return cnt === 0 ? maxSpeed : maxSpeed *\n                    (0.2 + (cnt - idx) / cnt * 0.8);\n            };\n            var speed = 0;\n            if (maxSpeed === 'auto') {\n                speed = defaultSpeed(5000);\n            }\n            else {\n                speed = typeof maxSpeed === 'function'\n                    ? maxSpeed(value, idx) : maxSpeed;\n            }\n\n            // phase for moving left/right\n            var phaseOffset = 0;\n            if (direction === 'right' || direction == null) {\n                phaseOffset = Math.PI;\n            }\n            else if (direction === 'left') {\n                phaseOffset = -Math.PI;\n            }\n            else if (direction === 'none') {\n                phaseOffset = 0;\n            }\n            else {\n                console.error('Illegal direction value for liquid fill.');\n            }\n\n            // wave animation of moving left/right\n            if (direction !== 'none' && itemModel.get('waveAnimation')) {\n                wave\n                    .animate('shape', true)\n                    .when(0, {\n                        phase: phase\n                    })\n                    .when(speed / 2, {\n                        phase: phaseOffset + phase\n                    })\n                    .when(speed, {\n                        phase: phaseOffset * 2 + phase\n                    })\n                    .during(function () {\n                        if (wavePath) {\n                            wavePath.dirty(true);\n                        }\n                    })\n                    .start();\n            }\n        }\n\n        /**\n         * text on wave\n         */\n        function getText(waves) {\n            var labelModel = itemModel.getModel('label');\n\n            function formatLabel() {\n                var formatted = seriesModel.getFormattedLabel(0, 'normal');\n                var defaultVal = (data.get('value', 0) * 100);\n                var defaultLabel = data.getName(0) || seriesModel.name;\n                if (!isNaN(defaultVal)) {\n                    defaultLabel = defaultVal.toFixed(0) + '%';\n                }\n                return formatted == null ? defaultLabel : formatted;\n            }\n\n            var textOption = {\n                z2: 10,\n                shape: {\n                    x: left,\n                    y: top,\n                    width: (isFillContainer ? radius[0] : radius) * 2,\n                    height: (isFillContainer ? radius[1] : radius) * 2\n                },\n                style: {\n                    fill: 'transparent',\n                    text: formatLabel(),\n                    textAlign: labelModel.get('align'),\n                    textVerticalAlign: labelModel.get('baseline')\n                },\n                silent: true\n            };\n\n            var outsideTextRect = new echarts.graphic.Rect(textOption);\n            var color = labelModel.get('color');\n            echarts.graphic.setText(outsideTextRect.style, labelModel, color);\n\n            var insideTextRect = new echarts.graphic.Rect(textOption);\n            var insColor = labelModel.get('insideColor');\n            echarts.graphic.setText(insideTextRect.style, labelModel, insColor);\n            insideTextRect.style.textFill = insColor;\n\n            var group = new echarts.graphic.Group();\n            group.add(outsideTextRect);\n            group.add(insideTextRect);\n\n            // clip out waves for insideText\n            var boundingCircle = getPath(radius, true);\n\n            wavePath = new echarts.graphic.CompoundPath({\n                shape: {\n                    paths: waves\n                },\n                position: [cx, cy]\n            });\n\n            wavePath.setClipPath(boundingCircle);\n            insideTextRect.setClipPath(wavePath);\n\n            return group;\n        }\n    },\n\n    dispose: function () {\n        // dispose nothing here\n    }\n});\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { ServicelevelComponent } from './servicelevel.component';\r\n\r\nconst routes: Routes = [{ path: '', component: ServicelevelComponent }];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ServicelevelRoutingModule { }\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  AfterViewInit,\r\n  ChangeDetectorRef,\r\n  OnDestroy,\r\n  NgZone\r\n} from '@angular/core';\r\n\r\nimport {ClrDatagridStateInterface} from '@clr/angular';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport { CommonService } from '../common.service';\r\n/* import * as echarts from 'Echarts'; */\r\nimport 'echarts-liquidfill';\r\n\r\n@Component({\r\n  selector: 'app-servicelevel',\r\n  templateUrl: './servicelevel.component.html',\r\n  styleUrls: ['./servicelevel.component.scss'],\r\n  providers: [ CommonService ]\r\n})\r\nexport class ServicelevelComponent implements OnInit, AfterViewInit, OnDestroy {\r\n\r\n\r\n  // 详情页面弹出控制\r\n  popShow = false;\r\n  // 容量曲线图\r\n  volumeCapacityChart = null;\r\n  storagePoolCapacityChart = null;\r\n  // 性能曲线图\r\n  volumeMaxResponseTimeChart = null;\r\n  volumeDensityChart = null;\r\n  volumeThroughputChart = null;\r\n  volumeBandwidthChart = null;\r\n  storagePoolDensityChart = null;\r\n\r\n  // 详情列表按钮控制\r\n  storagePoolRadioCheck = 'basic';\r\n  volumeRadioCheck = 'basic';\r\n\r\n  // 服务等级列表搜索\r\n  searchName = '';\r\n  // 服务等级列表排序\r\n  sortItem = {\r\n    id: '',\r\n    value: ''\r\n  };\r\n  sortItems = [\r\n    {\r\n      id: 'name',\r\n      value: 'name'\r\n    },\r\n    {\r\n      id: 'total_capacity',\r\n      value: 'total_capacity'\r\n    },\r\n    {\r\n      id: 'latency',\r\n      value: 'latency'\r\n    },\r\n    {\r\n      id: 'maxIOPS',\r\n      value: 'maxIOPS'\r\n    },\r\n    {\r\n      id: 'minIOPS',\r\n      value: 'minIOPS'\r\n    },\r\n    {\r\n      id: 'maxBandWidth',\r\n      value: 'maxBandWidth'\r\n    },\r\n    {\r\n      id: 'minBandWidth',\r\n      value: 'minBandWidth'\r\n    }\r\n  ];\r\n\r\n  volumeCapacityOption = {\r\n    legend: {\r\n      data: ['Allocated(GB)', 'Total(GB)'],\r\n      left: 'right',\r\n    },\r\n    tooltip: {\r\n      trigger: 'axis'\r\n    },\r\n    title: {\r\n      left: 'left',\r\n      text: 'Volume Capacity'\r\n      // subtext:subTitle,\r\n    },\r\n    xAxis: {\r\n      type: 'category',\r\n      data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\r\n    },\r\n    yAxis: {\r\n      type: 'value'\r\n    },\r\n    series: [{\r\n      name: 'Allocated(GB)',\r\n      data: [820, 932, 901, 934, 1290, 1330, 1320],\r\n      type: 'line',\r\n      smooth: true\r\n    }, {\r\n      name: 'Total(GB)',\r\n      data: [25, 932, 44, 934, 566, 1589, 558],\r\n      type: 'line',\r\n      smooth: true\r\n    }]\r\n  };\r\n\r\n  // 选中的服务等级\r\n  selectedModel: Servicelevel =\r\n  {\r\n        id: '1',\r\n        name: '服务等级_CCC2',\r\n        description: 'description',\r\n        type: 'BLOCK', // FILE BLOCK\r\n        protocol: 'iSCSI', // FC, iSCSI\r\n        total_capacity: 1000,\r\n        used_capacity: 600,\r\n        free_capacity: 400,\r\n        capabilities: {\r\n            resource_type: 'thin', // default_type、thin、thick\r\n            compression: 'default_type', // default_type, enabled, disabled,\r\n            deduplication: 'enabled', // default_type, enabled, disabled,\r\n            iopriority: {\r\n                enabled: true,\r\n                policy: 1, // IO优先级枚举值, 取值范围：1：低；2：中；3：高,\r\n            },\r\n            smarttier: {\r\n                enabled: true,\r\n                policy: 1, // 数据迁移等级，取值范围：0：不迁移, 1：自动迁移, 2：向低性能层迁移, 3：向高性能层迁移\r\n            },\r\n            qos: {\r\n                enabled: true,\r\n                qos_param: {\r\n                  latency: 25,\r\n                  latencyU: 'ms',\r\n                  minBandWidth: 2000,\r\n                  minIOPS: 5000,\r\n                  maxBandWidth: 10000,\r\n                  maxIOPS: 20000,\r\n                }\r\n            }\r\n        }\r\n  };\r\n\r\n  // 服务等级列表\r\n  serviceLevels = [];\r\n  // 服务等级列表 服务器返回数据\r\n  serviceLevelsRes = [];\r\n\r\n\r\n  // ===============storage pool==============\r\n  // 表格loading标志\r\n  storeagePoolIsloading = false;\r\n  // 数据总数\r\n  storagePoolTotal = 0;\r\n  // 数据列表\r\n  storagePoolList: StoragePool[] = [];\r\n  // 选中列表\r\n  storagePoolSelected: StoragePool[];\r\n  // 查询数据参数\r\n  storagePoolQuery = { // 查询数据\r\n      q: 'name',\r\n      sort: 'hostSetting',\r\n      order: 'desc',\r\n      page: 0,\r\n      per_page: 5\r\n  };\r\n  // 查询数据结果,测试用\r\n  storagePoolReslut = {\r\n    items: [{\r\n        id: '123',\r\n        name: 'storeage',\r\n        status: 'Online',\r\n        diskType: 'SSD',\r\n        storageDevice: 'dertV8_160',\r\n\r\n        totalCapacity: 1000,\r\n        usedCapacity: 600,\r\n        capacityUsage: 60,\r\n        freeCapacity: 400,\r\n\r\n        latency: 52,\r\n        iops: 4000,\r\n        bandwidth: 10000\r\n      }],\r\n    total_count: 1\r\n  };\r\n  // ===============storage pool end==============\r\n\r\n  // ===============volume==============\r\n  // 表格loading标志\r\n  volumeIsloading = false;\r\n  // 数据总数\r\n  volumeTotal = 0;\r\n  // 数据列表\r\n  volumeList: Volume[] = [];\r\n  // 选中列表\r\n  volumeSelected: Volume[];\r\n  // 查询数据参数\r\n  volumeQuery = { // 查询数据\r\n    q: 'name',\r\n    sort: 'hostSetting',\r\n    order: 'desc',\r\n    page: 0,\r\n    per_page: 5\r\n  };\r\n  // 查询数据结果,测试用\r\n  volumeReslut = {\r\n    items: [{\r\n      id: '123',\r\n      name: 'volume-001',\r\n      status: 'Normal',\r\n      totalCapacity: 1000,\r\n      provisioningType: 'thin',\r\n      capacityUsed: 500,\r\n\r\n      latency: 52,\r\n      iops: 4000,\r\n      bandwidth: 10000\r\n    }],\r\n    total_count: 1\r\n  };\r\n  // ===============volume end==============\r\n\r\n  // ===============applicationType==============\r\n  // 表格loading标志\r\n  applicationTypeIsloading = false;\r\n  // 数据总数\r\n  applicationTypeTotal = 0;\r\n  // 数据列表\r\n  applicationTypeList: ApplicationType[] = [];\r\n  // 选中列表\r\n  applicationTypeSelected: ApplicationType[];\r\n  // 查询数据参数\r\n  applicationTypeQuery = { // 查询数据\r\n    q: 'name',\r\n    sort: 'hostSetting',\r\n    order: 'desc',\r\n    page: 0,\r\n    per_page: 5\r\n  };\r\n  // 查询数据结果,测试用\r\n  applicationTypeReslut = {\r\n    items: [{\r\n      id: '123',\r\n      storageDevice: 'applicationType-001',\r\n      applicationType: 'SSP'\r\n    }],\r\n    total_count: 1\r\n  };\r\n  // ===============applicationType end==============\r\n\r\n  constructor(private ngZone: NgZone,\r\n              private cdr: ChangeDetectorRef,\r\n              private http: HttpClient,\r\n              private commonService: CommonService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // if (this.volumeCapacityChart) {\r\n    //   this.volumeCapacityChart.dispose();\r\n    // }\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    // this.ngZone.runOutsideAngular(() => this.initChart());\r\n    this.refresh();\r\n  }\r\n\r\n  // ===============storage pool==============\r\n  storagePoolRefresh(state: ClrDatagridStateInterface){\r\n    this.storeagePoolIsloading = true;\r\n    const params = this.commonService.refresh(state, this.storagePoolQuery);\r\n    // this.http.get('https://api.github.com/search/repositories', this.practiceParams).subscribe((result: any) => {\r\n    //       console.log(result)\r\n    //       this.list = result.items;\r\n    //       this.total = result.total_count;\r\n    //       this.isLoading = false;\r\n    //       this.cdr.detectChanges(); // 此方法变化检测，异步处理数据都要添加此方法\r\n    // });\r\n    this.http.post('http://localhost:8080/datastorestatistichistrory/vmfsvolume', this.storagePoolQuery).subscribe((response: any) => {\r\n      console.log(response);\r\n    }, err => {\r\n      console.error('ERROR', err);\r\n    });\r\n    this.storagePoolList = this.storagePoolReslut.items;\r\n    this.storagePoolTotal = this.storagePoolReslut.total_count;\r\n    this.storeagePoolIsloading = false;\r\n    this.cdr.detectChanges(); // 此方法变化检测，异步处理数据都要添加此方法\r\n  }\r\n  // ===============storage pool end==============\r\n\r\n  // ===============volume pool==============\r\n  volumeRefresh(state: ClrDatagridStateInterface){\r\n    this.volumeIsloading = true;\r\n    const params = this.commonService.refresh(state, this.volumeQuery);\r\n    // this.http.get('https://api.github.com/search/repositories', this.practiceParams).subscribe((result: any) => {\r\n    //       console.log(result)\r\n    //       this.list = result.items;\r\n    //       this.total = result.total_count;\r\n    //       this.isLoading = false;\r\n    //       this.cdr.detectChanges(); // 此方法变化检测，异步处理数据都要添加此方法\r\n    // });\r\n    this.volumeList = this.volumeReslut.items;\r\n    this.volumeTotal = this.volumeReslut.total_count;\r\n    this.volumeIsloading = false;\r\n    this.cdr.detectChanges(); // 此方法变化检测，异步处理数据都要添加此方法\r\n  }\r\n  // ===============volume pool end==============\r\n\r\n  // ===============applicationType pool==============\r\n  applicationTypeRefresh(state: ClrDatagridStateInterface){\r\n    this.applicationTypeIsloading = true;\r\n    const params = this.commonService.refresh(state, this.applicationTypeQuery);\r\n    // this.http.get('https://api.github.com/search/repositories', this.practiceParams).subscribe((result: any) => {\r\n    //       console.log(result)\r\n    //       this.list = result.items;\r\n    //       this.total = result.total_count;\r\n    //       this.isLoading = false;\r\n    //       this.cdr.detectChanges(); // 此方法变化检测，异步处理数据都要添加此方法\r\n    // });\r\n    this.applicationTypeList = this.applicationTypeReslut.items;\r\n    this.applicationTypeTotal = this.applicationTypeReslut.total_count;\r\n    this.applicationTypeIsloading = false;\r\n    this.cdr.detectChanges(); // 此方法变化检测，异步处理数据都要添加此方法\r\n  }\r\n  // ===============applicationType pool end==============\r\n\r\n  initPerformanceChart(){\r\n    setTimeout(() => {\r\n      const c1 = document.querySelector('#volumeMaxResponseTimeChart');\r\n      const c2 = document.querySelector('#volumeDensityChart');\r\n      const c3 = document.querySelector('#volumeThroughputChart');\r\n      const c4 = document.querySelector('#volumeBandwidthChart');\r\n      const c5 = document.querySelector('#storagePoolDensityChart');\r\n      if (c1 == null\r\n        || c2 == null\r\n        || c3 == null\r\n        || c4 == null\r\n        || c5 == null\r\n      ){\r\n        this.initPerformanceChart();\r\n      } else {\r\n        /* this.volumeMaxResponseTimeChart = echarts.init(document.querySelector('#volumeMaxResponseTimeChart'));\r\n        this.volumeMaxResponseTimeChart.setOption(this.volumeCapacityOption);\r\n\r\n        this.volumeDensityChart = echarts.init(document.querySelector('#volumeDensityChart'));\r\n        this.volumeDensityChart.setOption(this.volumeCapacityOption);\r\n\r\n        this.volumeThroughputChart = echarts.init(document.querySelector('#volumeThroughputChart'));\r\n        this.volumeThroughputChart.setOption(this.volumeCapacityOption);\r\n\r\n        this.volumeBandwidthChart = echarts.init(document.querySelector('#volumeBandwidthChart'));\r\n        this.volumeBandwidthChart.setOption(this.volumeCapacityOption);\r\n\r\n        this.storagePoolDensityChart = echarts.init(document.querySelector('#storagePoolDensityChart'));\r\n        this.storagePoolDensityChart.setOption(this.volumeCapacityOption); */\r\n      }\r\n    }, 100);\r\n  }\r\n\r\n  initCapacityChart(){\r\n    setTimeout(() => {\r\n      const c1 = document.querySelector('#volumeCapacityChart');\r\n      const c2 = document.querySelector('#storagePoolCapacityChart');\r\n      if (c1 == null || c2 == null){\r\n        this.initCapacityChart();\r\n      } else{\r\n        /* this.volumeCapacityChart = echarts.init(document.querySelector('#volumeCapacityChart'));\r\n        this.volumeCapacityChart.setOption(this.volumeCapacityOption);\r\n\r\n        this.storagePoolCapacityChart = echarts.init(document.querySelector('#storagePoolCapacityChart'));\r\n        this.storagePoolCapacityChart.setOption(this.volumeCapacityOption); */\r\n      }\r\n    }, 100);\r\n  }\r\n\r\n  // 刷新服务等级列表\r\n  refresh(){\r\n    this.http.post('http://localhost:8080/servicelevel/listservicelevel', {}).subscribe((response: any) => {\r\n      response.data = response.data.replace('service-levels', 'serviceLevels');\r\n      const r = JSON.parse(response.data);\r\n      for (const i of r.serviceLevels){\r\n        i.usedRate =  ((i.used_capacity / i.total_capacity * 100).toFixed(2));\r\n      }\r\n      this.serviceLevelsRes = r.serviceLevels;\r\n      this.search();\r\n      console.log(this.serviceLevels);\r\n    }, err => {\r\n      console.error('ERROR', err);\r\n    });\r\n  }\r\n\r\n  // 服务等级列表搜索\r\n  search(){\r\n    if (this.searchName !== ''){\r\n      this.serviceLevels = this.serviceLevelsRes.filter(item => item.name.indexOf(this.searchName) > -1);\r\n    } else{\r\n      this.serviceLevels = this.serviceLevelsRes;\r\n    }\r\n    this.sortItemsChange();\r\n  }\r\n\r\n  // 服务等级列表排序\r\n  sortItemsChange(){\r\n    const o = this.sortItem;\r\n    if (o.value !== ''){\r\n      this.serviceLevels = this.serviceLevels.sort(this.compare(this.sortItem, 'asc'));\r\n    }\r\n  }\r\n\r\n  // 获取指定属性值\r\n  recursivePropertyies(prop: string, obj: object){\r\n    for (const property in obj){\r\n      if (property === prop){\r\n        return obj[prop];\r\n      } else if (obj[property] instanceof Object){\r\n        const r = this.recursivePropertyies(prop, obj[property]);\r\n        if (r !== undefined){\r\n          return r;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // 比较函数\r\n  compare(prop: any, sort: string){\r\n    return (obj1: any, obj2: any) => {\r\n      let val1 = this.recursivePropertyies(prop, obj1);\r\n      let val2 = this.recursivePropertyies(prop, obj2);\r\n      if (val1 === undefined) {\r\n        val1 = '';\r\n      }\r\n      if (val2 === undefined) {\r\n        val2 = '';\r\n      }\r\n      if (val1 < val2) {\r\n        if (sort === 'asc'){\r\n          return -1;\r\n        } else {\r\n          return 1;\r\n        }\r\n      } else if (val1 > val2) {\r\n        if (sort === 'asc'){\r\n          return 1;\r\n        } else {\r\n          return -1;\r\n        }\r\n      } else {\r\n          return 0;\r\n      }\r\n    };\r\n  }\r\n}\r\n\r\nclass Servicelevel {\r\n  id: string;\r\n  name: string;\r\n  description: string;\r\n  type: string; // FILE BLOCK\r\n  protocol: string; // FC, iSCSI\r\n  total_capacity: number;\r\n  used_capacity: number;\r\n  free_capacity: number;\r\n  capabilities: {\r\n    resource_type: string; // default_type、thin、thick\r\n    compression: string; // default_type, enabled, disabled;\r\n    deduplication: string; // default_type, enabled, disabled;\r\n    iopriority: {\r\n      enabled: boolean;\r\n      policy: number; // IO优先级枚举值, 取值范围：1：低；2：中；3：高;\r\n    };\r\n    smarttier: {\r\n      enabled: boolean;\r\n      policy: number; // 数据迁移等级，取值范围：0：不迁移; 1：自动迁移; 2：向低性能层迁移; 3：向高性能层迁移\r\n    };\r\n    qos: {\r\n      enabled: boolean;\r\n      qos_param: {\r\n        latency: number;\r\n        latencyU: string;\r\n        minBandWidth: number;\r\n        minIOPS: number;\r\n        maxBandWidth: number;\r\n        maxIOPS: number;\r\n      };\r\n    };\r\n  };\r\n}\r\n\r\ninterface StoragePool {\r\n  id: string;\r\n  name: string;\r\n  status: string;\r\n  diskType: string;\r\n  storageDevice: string;\r\n\r\n  totalCapacity: number;\r\n  usedCapacity: number;\r\n  capacityUsage: number;\r\n  freeCapacity: number;\r\n\r\n  latency: number;\r\n  iops: number;\r\n  bandwidth: number;\r\n}\r\n\r\ninterface Volume {\r\n  id: string;\r\n  name: string;\r\n  status: string;\r\n  totalCapacity: number;\r\n  provisioningType: string;\r\n  capacityUsed: number;\r\n\r\n  latency: number;\r\n  iops: number;\r\n  bandwidth: number;\r\n}\r\n\r\n\r\nclass ApplicationType {\r\n  id: string;\r\n  storageDevice: string;\r\n  applicationType;\r\n}\r\n","<div class=\"clr-row\">\r\n  <button class=\"btn btn-primary\" (click)=\"search();\">Search</button>\r\n  <input clrInput  [(ngModel)]=\"searchName\" name=\"name\" #name=\"ngModel\" />\r\n  <select  clrSelect (ngModelOptions)=\"sortItems\" [(ngModel)]=\"sortItem\" name=\"sort\" (change)=\"sortItemsChange();\">\r\n    <option *ngFor=\"let item of sortItems\" value=\"{{item.id}}\">{{item.value}}</option>\r\n  </select>\r\n  <button class=\"btn btn-primary\" (click)=\"refresh();\">refresh</button>\r\n</div>\r\n<div class=\"clr-row\">\r\n  <div class=\"info-card clr-col-4\" *ngFor=\"let item of serviceLevels\" [clrDgItem]=\"item\">\r\n    <div class=\"info-card-header\">\r\n      <div class=\"info-card-title\" style=\"cursor:pointer\" (click)=\"popShow=true;selectedModel=item\">{{item.name}}</div>\r\n      <clr-dropdown [clrCloseMenuOnItemClick]=\"false\">\r\n        <button clrDropdownTrigger class=\"dropdown-toggle btn btn-link\">\r\n          Operation\r\n          <clr-icon shape=\"caret down\"></clr-icon>\r\n        </button>\r\n        <clr-dropdown-menu *clrIfOpen>\r\n          <div clrDropdownItem>Link 1</div>\r\n          <div clrDropdownItem>Link 2</div>\r\n        </clr-dropdown-menu>\r\n      </clr-dropdown>\r\n    </div>\r\n    <div class=\"info-card-content\">\r\n      <div class=\"info-card-squre\">\r\n        <div class=\"squre-per-box\" [ngStyle]=\"{'height':(item.usedRate/100*200)+'px'}\"></div>\r\n        <div class=\"squre-num\">{{item.usedRate}}</div>\r\n      </div>\r\n      <div>\r\n        <div class=\"gh-info-item\">\r\n          <span class=\"gh-info-lable\">Total Capacity</span>\r\n          <span class=\"gh-info-value\">{{item.total_capacity}} TB</span>\r\n        </div>\r\n        <div class=\"gh-info-item\">\r\n          <span class=\"gh-info-lable\">Free Capacity</span>\r\n          <span class=\"gh-info-value\">{{item.free_capacity}} TB</span>\r\n        </div>\r\n        <div class=\"gh-info-item\">\r\n          <span class=\"gh-info-lable\">Qos Policy</span>\r\n          <span class=\"gh-info-value\" *ngIf=\"item.capabilities.qos != undefined\r\n                                            && item.capabilities.qos.enabled == true\r\n                                            && item.capabilities.qos.qos_param.latency != undefined\">\r\n            Latency = {{item.capabilities.qos.qos_param.latency}} {{item.capabilities.qos.qos_param.latencyUnit}}</span>\r\n        </div>\r\n        <div class=\"gh-info-item\">\r\n          <span class=\"gh-info-lable\"></span>\r\n          <span class=\"gh-info-value\" *ngIf=\"item.capabilities.qos != undefined\r\n                                            && item.capabilities.qos.enabled == true\r\n                                            && item.capabilities.qos.qos_param.minBandWidth != undefined\">\r\n            Bandwidth >= {{item.capabilities.qos.qos_param.minBandWidth}} Mbps/s\r\n          </span>\r\n          <span class=\"gh-info-value\" *ngIf=\"item.capabilities.qos != undefined\r\n                                            && item.capabilities.qos.enabled == true\r\n                                            && item.capabilities.qos.qos_param.maxBandWidth != undefined\">\r\n            Bandwidth <= {{item.capabilities.qos.qos_param.maxBandWidth}} Mbps/s\r\n          </span>\r\n        </div>\r\n        <div class=\"gh-info-item\">\r\n          <span class=\"gh-info-lable\"></span>\r\n          <span class=\"gh-info-value\" *ngIf=\"item.capabilities.qos != undefined\r\n                                            && item.capabilities.qos.enabled == true\r\n                                            && item.capabilities.qos.qos_param.minIOPS != undefined\">\r\n            IOPS >= {{item.capabilities.qos.qos_param.minIOPS}} IOPS/TB\r\n          </span>\r\n          <span class=\"gh-info-value\" *ngIf=\"item.capabilities.qos != undefined\r\n                                            && item.capabilities.qos.enabled == true\r\n                                            && item.capabilities.qos.qos_param.maxIOPS != undefined\">\r\n            IOPS <= {{item.capabilities.qos.qos_param.maxIOPS}} IOPS/TB\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n\r\n<clr-modal class=\"modal\" [(clrModalOpen)]=\"popShow\" [clrModalSize]=\"'lg'\">\r\n  <h3 class=\"modal-title\">\r\n    <span>{{selectedModel.name}}</span>\r\n    <!--<span>下拉框</span>\r\n    <span>下拉框1</span>-->\r\n  </h3>\r\n  <div class=\"modal-body\" >\r\n    <clr-tabs>\r\n      <clr-tab>\r\n        <button clrTabLink>General</button>\r\n        <clr-tab-content *clrIfActive>\r\n          <!-- 基础信息展示 -->\r\n          <div class=\"gh-info-head\">Basic Information</div>\r\n          <div class=\"gh-info-wrap clr-row\">\r\n            <div class=\"gh-info-item clr-col-4\">\r\n              <span class=\"gh-info-lable\">Name</span>\r\n              <span class=\"gh-info-value\">{{selectedModel.name}}</span>\r\n            </div>\r\n            <div class=\"gh-info-item clr-col-4\">\r\n              <span class=\"gh-info-lable\">Total Capacity</span>\r\n              <span class=\"gh-info-value\">{{selectedModel.total_capacity}} TB</span>\r\n            </div>\r\n            <div class=\"gh-info-item clr-col-4\">\r\n              <span class=\"gh-info-lable\">Free Capacity</span>\r\n              <span class=\"gh-info-value\">{{selectedModel.free_capacity}} TB</span>\r\n            </div>\r\n            <div class=\"gh-info-item clr-col-4\">\r\n              <span class=\"gh-info-lable\">Used Capacity</span>\r\n              <span class=\"gh-info-value\">{{selectedModel.used_capacity}} TB</span>\r\n            </div>\r\n            <div class=\"gh-info-item clr-col-4\">\r\n              <span class=\"gh-info-lable\">Capacity Usage</span>\r\n              <!--<span class=\"gh-info-value\"><clr-progress-bar clrValue=\"{{selectedModel.usedRate}}\" clrSuccess clrLabeled></clr-progress-bar></span>-->\r\n              <span class=\"gh-info-value\">{{selectedModel.usedRate}}%</span>\r\n          </div>\r\n            <div class=\"gh-info-item clr-col-4\">\r\n              <span class=\"gh-info-lable\">I/O Priority</span>\r\n              <span class=\"gh-info-value\" *ngIf=\"selectedModel.capabilities.iopriority !== undefined\r\n                                            && selectedModel.capabilities.iopriority.enabled === true\">\r\n                  <span *ngIf=\"selectedModel.capabilities.iopriority.policy == 1\">Lower</span>\r\n                  <span *ngIf=\"selectedModel.capabilities.iopriority.policy == 2\">Middle</span>\r\n                  <span *ngIf=\"selectedModel.capabilities.iopriority.policy == 3\">High</span>\r\n              </span>\r\n              <span class=\"gh-info-value\" *ngIf=\"selectedModel.capabilities.iopriority === undefined\r\n                                            || selectedModel.capabilities.iopriority.enabled === false\">\r\n                  --\r\n              </span>\r\n            </div>\r\n            <div class=\"gh-info-item clr-col-4\">\r\n              <span class=\"gh-info-lable\">Zoning Policy</span>\r\n              <span class=\"gh-info-value\">--</span>\r\n            </div>\r\n          </div>\r\n          <!-- 基础信息展示 -->\r\n          <div class=\"gh-info-head\">Qos Policy</div>\r\n          <div class=\"gh-info-wrap clr-row\">\r\n            <div class=\"gh-info-item clr-col-4\">\r\n              <span class=\"gh-info-lable\">Control Policy</span>\r\n              <span class=\"gh-info-value\" *ngIf=\"selectedModel.capabilities.qos != undefined\r\n                                            && selectedModel.capabilities.qos.enabled == true\">\r\n                     <span *ngIf=\"selectedModel.capabilities.qos.qos_param.maxBandWidth != undefined\r\n                                  && selectedModel.capabilities.qos.qos_param.maxIOPS != undefined\">\r\n                       Upper limit Control\r\n                     </span>\r\n                     <span *ngIf=\"selectedModel.capabilities.qos.qos_param.minBandWidth != undefined\r\n                                  && selectedModel.capabilities.qos.qos_param.minIOPS != undefined\">\r\n                       Lower limit Control\r\n                     </span>\r\n              </span>\r\n              <span class=\"gh-info-value\" *ngIf=\"selectedModel.capabilities.qos == undefined\r\n                                            || selectedModel.capabilities.qos.enabled == false\">\r\n                     --\r\n              </span>\r\n            </div>\r\n            <div class=\"gh-info-item clr-col-4\" *ngIf=\"selectedModel.capabilities.qos.qos_param.maxBandWidth != undefined\">\r\n              <span class=\"gh-info-lable\">BandWidth</span>\r\n              <span class=\"gh-info-value\"> <= {{selectedModel.capabilities.qos.qos_param.maxBandWidth}} MBPS/TB</span>\r\n            </div>\r\n            <div class=\"gh-info-item clr-col-4\" *ngIf=\"selectedModel.capabilities.qos.qos_param.minBandWidth != undefined\">\r\n              <span class=\"gh-info-lable\">BandWidth</span>\r\n              <span class=\"gh-info-value\"> >= {{selectedModel.capabilities.qos.qos_param.minBandWidth}} MBPS/TB</span>\r\n            </div>\r\n            <div class=\"gh-info-item clr-col-4\" *ngIf=\"selectedModel.capabilities.qos.qos_param.maxIOPS != undefined\">\r\n              <span class=\"gh-info-lable\">IOPS</span>\r\n              <span class=\"gh-info-value\"> <= {{selectedModel.capabilities.qos.qos_param.maxIOPS}} IOPS/TB</span>\r\n            </div>\r\n            <div class=\"gh-info-item clr-col-4\" *ngIf=\"selectedModel.capabilities.qos.qos_param.minIOPS != undefined\">\r\n              <span class=\"gh-info-lable\">IOPS</span>\r\n              <span class=\"gh-info-value\"> >= {{selectedModel.capabilities.qos.qos_param.minIOPS}} IOPS/TB</span>\r\n            </div>\r\n          </div>\r\n          <!-- 基础信息展示 -->\r\n          <div class=\"gh-info-head\">Resource Tuning</div>\r\n          <div class=\"gh-info-wrap clr-row\">\r\n            <div class=\"gh-info-item clr-col-4\">\r\n              <span class=\"gh-info-lable\">Provisioning Type</span>\r\n              <span class=\"gh-info-value\" *ngIf=\"selectedModel.capabilities.resource_type == undefined\r\n                                                || selectedModel.capabilities.resource_type == 'default_type'\">--</span>\r\n              <span class=\"gh-info-value\" *ngIf=\"selectedModel.capabilities.resource_type != undefined\r\n                                                && selectedModel.capabilities.resource_type != 'default_type'\">\r\n                {{selectedModel.capabilities.resource_type}}\r\n              </span>\r\n            </div>\r\n            <div class=\"gh-info-item clr-col-4\">\r\n              <span class=\"gh-info-lable\">Deduplication</span>\r\n              <span class=\"gh-info-value\" *ngIf=\"selectedModel.capabilities.deduplication == undefined\r\n                                                || selectedModel.capabilities.deduplication == 'default_type'\">--</span>\r\n              <span class=\"gh-info-value\" *ngIf=\"selectedModel.capabilities.deduplication != undefined\r\n                                                && selectedModel.capabilities.deduplication != 'default_type'\">\r\n                {{selectedModel.capabilities.deduplication}}\r\n              </span>\r\n            </div>\r\n            <div class=\"gh-info-item clr-col-4\">\r\n              <span class=\"gh-info-lable\">Compression</span>\r\n              <span class=\"gh-info-value\" *ngIf=\"selectedModel.capabilities.compression == undefined\r\n                                                || selectedModel.capabilities.compression == 'default_type'\">--</span>\r\n              <span class=\"gh-info-value\" *ngIf=\"selectedModel.capabilities.compression != undefined\r\n                                                && selectedModel.capabilities.compression != 'default_type'\">\r\n                {{selectedModel.capabilities.compression}}\r\n              </span>\r\n            </div>\r\n            <div class=\"gh-info-item clr-col-4\">\r\n              <span class=\"gh-info-lable\">SmartTier Policy</span>\r\n              <span class=\"gh-info-value\" *ngIf=\"selectedModel.capabilities.smarttier == undefined\r\n                                                || selectedModel.capabilities.smarttier.enabled == false\">--</span>\r\n              <span class=\"gh-info-value\" *ngIf=\"selectedModel.capabilities.smarttier != undefined\r\n                                                && selectedModel.capabilities.smarttier.enabled == true\">\r\n                     <span *ngIf=\"selectedModel.capabilities.smarttier.policy == 0\">\r\n                       不迁移\r\n                     </span>\r\n                     <span *ngIf=\"selectedModel.capabilities.smarttier.policy == 1\">\r\n                       自动迁移\r\n                     </span>\r\n                     <span *ngIf=\"selectedModel.capabilities.smarttier.policy == 2\">\r\n                       向低性能层迁移\r\n                     </span>\r\n                     <span *ngIf=\"selectedModel.capabilities.smarttier.policy == 3\">\r\n                       向高性能层迁移\r\n                     </span>\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <!-- 基础信息展示 -->\r\n          <div class=\"gh-info-head\">Threshold Setting</div>\r\n          <div class=\"gh-info-wrap clr-row\">\r\n             //\r\n          </div>\r\n        </clr-tab-content>\r\n      </clr-tab>\r\n      <clr-tab>\r\n        <button clrTabLink>Storage Pool</button>\r\n        <clr-tab-content *clrIfActive>\r\n\r\n            <div class=\"gh-info-head\"></div>\r\n\r\n            <div class=\"btn-group btn-icon\">\r\n              <div class=\"radio btn\">\r\n                <input (click)=\"storagePoolRadioCheck = 'basic'\" type=\"radio\" name=\"btn-group-demo-radios\" id=\"btn-demo-radio-1\" checked>\r\n                <label for=\"btn-demo-radio-1\"><clr-icon shape=\"list\" size=\"20\"></clr-icon></label>\r\n              </div>\r\n              <div class=\"radio btn\">\r\n                <input (click)=\"storagePoolRadioCheck = 'capacity'\" type=\"radio\" name=\"btn-group-demo-radios\" id=\"btn-demo-radio-2\">\r\n                <label for=\"btn-demo-radio-2\"><clr-icon shape=\"dashboard\" size=\"20\"></clr-icon></label>\r\n              </div>\r\n              <div class=\"radio btn\">\r\n                <input (click)=\"storagePoolRadioCheck = 'performance'\" type=\"radio\" name=\"btn-group-demo-radios\" id=\"btn-demo-radio-3\">\r\n                <label for=\"btn-demo-radio-3\"><clr-icon shape=\"radar\" size=\"20\"></clr-icon></label>\r\n              </div>\r\n              <div class=\"radio btn merginLeft\">\r\n                <label><clr-icon shape=\"refresh\" size=\"20\" (click)=\"storagePoolRefresh($event)\"></clr-icon></label>\r\n              </div>\r\n            </div>\r\n\r\n            <!-- 列表页 -->\r\n            <clr-datagrid [(clrDgSelected)]=\"storagePoolSelected\"   (clrDgRefresh)=\"storagePoolRefresh($event)\" [clrDgLoading]=\"storeagePoolIsloading\">\r\n\r\n              <clr-dg-column [clrDgField]=\"'name'\">Name</clr-dg-column>\r\n\r\n              <ng-container *ngIf=\"storagePoolRadioCheck==='basic'\">\r\n                <clr-dg-column [clrDgField]=\"'status'\">Status</clr-dg-column>\r\n                <clr-dg-column [clrDgField]=\"'diskType'\">Disk Type</clr-dg-column>\r\n                <clr-dg-column [clrDgField]=\"'storageDevice'\">Storage Device</clr-dg-column>\r\n              </ng-container>\r\n\r\n              <ng-container *ngIf=\"storagePoolRadioCheck==='capacity'\">\r\n                <clr-dg-column [clrDgField]=\"'totalCapacity'\">Total Capacity</clr-dg-column>\r\n                <clr-dg-column [clrDgField]=\"'usedCapacity'\">Used Capacity</clr-dg-column>\r\n                <clr-dg-column [clrDgField]=\"'capacityUsage'\">Capacity Usage</clr-dg-column>\r\n                <clr-dg-column [clrDgField]=\"'freeCapacity'\">Free Capacity</clr-dg-column>\r\n              </ng-container>\r\n\r\n              <ng-container *ngIf=\"storagePoolRadioCheck==='performance'\">\r\n                <clr-dg-column [clrDgField]=\"'status'\">Status</clr-dg-column>\r\n                <clr-dg-column [clrDgField]=\"'latency'\">Latency(ms)</clr-dg-column>\r\n                <clr-dg-column [clrDgField]=\"'iops'\">IOPS</clr-dg-column>\r\n                <clr-dg-column [clrDgField]=\"'bandwidth'\">Bandwidth(MB/s)</clr-dg-column>\r\n              </ng-container>\r\n\r\n              <clr-dg-row *ngFor=\"let item of storagePoolList\" [clrDgItem]=\"item\">\r\n\r\n                <clr-dg-cell>{{item.name}}</clr-dg-cell>\r\n\r\n                <ng-container *ngIf=\"storagePoolRadioCheck==='basic'\">\r\n                  <clr-dg-cell>{{item.status}}</clr-dg-cell>\r\n                  <clr-dg-cell>{{item.diskType}}</clr-dg-cell>\r\n                  <clr-dg-cell>{{item.storageDevice}}</clr-dg-cell>\r\n                </ng-container>\r\n\r\n                <ng-container *ngIf=\"storagePoolRadioCheck==='capacity'\">\r\n                  <clr-dg-cell>{{item.totalCapacity}} TB</clr-dg-cell>\r\n                  <clr-dg-cell>{{item.usedCapacity}} TB</clr-dg-cell>\r\n                  <clr-dg-cell>\r\n                    <clr-progress-bar clrValue=\"{{item.capacityUsage}}\" clrSuccess clrLabeled></clr-progress-bar>\r\n                  </clr-dg-cell>\r\n                  <clr-dg-cell>{{item.freeCapacity}} TB</clr-dg-cell>\r\n                </ng-container>\r\n\r\n                <ng-container *ngIf=\"storagePoolRadioCheck==='performance'\">\r\n                  <clr-dg-cell>{{item.status}}</clr-dg-cell>\r\n                  <clr-dg-cell>{{item.latency}}</clr-dg-cell>\r\n                  <clr-dg-cell>{{item.iops}}</clr-dg-cell>\r\n                  <clr-dg-cell>{{item.bandwidth}}</clr-dg-cell>\r\n                </ng-container>\r\n\r\n              </clr-dg-row>\r\n\r\n              <clr-dg-footer>\r\n                <clr-dg-pagination #pagination [clrDgPageSize]=\"5\" [clrDgTotalItems]=\"storagePoolTotal\">\r\n                  <clr-dg-page-size [clrPageSizeOptions]=\"[5,10,50,100]\">per page</clr-dg-page-size>\r\n                  {{pagination.firstItem + 1}} - {{pagination.lastItem + 1}}\r\n                  of {{pagination.totalItems}}\r\n                </clr-dg-pagination>\r\n              </clr-dg-footer>\r\n\r\n\r\n          </clr-datagrid>\r\n        </clr-tab-content>\r\n      </clr-tab>\r\n\r\n      <clr-tab>\r\n        <button clrTabLink>Volume</button>\r\n        <clr-tab-content *clrIfActive>\r\n\r\n          <div class=\"gh-info-head\"></div>\r\n\r\n          <div class=\"btn-group btn-icon\">\r\n            <div class=\"radio btn\">\r\n              <input (click)=\"volumeRadioCheck = 'basic'\" type=\"radio\" name=\"btn-group-demo-radios\" id=\"btn-demo-radio-4\" checked>\r\n              <label for=\"btn-demo-radio-4\"><clr-icon shape=\"list\" size=\"20\"></clr-icon></label>\r\n            </div>\r\n            <div class=\"radio btn\">\r\n              <input (click)=\"volumeRadioCheck = 'performance'\" type=\"radio\" name=\"btn-group-demo-radios\" id=\"btn-demo-radio-5\">\r\n              <label for=\"btn-demo-radio-5\"><clr-icon shape=\"dashboard\" size=\"20\"></clr-icon></label>\r\n            </div>\r\n            <div class=\"radio btn merginLeft\">\r\n              <label><clr-icon shape=\"refresh\" size=\"20\" (click)=\"volumeRefresh($event)\"></clr-icon></label>\r\n            </div>\r\n          </div>\r\n\r\n          <clr-datagrid [(clrDgSelected)]=\"volumeSelected\"   (clrDgRefresh)=\"volumeRefresh($event)\" [clrDgLoading]=\"volumeIsloading\">\r\n\r\n            <ng-container *ngIf=\"volumeRadioCheck==='basic'\">\r\n              <clr-dg-column [clrDgField]=\"'name'\">Name</clr-dg-column>\r\n              <clr-dg-column [clrDgField]=\"'status'\">Status</clr-dg-column>\r\n              <clr-dg-column [clrDgField]=\"'totalCapacity'\">Total Capacity</clr-dg-column>\r\n              <clr-dg-column [clrDgField]=\"'provisioningType'\">Provisioning Type</clr-dg-column>\r\n              <clr-dg-column [clrDgField]=\"'capacityUsed'\">capacity Usage</clr-dg-column>\r\n            </ng-container>\r\n            <ng-container *ngIf=\"volumeRadioCheck==='performance'\">\r\n              <clr-dg-column [clrDgField]=\"'name'\">Name</clr-dg-column>\r\n              <clr-dg-column [clrDgField]=\"'status'\">Status</clr-dg-column>\r\n              <clr-dg-column [clrDgField]=\"'latency'\">Latency(ms)</clr-dg-column>\r\n              <clr-dg-column [clrDgField]=\"'iops'\">IOPS</clr-dg-column>\r\n              <clr-dg-column [clrDgField]=\"'bandwidth'\">Bandwidth(MB/s)</clr-dg-column>\r\n            </ng-container>\r\n\r\n            <clr-dg-row *ngFor=\"let item of volumeList\" [clrDgItem]=\"item\">\r\n\r\n                <clr-dg-cell>{{item.name}}</clr-dg-cell>\r\n                <clr-dg-cell>{{item.status}}</clr-dg-cell>\r\n\r\n                <ng-container *ngIf=\"volumeRadioCheck==='basic'\">\r\n                  <clr-dg-cell>{{item.totalCapacity}}</clr-dg-cell>\r\n                  <clr-dg-cell>{{item.provisioningType}}</clr-dg-cell>\r\n                  <clr-dg-cell>{{item.capacityUsed}}</clr-dg-cell>\r\n                </ng-container>\r\n                <ng-container *ngIf=\"volumeRadioCheck==='performance'\">\r\n                  <clr-dg-cell>{{item.latency}}</clr-dg-cell>\r\n                  <clr-dg-cell>{{item.iops}}</clr-dg-cell>\r\n                  <clr-dg-cell>{{item.bandwidth}}</clr-dg-cell>\r\n                </ng-container>\r\n\r\n            </clr-dg-row>\r\n\r\n            <clr-dg-footer>\r\n              <clr-dg-pagination #pagination [clrDgPageSize]=\"5\" [clrDgTotalItems]=\"volumeTotal\">\r\n                <clr-dg-page-size [clrPageSizeOptions]=\"[5,10,50,100]\">per page</clr-dg-page-size>\r\n                {{pagination.firstItem + 1}} - {{pagination.lastItem + 1}}\r\n                of {{pagination.totalItems}}\r\n              </clr-dg-pagination>\r\n            </clr-dg-footer>\r\n\r\n          </clr-datagrid>\r\n\r\n        </clr-tab-content>\r\n      </clr-tab>\r\n      <clr-tab>\r\n        <button clrTabLink (click)=\"initCapacityChart()\">Capacity</button>\r\n        <clr-tab-content *clrIfActive>\r\n          <div class=\"gh-info-head\"></div>\r\n          <div class=\"clr-select-wrapper\">\r\n            <select class=\"clr-select\" >\r\n              <option value=\"1\">Last 1 month</option>\r\n              <option value=\"2\">Last 3 month</option>\r\n              <option value=\"3\">Last 6 month</option>\r\n              <option value=\"4\">Last 1 year</option>\r\n            </select>\r\n          </div>\r\n          <div class=\"gh-info-head\"></div>\r\n          <div id=\"volumeCapacityChart\" style=\"height: 300px;\"></div>\r\n          <div class=\"gh-info-head\"></div>\r\n          <div id=\"storagePoolCapacityChart\" style=\"height: 300px;\"></div>\r\n        </clr-tab-content>\r\n      </clr-tab>\r\n      <clr-tab>\r\n        <button clrTabLink (click)=\"initPerformanceChart()\">Performance</button>\r\n        <clr-tab-content *clrIfActive>\r\n          <div class=\"gh-info-head\"></div>\r\n          <div class=\"clr-select-wrapper\">\r\n            <select class=\"clr-select\" >\r\n              <option value=\"1\">Last 1 day</option>\r\n              <option value=\"2\">Last 3 week</option>\r\n              <option value=\"3\">Last 6 month</option>\r\n              <option value=\"4\">Last 1 year</option>\r\n            </select>\r\n          </div>\r\n          <div class=\"gh-info-head\"></div>\r\n          <div echarts [options]=\"volumeCapacityOption\" id=\"volumeMaxResponseTimeChart\" style=\"height: 300px;\"></div>\r\n          <div class=\"gh-info-head\"></div>\r\n          <div echarts [options]=\"volumeCapacityOption\" id=\"volumeDensityChart\" style=\"height: 300px;\"></div>\r\n          <div class=\"gh-info-head\"></div>\r\n          <div echarts [options]=\"volumeCapacityOption\" id=\"volumeThroughputChart\" style=\"height: 300px;\"></div>\r\n          <div class=\"gh-info-head\"></div>\r\n          <div echarts [options]=\"volumeCapacityOption\" id=\"volumeBandwidthChart\" style=\"height: 300px;\"></div>\r\n          <div class=\"gh-info-head\"></div>\r\n          <div echarts [options]=\"volumeCapacityOption\" id=\"storagePoolDensityChart\" style=\"height: 300px;\"></div>\r\n        </clr-tab-content>\r\n      </clr-tab>\r\n      <clr-tab>\r\n        <button clrTabLink>Application Type</button>\r\n        <clr-tab-content *clrIfActive>\r\n          <clr-datagrid [(clrDgSelected)]=\"applicationTypeSelected\"   (clrDgRefresh)=\"applicationTypeRefresh($event)\" [clrDgLoading]=\"applicationTypeIsloading\">\r\n\r\n            <clr-dg-column [clrDgField]=\"'storageDevice'\">Storage Device</clr-dg-column>\r\n            <clr-dg-column [clrDgField]=\"'applicationType'\">Application Type</clr-dg-column>\r\n\r\n            <clr-dg-row *ngFor=\"let item of applicationTypeList\" [clrDgItem]=\"item\">\r\n              <clr-dg-cell>{{item.storageDevice}}</clr-dg-cell>\r\n              <clr-dg-cell>{{item.applicationType}}</clr-dg-cell>\r\n            </clr-dg-row>\r\n\r\n            <clr-dg-footer>\r\n              <clr-dg-pagination #pagination [clrDgPageSize]=\"5\" [clrDgTotalItems]=\"applicationTypeTotal\">\r\n                <clr-dg-page-size [clrPageSizeOptions]=\"[5,10,50,100]\">per page</clr-dg-page-size>\r\n                {{pagination.firstItem + 1}} - {{pagination.lastItem + 1}}\r\n                of {{pagination.totalItems}}\r\n              </clr-dg-pagination>\r\n            </clr-dg-footer>\r\n\r\n          </clr-datagrid>\r\n        </clr-tab-content>\r\n      </clr-tab>\r\n    </clr-tabs>\r\n  </div>\r\n  <div class=\"modal-footer\">\r\n    <button type=\"button\" class=\"btn btn-outline bottom-middle\" (click)=\"popShow=false\">Close</button>\r\n  </div>\r\n</clr-modal>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ServicelevelRoutingModule } from './servicelevel-routing.module';\r\nimport { ServicelevelComponent } from './servicelevel.component';\r\nimport {SharedModule} from '../../shared';\r\n\r\n\r\n@NgModule({\r\n  declarations: [ServicelevelComponent],\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule,\r\n    ServicelevelRoutingModule\r\n  ]\r\n})\r\nexport class ServicelevelModule { }\r\n"],"sourceRoot":"webpack:///"}