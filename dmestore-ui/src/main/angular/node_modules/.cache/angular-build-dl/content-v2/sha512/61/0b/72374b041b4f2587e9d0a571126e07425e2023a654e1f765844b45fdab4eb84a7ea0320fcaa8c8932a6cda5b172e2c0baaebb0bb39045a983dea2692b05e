(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{"6rlL":function(t,e,s){"use strict";s.d(e,"a",(function(){return n}));var r=s("fXoL");let n=(()=>{class t{params(t={}){return Object.assign({},t)}refresh(t,e){let s;if(console.log(t),s=t.sort,s&&(e.order=s.reverse?"desc":"asc",e.sort=s.by),t.filters)for(const n of t.filters){const{property:t,value:s}=n;e[t]=s}t.page&&(e.page=t.page.current,e.per_page=t.page.size);const r={params:this.params(e)};return console.log(r),r}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275prov=r.Kb({token:t,factory:t.\u0275fac}),t})()},FX80:function(t,e,s){"use strict";s.d(e,"b",(function(){return o})),s.d(e,"a",(function(){return a}));var r=s("fXoL"),n=s("tk/3");let o=(()=>{class t{constructor(t){this.http=t}getData(){return this.http.get("accessvmfs/listvmfs")}getChartData(t){return this.http.get("accessvmfs/listvmfsperformance",{params:{volumeIds:t}})}getStorages(){return this.http.get("dmestorage/storages")}getStoragePoolsByStorId(t,e){return this.http.get("dmestorage/storagepools?storageId="+t+"&media_type="+e)}getHostList(){return this.http.get("accessvmware/listhost")}getClusterList(){return this.http.get("accessvmware/listcluster")}getHostListByObjectId(t){return this.http.get("accessvmware/gethostsbydsobjectid?dataStoreObjectId="+t)}getClusterListByObjectId(t){return this.http.get("accessvmware/getclustersbydsobjectid?dataStoreObjectId="+t)}getMountHostOrCluSter(t){return this.http.get("accessvmware/getclustersbydsobjectid?dataStoreObjectId="+t)}getServiceLevelList(t={}){return this.http.post("servicelevel/listservicelevel",t)}createVmfs(t={}){return this.http.post("accessvmfs/createvmfs",t)}updateVmfs(t,e={}){return this.http.put("operatevmfs/updatevmfs?volumeId="+t,e)}delVmfs(t={}){return this.http.post("accessvmfs/deletevmfs",t)}getMountHost(t){return this.http.get("accessvmfs/gethostsbystorageid/"+t)}getMountCluster(t){return this.http.get("accessvmfs/gethostgroupsbystorageid/"+t)}unmountVMFS(t={}){return this.http.post("accessvmfs/ummountvmfs",t)}mountVmfs(t={}){return this.http.post("accessvmfs/mountvmfs",t)}reclaimVmfs(t={}){return this.http.post("operatevmfs/recyclevmfs",t)}changeServiceLevel(t={}){return this.http.post("operatevmfs/updatevmfsservicelevel",t)}expandVMFS(t={}){return this.http.post("operatevmfs/expandvmfs",t)}scanVMFS(t){return this.http.get("accessdme/scandatastore",{params:{storageType:t}})}}return t.\u0275fac=function(e){return new(e||t)(r.Yb(n.b))},t.\u0275prov=r.Kb({token:t,factory:t.\u0275fac}),t})();class a{getAddForm(){return{name:null,volumeName:null,isSameName:!0,capacity:null,capacityUnit:"GB",count:null,service_level_id:null,service_level_name:null,version:"5",blockSize:"1024",spaceReclamationGranularity:"1024",spaceReclamationPriority:"low",host:null,hostId:null,cluster:null,clusterId:null,storage_id:null,pool_raw_id:null,workload_type_id:null,alloctype:null,control_policy:"1",latencyChoose:!1,latency:null,maxbandwidth:null,maxbandwidthChoose:!1,maxiops:null,maxiopsChoose:!1,minbandwidth:null,minbandwidthChoose:!1,miniops:null,miniopsChoose:!1,qosname:null,deviceName:null,hostDataloadSuccess:!1,culDataloadSuccess:!1}}getEditForm(){return{name:null,isSameName:!0,volumeId:null,control_policy:"1",max_iops:null,maxiopsChoose:!1,max_bandwidth:null,maxbandwidthChoose:!1,newVoName:null,oldDsName:null,newDsName:null,min_iops:null,miniopsChoose:!1,min_bandwidth:null,minbandwidthChoose:!1,dataStoreObjectId:null,service_level_name:null,latency:null,latencyChoose:!1}}getExpandForm(){return{vo_add_capacity:0,capacityUnit:"GB",volume_id:"",ds_name:"",obj_id:""}}getChangeLevelForm(){return{volume_ids:[],ds_name:"",service_level_id:"",service_level_name:""}}getMountForm(){return{hostId:null,host:null,clusterId:null,cluster:null,dataStoreObjectIds:[],mountType:null}}getUnmountForm(){return{name:null,hostId:null,clusterId:null,dataStoreObjectIds:[],mountType:"1"}}}}}]);