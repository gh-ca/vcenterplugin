{"version":3,"sources":["webpack:///src/app/routes/nfs/file-system/file-system.component.ts","webpack:///src/app/routes/nfs/file-system/file-system.component.html","webpack:///src/app/routes/nfs/file-system/file-system.service.ts","webpack:///src/app/routes/nfs/logicport/logicport.component.ts","webpack:///src/app/routes/nfs/logicport/logicport.component.html","webpack:///src/app/routes/nfs/logicport/logicport.service.ts","webpack:///src/app/routes/nfs/nfs-routing.module.ts","webpack:///src/app/routes/nfs/nfs.component.ts","webpack:///src/app/routes/nfs/nfs.component.html","webpack:///src/app/routes/nfs/nfs.module.ts","webpack:///src/app/routes/nfs/nfs.service.ts","webpack:///src/app/routes/nfs/share/share.component.ts","webpack:///src/app/routes/nfs/share/share.component.html","webpack:///src/app/routes/nfs/share/share.service.ts"],"names":["FileSystemComponent","fsService","gs","fsDetail","fsNames","ctx","getClientSdk","app","getContextObjects","objectId","getFsDetail","getData","subscribe","result","fsDetails","data","forEach","f","push","name","defaultSelect","getFsDetailByName","detail","filter","item","console","log","changeFs","selector","templateUrl","styleUrls","providers","FileSystemService","http","param","get","FsDetail","LogicportComponent","remoteSrv","logicportDetail","logicDetail","LogicportService","LogicDetail","routes","path","component","NfsRoutingModule","forChild","imports","exports","NfsComponent","cdr","storageService","list","radioCheck","total","isLoading","rowSelected","oldCapacity","modifyShow","popShow","expand","reduceOpen","mountShow","delShow","unmountShow","mountObj","fsIds","form","storageDevice","storagePool","logicPort","datastoreName","fsname","shareName","size","unit","nfsProtocol","favorite","sameName","qosPolicy","thin","control","deduplication","compression","capAuto","currentData","hostList","clusterList","mountForm","select1","select2","storageList","storagePools","logicPorts","detectChanges","listnfsperformance","length","fsId","getChartData","code","chartList","charItem","ops","bandwidth","readResponseTime","writeResponseTime","s","getStoragePoolListByStorageId","r","selectLogicPort","getLogicPortListByStorageId","Object","assign","addNfs","capacity","dataStoreName","getHostList","getClusterList","strs","e","hostId","hosts","clusterId","clusters","mountNfs","delNfs","objectid","navigateTo","targetViewId","addView","modifyData","getNfsList","selectStoragePool","changeData","expandData","unmount","changeDetection","OnPush","NfsModule","declarations","NfsService","params","post","AddNfs","FileSystem","Autonegotiation","Advance","QosPolicy","Share","ShareClient","Mount","Host","Cluster","ShareComponent","getShareDetail","shareDetail","ShareService","ShareDetail","AuthClient"],"mappings":"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","file":"nfs-nfs-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport {FileSystemService, FsDetail} from './file-system.service';\r\nimport {GlobalsService} from '../../../shared/globals.service';\r\n\r\n@Component({\r\n  selector: 'app-file-system',\r\n  templateUrl: './file-system.component.html',\r\n  styleUrls: ['./file-system.component.scss'],\r\n  providers: [FileSystemService, GlobalsService]\r\n})\r\nexport class FileSystemComponent implements OnInit {\r\n  fsDetails: FsDetail[];\r\n  fsDetail: FsDetail = new FsDetail();\r\n  fsNames: string[] = [];\r\n  defaultSelect: string;\r\n  constructor(private fsService: FileSystemService, private gs: GlobalsService) { }\r\n\r\n  ngOnInit(): void {\r\n    const ctx = this.gs.getClientSdk().app.getContextObjects();\r\n    const objectId = '1234';\r\n    this.getFsDetail(objectId);\r\n  }\r\n  getFsDetail(objectId){\r\n    this.fsService.getData(objectId).subscribe((result: any) => {\r\n      this.fsDetails = result.data;\r\n      this.fsDetails.forEach(f => {\r\n        this.fsNames.push(f.name);\r\n      });\r\n      this.defaultSelect = this.fsNames[0];\r\n      this.fsDetail = this.getFsDetailByName(this.defaultSelect);\r\n    });\r\n  }\r\n\r\n  getFsDetailByName(name): any {\r\n    const detail = this.fsDetails.filter(item => item.name === name)[0];\r\n    return detail;\r\n  }\r\n  changeFs(){\r\n    console.log(this.defaultSelect);\r\n    this.fsDetail = this.getFsDetailByName(this.defaultSelect);\r\n    console.log(this.fsDetail);\r\n  }\r\n}\r\n","<div>\r\n  <clr-select-container>\r\n    <select clrSelect (ngModelOptions)=\"fsNames\" [(ngModel)]=\"defaultSelect\" name=\"defaultSelect\" class=\"clr-select\" (change)=\"changeFs()\">\r\n      <option *ngFor=\"let item of fsNames\" value=\"{{item}}\">{{item}}</option>\r\n    </select>\r\n  </clr-select-container>\r\n  <table class=\"table table-noborder\">\r\n    <tr>\r\n      <td class=\"left\">{{'nfs.fs.name' | translate}}</td>\r\n      <td class=\"left\">{{fsDetail.name}}</td>\r\n      <td class=\"left\">{{'nfs.fs.device' | translate}}</td>\r\n      <td class=\"left\">{{fsDetail.device}}</td>\r\n    </tr>\r\n    <tr>\r\n      <td class=\"left\">{{'nfs.fs.storagePool' | translate}}</td>\r\n      <td class=\"left\">{{fsDetail.storagePoolName}}</td>\r\n\r\n      <td class=\"left\">{{'nfs.fs.controller' | translate}}</td>\r\n      <td class=\"left\">{{fsDetail.controller}}</td>\r\n    </tr>\r\n    <tr>\r\n      <td class=\"left\">{{'nfs.fs.provisionType' | translate}}</td>\r\n      <td class=\"left\">{{fsDetail.provisionType}}</td>\r\n      <td class=\"left\">{{'nfs.fs.appSce' | translate}}</td>\r\n      <td class=\"left\">{{fsDetail.applicationScenario}}</td>\r\n    </tr>\r\n    <tr>\r\n      <td class=\"left\">{{'nfs.fs.dataDed' | translate}}</td>\r\n      <td class=\"left\">{{fsDetail.dataDeduplication}}</td>\r\n\r\n      <td class=\"left\">{{'nfs.fs.dataCom' | translate}}</td>\r\n      <td class=\"left\">{{fsDetail.dateCompression}}</td>\r\n    </tr>\r\n  </table>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class FileSystemService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getData(param) {\r\n    return this.http.get('http://localhost:8080/accessnfs/fileservice/'+param);\r\n  }\r\n}\r\nexport class FsDetail{\r\n   name: string;\r\n   description: string;\r\n   device: string;\r\n   storagePoolName: string;\r\n   provisionType: string;\r\n   applicationScenario: string;\r\n   dataDeduplication: boolean;\r\n   dateCompression: boolean;\r\n   controller: string;\r\n}\r\n\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {LogicDetail, LogicportService} from './logicport.service';\r\nimport {GlobalsService} from '../../../shared/globals.service';\r\n\r\n@Component({\r\n  selector: 'app-logicport',\r\n  templateUrl: './logicport.component.html',\r\n  styleUrls: ['./logicport.component.scss'],\r\n  providers: [ LogicportService, GlobalsService]\r\n})\r\nexport class LogicportComponent implements OnInit {\r\n  logicDetail: LogicDetail;\r\n  constructor(private remoteSrv: LogicportService, private gs: GlobalsService) { }\r\n\r\n  ngOnInit(): void {\r\n    const ctx = this.gs.getClientSdk().app.getContextObjects();\r\n    const objectId = '1234';\r\n    // objectId=ctx[0].id;\r\n    this.logicportDetail(objectId);\r\n  }\r\n\r\n  logicportDetail(objectId){\r\n    this.remoteSrv.getData(objectId)\r\n      .subscribe((result: any) => {\r\n          this.logicDetail = result.data;\r\n      });\r\n  }\r\n}\r\n","<div *ngIf=\"logicDetail\">\r\n  <table class=\"table table-noborder\">\r\n    <tr>\r\n      <td class=\"left\">{{'nfs.logic.name' | translate}}</td>\r\n      <td class=\"left\">{{logicDetail.name}}</td>\r\n\r\n      <td class=\"left\">{{'nfs.logic.ip' | translate}}</td>\r\n      <td class=\"left\">{{logicDetail.ip}}</td>\r\n\r\n      <td class=\"left\">{{'nfs.logic.healthStatus' | translate}}</td>\r\n      <td class=\"left\">{{logicDetail.status}}</td>\r\n    </tr>\r\n    <tr>\r\n      <td class=\"left\">{{'nfs.logic.runningStatus' | translate}}</td>\r\n      <td class=\"left\">{{logicDetail.runningStatus}}</td>\r\n\r\n      <td class=\"left\">{{'nfs.logic.activePort' | translate}}</td>\r\n      <td class=\"left\">{{logicDetail.activePort}}</td>\r\n\r\n      <td class=\"left\">{{'nfs.logic.currentPort' | translate}}</td>\r\n      <td class=\"left\">{{logicDetail.currentPort}}</td>\r\n    </tr>\r\n    <tr>\r\n      <td class=\"left\">{{'nfs.logic.failoverGroup' | translate}}</td>\r\n      <td class=\"left\">{{logicDetail.failoverGroup}}</td>\r\n    </tr>\r\n  </table>\r\n</div>\r\n<div *ngIf=\"!logicDetail\">\r\n  未查询到数据\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class LogicportService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getData(param) {\r\n    return this.http.get('http://localhost:8080/accessnfs/logicport/'+param);\r\n  }\r\n}\r\nexport class LogicDetail{\r\n   name: string;\r\n   ip: string;\r\n   status: string;\r\n   runningStatus: string;\r\n   activePort: string;\r\n   currentPort: string;\r\n   failoverGroup: string;\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { NfsComponent } from './nfs.component';\r\nimport {LogicportComponent} from './logicport/logicport.component';\r\nimport {ShareComponent} from './share/share.component';\r\nimport {FileSystemComponent} from './file-system/file-system.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: NfsComponent },\r\n  { path: 'logicport', component: LogicportComponent },\r\n  { path: 'share', component: ShareComponent },\r\n  { path: 'fs', component: FileSystemComponent }\r\n  ];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class NfsRoutingModule { }\r\n","import {ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit} from '@angular/core';\r\nimport {Cluster, Host, List, Mount, NfsService} from './nfs.service';\r\nimport {GlobalsService} from '../../shared/globals.service';\r\nimport {LogicPort, StorageList, StoragePool, StorageService} from '../storage/storage.service';\r\n@Component({\r\n  selector: 'app-nfs',\r\n  templateUrl: './nfs.component.html',\r\n  styleUrls: ['./nfs.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [NfsService, GlobalsService, StorageService],\r\n})\r\nexport class NfsComponent implements OnInit {\r\n  list: List[] = []; // 数据列表\r\n  radioCheck = 'list'; // 切换列表页显示\r\n  total = 0; // 总数据数量\r\n  isLoading = true; // table数据loading\r\n  rowSelected = []; // 当前选中数据\r\n  oldCapacity = 0;\r\n  // ==========弹窗参数=======\r\n  modifyShow = false;\r\n  popShow = false; // 弹出层显示\r\n  expand = false; // 扩容弹出框\r\n  reduceOpen = false; // 缩容\r\n  mountShow = false; // 挂载\r\n  delShow = false; // 删除提示\r\n  unmountShow = false; // 卸载提示\r\n  mountObj = '1';\r\n  fsIds = [];\r\n  // 添加form提交数据\r\n  form = {\r\n    storageDevice: '',\r\n    storagePool: '',\r\n    logicPort: 0,\r\n    datastoreName: 0,\r\n    fsname: '',\r\n    shareName: '',\r\n    size: 0,\r\n    unit: 'GB',\r\n    nfsProtocol: 'v3',\r\n    name: '',\r\n    favorite: '',\r\n    sameName: true,\r\n    qosPolicy: false,\r\n    thin: true,\r\n    control: 'up',\r\n    deduplication: 'disable',\r\n    compression: 'disable',\r\n    capAuto: false\r\n  };\r\n  currentData = {\r\n    name: '',\r\n    sameName: true,\r\n\r\n  };\r\n  hostList: Host[] = [];\r\n  clusterList: Cluster[] = [];\r\n  mountForm = new Mount();\r\n  select1 = [];\r\n  select2 = [];\r\n\r\n  storageList: StorageList[] = [];\r\n  storagePools: StoragePool[] = [];\r\n  logicPorts: LogicPort[] = [];\r\n\r\n  constructor(private remoteSrv: NfsService, private cdr: ChangeDetectorRef, public gs: GlobalsService , private storageService: StorageService) { }\r\n  ngOnInit(): void {\r\n  }\r\n  changeData() {\r\n    this.rowSelected[0] = this.currentData;\r\n    this.modifyShow = false;\r\n  }\r\n\r\n  // 获取nfs列表\r\n  getNfsList() {\r\n    this.isLoading = true;\r\n    // 进行数据加载\r\n    this.remoteSrv.getData()\r\n      .subscribe((result: any) => {\r\n        this.list = result.data;\r\n        this.isLoading = false;\r\n        this.cdr.detectChanges(); // 此方法变化检测，异步处理数据都要添加此方法\r\n        // 获取性能列表\r\n        this.listnfsperformance();\r\n      });\r\n  }\r\n// 性能视图列表\r\n  listnfsperformance(){\r\n    if (this.list === null || this.list.length <= 0){ return; }\r\n    this.list.forEach(item => {\r\n      this.fsIds.push(item.fsId);\r\n    });\r\n    console.log('fsIds');\r\n    console.log(this.fsIds);\r\n    this.remoteSrv.getChartData(this.fsIds).subscribe((result: any) => {\r\n      if (result.code === '0'){\r\n        const chartList: List [] = result.data;\r\n        this.list.forEach(item => {\r\n          chartList.forEach(charItem => {\r\n            if (item.fsId === charItem.fsId){\r\n              item.ops = charItem.ops;\r\n              item.bandwidth = charItem.bandwidth;\r\n              item.readResponseTime = charItem.readResponseTime;\r\n              item.writeResponseTime = charItem.writeResponseTime;\r\n            }\r\n          });\r\n        });\r\n        this.cdr.detectChanges();\r\n      }\r\n    });\r\n  }\r\n\r\n  addView(){\r\n    // 获取存储列表\r\n    this.storageService.getData().subscribe((s: any) => {\r\n       if (s.code === '0'){\r\n        this.storageList = s.data.data;\r\n        }\r\n    });\r\n    this.popShow = true;\r\n  }\r\n  selectStoragePool(){\r\n    this.storagePools = null;\r\n    this.logicPorts = null;\r\n    console.log('查询存储池....');\r\n    // 选择存储后获取存储池\r\n    this.storageService.getStoragePoolListByStorageId(this.form.storageDevice)\r\n      .subscribe((r: any) => {\r\n        if (r.code === '0'){\r\n          this.storagePools = r.data.data;\r\n        }\r\n      });\r\n    this.selectLogicPort();\r\n  }\r\n  selectLogicPort(){\r\n    console.log('查询逻辑端口....');\r\n    // 选择存储后逻辑端口\r\n    this.storageService.getLogicPortListByStorageId(this.form.storageDevice)\r\n      .subscribe((r: any) => {\r\n        if (r.code === '0'){\r\n        this.logicPorts = r.data.data;\r\n      }\r\n      });\r\n  }\r\n  modifyData() {\r\n    console.log(this.rowSelected[0]);\r\n    this.currentData = Object.assign({}, this.rowSelected[0]);\r\n    this.modifyShow = true;\r\n  }\r\n  // 添加提交方法\r\n  addNfs(){\r\n    console.log('form');\r\n    console.log(this.form);\r\n    this.remoteSrv.addNfs(this.form).subscribe((result: any) => {\r\n      const data = result.data;\r\n      console.log('result');\r\n      console.log(data);\r\n    });\r\n  }\r\n  expandData(){\r\n    console.log('扩容提交.....');\r\n    // 弹窗关闭\r\n    this.expand = false;\r\n  }\r\n  // 弹出缩容页面\r\n  reduceView(){\r\n    console.log(this.rowSelected[0]);\r\n    this.oldCapacity = this.rowSelected[0].capacity;\r\n    this.reduceOpen = true;\r\n  }\r\n  // 缩容提交\r\n  reduceCommit(){\r\n\r\n  }\r\n  // 挂载\r\n  mount(){\r\n    this.mountForm.dataStoreName = this.rowSelected[0].name;\r\n    this.remoteSrv.getHostList(this.mountForm.dataStoreName).subscribe((r: any) => {\r\n      if (r.code === '0'){\r\n        this.hostList = r.data;\r\n        this.cdr.detectChanges();\r\n      }\r\n    });\r\n    this.remoteSrv.getClusterList(this.mountForm.dataStoreName).subscribe((r: any) => {\r\n      if (r.code === '0'){\r\n        this.clusterList = r.data;\r\n        this.cdr.detectChanges();\r\n      }\r\n    });\r\n    this.mountShow = true;\r\n  }\r\n  // 挂载提交\r\n  mountSubmit(){\r\n    if (this.mountObj === '1'){\r\n      const strs: string[] = [];\r\n      this.select1.forEach(e => {\r\n        strs.push(e.hostId);\r\n      });\r\n      this.mountForm.hosts = strs;\r\n    }else if (this.mountObj === '2'){\r\n      const strs: string[] = [];\r\n      this.select2.forEach(e => {\r\n        strs.push(e.clusterId);\r\n      });\r\n      this.mountForm.clusters = strs;\r\n    }\r\n    this.remoteSrv.mountNfs(this.mountForm).subscribe((result: any) => {\r\n      if (result.code  ===  '0'){\r\n        this.mountShow = false;\r\n        this.mountForm = new Mount();\r\n        this.select1 = [];\r\n        this.select2 = [];\r\n      }\r\n    });\r\n  }\r\n  // 卸载\r\n  unmount(){\r\n    const name = this.rowSelected[0].name;\r\n    console.log(name);\r\n    this.unmountShow = false;\r\n  }\r\n  // 删除NFS\r\n  delNfs(){\r\n    const name = this.rowSelected[0].name;\r\n    console.log(name);\r\n    this.remoteSrv.delNfs(name).subscribe((result: any) => {\r\n      this.delShow = false;\r\n    });\r\n  }\r\n  navigateTo(objectid){\r\n    console.log('页面跳转了');\r\n    console.log(objectid);\r\n    this.gs.getClientSdk().app.navigateTo({\r\n      targetViewId: 'vsphere.core.datastore.summary',\r\n      objectId: objectid\r\n    });\r\n  }\r\n}\r\n","<div>\r\n  <!-- 头部按钮组 -->\r\n  <div class=\"gh-btngroup-header\">\r\n    <div class=\"gh-btngroup-left\">\r\n      <button class=\"btn btn-primary\" (click)=\"addView()\">{{'menu.add' | translate}}</button>\r\n      <button class=\"btn btn-primary\" [disabled]=\"rowSelected.length !== 1\" (click)=\"modifyData()\">{{'menu.modify' | translate}}</button>\r\n      <button class=\"btn btn-primary\" [disabled]=\"rowSelected.length !== 1\" (click)=\"expand = true\">{{'menu.expand' | translate}}</button>\r\n      <clr-dropdown [clrCloseMenuOnItemClick]=\"false\">\r\n        <button clrDropdownTrigger class=\"btn btn-primary\" aria-label=\"Dropdown demo button\">\r\n          {{'menu.more' | translate}}\r\n          <clr-icon shape=\"caret down\"></clr-icon>\r\n        </button>\r\n        <clr-dropdown-menu *clrIfOpen>\r\n          <div aria-label=\"Dropdown header Action 1\" [disabled]=\"rowSelected.length !== 1\" clrDropdownItem [disabled]=\"rowSelected.length !== 1\" (click)=\"reduceView();\" >{{'menu.reduce' | translate}}</div>\r\n          <div class=\"dropdown-divider\" role=\"separator\" aria-hidden=\"true\"></div>\r\n          <div aria-label=\"Dropdown header Action 2\" [disabled]=\"rowSelected.length !== 1\" clrDropdownItem (click)=\"mount();\"> {{'menu.mount' | translate}}</div>\r\n          <div aria-label=\"Dropdown header Action 2\" [disabled]=\"rowSelected.length !== 1\" clrDropdownItem (click)=\"unmountShow=true\">{{'menu.unmount' | translate}}</div>\r\n          <div class=\"dropdown-divider\" role=\"separator\" aria-hidden=\"true\"></div>\r\n          <div aria-label=\"Dropdown header Action 2\" [disabled]=\"rowSelected.length !== 1\" clrDropdownItem (click)=\"delShow=true\">{{'menu.del' | translate}}</div>\r\n        </clr-dropdown-menu>\r\n      </clr-dropdown>\r\n    </div>\r\n\r\n    <div class=\"btn-group btn-icon\">\r\n      <div class=\"radio btn\">\r\n        <input (click)=\"radioCheck = 'list'\" type=\"radio\" name=\"btn-group-demo-radios\" id=\"btn-demo-radio-1\" ng-checked=\"true\">\r\n        <label for=\"btn-demo-radio-1\"><clr-icon shape=\"list\" size=\"20\"></clr-icon></label>\r\n      </div>\r\n      <div class=\"radio btn\">\r\n        <input (click)=\"radioCheck = 'chart'\" type=\"radio\" name=\"btn-group-demo-radios\" id=\"btn-demo-radio-2\">\r\n        <label for=\"btn-demo-radio-2\"><clr-icon shape=\"dashboard\" size=\"20\"></clr-icon></label>\r\n      </div>\r\n      <div class=\"radio btn merginLeft\">\r\n        <!--<input type=\"radio\" name=\"btn-group-demo-radios\" id=\"btn-demo-radio-3\">-->\r\n        <label><clr-icon shape=\"refresh\" size=\"20\" (click)=\"getNfsList()\"></clr-icon></label>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- 列表页 -->\r\n  <clr-datagrid [(clrDgSelected)]=\"rowSelected\"   (clrDgRefresh)=\"getNfsList()\" [clrDgLoading]=\"isLoading\" class=\"datagrid-compact\">\r\n      <clr-dg-column>{{'nfs.name' | translate}}</clr-dg-column>\r\n\r\n      <clr-dg-column [hidden]=\"radioCheck!=='list'\">{{'nfs.status' | translate}}</clr-dg-column>\r\n      <clr-dg-column [hidden]=\"radioCheck!=='list'\">{{'nfs.totalCapacity' | translate}}</clr-dg-column>\r\n      <clr-dg-column [hidden]=\"radioCheck!=='list'\">{{'nfs.freeCapacity' | translate}}</clr-dg-column>\r\n      <clr-dg-column [hidden]=\"radioCheck!=='list'\">{{'nfs.capacityUsage' | translate}}</clr-dg-column>\r\n      <clr-dg-column [hidden]=\"radioCheck!=='list'\">{{'nfs.provisioningCapacity' | translate}}</clr-dg-column>\r\n      <clr-dg-column [hidden]=\"radioCheck!=='list'\">{{'nfs.device' | translate}}</clr-dg-column>\r\n      <clr-dg-column [hidden]=\"radioCheck!=='list'\">{{'nfs.logicPort' | translate}}</clr-dg-column>\r\n      <clr-dg-column [hidden]=\"radioCheck!=='list'\">{{'nfs.shareIp' | translate}}</clr-dg-column>\r\n      <clr-dg-column [hidden]=\"radioCheck!=='list'\">{{'nfs.sharePath' | translate}}</clr-dg-column>\r\n      <clr-dg-column [hidden]=\"radioCheck!=='list'\">{{'nfs.fileSystem' | translate}}</clr-dg-column>\r\n\r\n      <clr-dg-column [hidden]=\"radioCheck!=='chart'\">{{'nfs.ops' | translate}}</clr-dg-column>\r\n      <clr-dg-column [hidden]=\"radioCheck!=='chart'\">{{'nfs.bandwidth' | translate}}</clr-dg-column>\r\n      <clr-dg-column [hidden]=\"radioCheck!=='chart'\">{{'nfs.respRt' | translate}}</clr-dg-column>\r\n      <clr-dg-column [hidden]=\"radioCheck!=='chart'\">{{'nfs.respWt' | translate}}</clr-dg-column>\r\n\r\n    <clr-dg-row *ngFor=\"let item of list\" [clrDgItem]=\"item\">\r\n        <clr-dg-cell (click)=\"navigateTo(item.objectid)\">{{item.name}}</clr-dg-cell>\r\n        <clr-dg-cell [hidden]=\"radioCheck!=='list'\">{{item.status}}</clr-dg-cell>\r\n        <clr-dg-cell [hidden]=\"radioCheck!=='list'\">{{item.capacity}}</clr-dg-cell>\r\n        <clr-dg-cell [hidden]=\"radioCheck!=='list'\">{{item.freeSpace}}</clr-dg-cell>\r\n        <clr-dg-cell [hidden]=\"radioCheck!=='list'\">\r\n          <clr-progress-bar clrValue=\"{{((item.capacity - item.freeSpace)/item.capacity * 100).toFixed(2)}}\" clrSuccess clrLabeled></clr-progress-bar>\r\n        </clr-dg-cell>\r\n        <clr-dg-cell [hidden]=\"radioCheck!=='list'\">{{item.reserveCapacity}}</clr-dg-cell>\r\n        <clr-dg-cell [hidden]=\"radioCheck!=='list'\">{{item.device}}</clr-dg-cell>\r\n        <clr-dg-cell [hidden]=\"radioCheck!=='list'\">{{item.logicPort}}</clr-dg-cell>\r\n        <clr-dg-cell [hidden]=\"radioCheck!=='list'\">{{item.shareIp}}</clr-dg-cell>\r\n        <clr-dg-cell [hidden]=\"radioCheck!=='list'\">{{item.sharePath}}</clr-dg-cell>\r\n        <clr-dg-cell [hidden]=\"radioCheck!=='list'\">{{item.fs}}</clr-dg-cell>\r\n\r\n        <clr-dg-cell [hidden]=\"radioCheck!=='chart'\">{{item.ops}}</clr-dg-cell>\r\n        <clr-dg-cell [hidden]=\"radioCheck!=='chart'\">{{item.bandwidth}}</clr-dg-cell>\r\n        <clr-dg-cell [hidden]=\"radioCheck!=='chart'\">{{item.readResponseTime}}</clr-dg-cell>\r\n        <clr-dg-cell [hidden]=\"radioCheck!=='chart'\">{{item.writeResponseTime}}</clr-dg-cell>\r\n    </clr-dg-row>\r\n  </clr-datagrid>\r\n\r\n\r\n  <!-- 添加nsf data store -->\r\n  <clr-wizard #wizard [(clrWizardOpen)]=\"popShow\">\r\n    <clr-wizard-title>{{'nfs.add_title' | translate}}</clr-wizard-title>\r\n    <clr-wizard-button [type]=\"'cancel'\">{{'nfs.button_close' | translate}}</clr-wizard-button>\r\n    <clr-wizard-button [type]=\"'previous'\">{{'nfs.button_previous' | translate}}</clr-wizard-button>\r\n    <clr-wizard-button [type]=\"'next'\">{{'nfs.button_next' | translate}}</clr-wizard-button>\r\n    <clr-wizard-button [type]=\"'finish'\" (click)=\"addNfs();\">{{'nfs.button_done' | translate}}</clr-wizard-button>\r\n    <clr-wizard-page [clrWizardPageNextDisabled]=\"!formPageOne.valid\">\r\n      <ng-template clrPageTitle>{{'nfs.datastoreSetting' | translate}}</ng-template> <!-- mandatory -->\r\n      <form clrForm #formPageOne=\"ngForm\">\r\n        <!--存储设备-->\r\n        <clr-select-container>\r\n          <label>{{'nfs.storeageDevice' | translate}}</label>\r\n          <select clrSelect (ngModelOptions)=\"storageList\" [(ngModel)]=\"form.storageDevice\" name=\"storageDevice\" class=\"clr-select\" (change)=\"selectStoragePool()\">\r\n            <option *ngFor=\"let item of storageList\" value=\"{{item.id}}\">{{item.name}}</option>\r\n          </select>\r\n        </clr-select-container>\r\n\r\n        <!--存储池-->\r\n        <clr-select-container>\r\n          <label>{{'nfs.storagePool' | translate}}</label>\r\n          <select clrSelect (ngModelOptions)=\"storagePools\" [(ngModel)]=\"form.storagePool\" name=\"storagePool\" class=\"clr-select\">\r\n            <option *ngFor=\"let item of storagePools\" value=\"{{item.storage_pool_id}}\">{{item.name}}</option>\r\n          </select>\r\n        </clr-select-container>\r\n        <!--逻辑端口-->\r\n        <clr-select-container>\r\n          <label>{{'nfs.logicPort' | translate}}</label>\r\n          <select clrSelect (ngModelOptions)=\"logicPorts\" [(ngModel)]=\"form.logicPort\" name=\"logicPort\" class=\"clr-select\">\r\n            <option *ngFor=\"let item of logicPorts\" value=\"{{item.id}}\">{{item.name}}</option>\r\n          </select>\r\n        </clr-select-container>\r\n        <!--名称-->\r\n        <clr-input-container>\r\n          <label>{{'nfs.datastoreName' | translate}}</label>\r\n          <input clrInput [(ngModel)]=\"form.datastoreName\" name=\"datastoreName\" />\r\n        </clr-input-container>\r\n        <clr-checkbox-container>\r\n          <label></label>\r\n          <clr-checkbox-wrapper>\r\n            <input type=\"checkbox\" clrCheckbox [(ngModel)]=\"form.sameName\" name=\"sameName\" />\r\n            <label>{{'nfs.fsName' | translate}}</label>\r\n          </clr-checkbox-wrapper>\r\n        </clr-checkbox-container>\r\n\r\n        <clr-input-container *ngIf=\"!form.sameName\">\r\n          <label>fsName</label>\r\n          <input clrInput [(ngModel)]=\"form.fsname\" name=\"fsname\" />\r\n        </clr-input-container>\r\n        <clr-input-container *ngIf=\"!form.sameName\">\r\n          <label>ShareName</label>\r\n          <input clrInput [(ngModel)]=\"form.shareName\" name=\"shareName\" />\r\n        </clr-input-container>\r\n\r\n\r\n\r\n        <!--大小-->\r\n        <clr-input-container>\r\n          <label>{{'nfs.size' | translate}}</label>\r\n          <input clrInput  class=\"inputOneLine\" type=\"number\" [(ngModel)]=\"form.size\" name=\"size\" #number=\"ngModel\" />\r\n          <select clrInput  [(ngModel)]=\"form.unit\" name=\"unit\" >\r\n            <option value=\"TB\">TB</option>\r\n            <option value=\"GB\">GB</option>\r\n            <option value=\"MB\">MB</option>\r\n            <option value=\"KB\">KB</option>\r\n          </select>\r\n        </clr-input-container>\r\n\r\n        <clr-select-container>\r\n          <label>{{'nfs.nfsProtocol' | translate}}</label>\r\n          <select clrSelect [(ngModel)]=\"form.nfsProtocol\" name=\"nfsProtocol\" ng-selected=\"v3\">\r\n            <option value=\"v3\">v3</option>\r\n            <option value=\"v4.1\">v4.1</option>\r\n          </select>\r\n        </clr-select-container>\r\n      </form>\r\n    </clr-wizard-page>\r\n    <clr-wizard-page [clrWizardPageNextDisabled]=\"!formPageTwo.valid\">\r\n      <ng-template clrPageTitle>{{'nfs.storageSetting' | translate}}</ng-template> <!-- mandatory -->\r\n      <ng-template clrPageNavTitle>{{'nfs.storageSetting' | translate}}</ng-template> <!-- optional -->\r\n      <form clrForm #formPageTwo=\"ngForm\">\r\n        <!--qos-->\r\n        <clr-toggle-wrapper >\r\n            <label>{{'nfs.qosPolicy' | translate}}</label>\r\n            <input type=\"checkbox\" clrToggle name=\"qosPolicy\" [(ngModel)]=\"form.qosPolicy\"/>\r\n          </clr-toggle-wrapper>\r\n\r\n          <clr-radio-container clrInline>\r\n            <label class=\"floatleft\">{{'nfs.controlPolicy' | translate}}</label>\r\n            <clr-radio-wrapper>\r\n              <input type=\"radio\" clrRadio name=\"controlPolicy\" required value=\"1\" [(ngModel)]=\"form.size\" />\r\n              <label>{{'nfs.ulc' | translate}}</label>\r\n            </clr-radio-wrapper>\r\n            <clr-radio-wrapper>\r\n              <input type=\"radio\" clrRadio name=\"controlPolicy\" required value=\"2\" [(ngModel)]=\"form.size\" />\r\n              <label>{{'nfs.llc' | translate}}</label>\r\n            </clr-radio-wrapper>\r\n          </clr-radio-container>\r\n\r\n        <clr-radio-container>\r\n          <label>{{'nfs.tfo' | translate}}</label>\r\n          <clr-radio-wrapper>\r\n            <input type=\"radio\" clrRadio name=\"tfo\" required value=\"1\" [(ngModel)]=\"form.unit\" />\r\n            <label>Brandwidth<=<input class=\"inputOneLine\" type=\"text\"> MB/s</label>\r\n          </clr-radio-wrapper>\r\n          <clr-radio-wrapper>\r\n            <input type=\"radio\" clrRadio name=\"tfo\" required value=\"2\" [(ngModel)]=\"form.unit\" />\r\n              <label>IOPS<=<input class=\"inputOneLine\" type=\"text\"> MB/s</label>\r\n          </clr-radio-wrapper>\r\n        </clr-radio-container>\r\n\r\n        <clr-toggle-wrapper>\r\n          <label> {{'nfs.thin' | translate}}</label>\r\n          <input type=\"checkbox\" name=\"thin\" clrToggle [(ngModel)]=\"form.thin\"/>\r\n        </clr-toggle-wrapper>\r\n        <!--重删-->\r\n        <clr-select-container>\r\n          <label>{{'nfs.dataDedu' | translate}}</label>\r\n          <select clrSelect [(ngModel)]=\"form.deduplication\" name=\"storageDevice\">\r\n            <option value=\"disable\">{{'nfs.disable' | translate}}</option>\r\n            <option value=\"enable\">{{'nfs.enable' | translate}}</option>\r\n          </select>\r\n        </clr-select-container>\r\n        <!--压缩-->\r\n        <clr-select-container>\r\n          <label>{{'nfs.dataCompre' | translate}}</label>\r\n          <select clrSelect [(ngModel)]=\"form.compression\" name=\"storageDevice\">\r\n            <option value=\"disable\">{{'nfs.disable' | translate}}</option>\r\n            <option value=\"enable\">{{'nfs.enable' | translate}}</option>\r\n          </select>\r\n        </clr-select-container>\r\n        <clr-toggle-wrapper >\r\n          <label>{{'nfs.capAuto' | translate}}</label>\r\n          <input type=\"checkbox\" clrToggle [(ngModel)]=\"form.capAuto\" />\r\n        </clr-toggle-wrapper>\r\n      </form>\r\n    </clr-wizard-page>\r\n  </clr-wizard>\r\n  <!--编辑弹框-->\r\n  <clr-modal [(clrModalOpen)]=\"modifyShow\">\r\n    <h3 class=\"modal-title\">{{'menu.modify' | translate}}</h3>\r\n    <div class=\"modal-body\">\r\n      <form *ngIf=\"rowSelected.length === 1\" clrForm #formPageOne=\"ngForm\">\r\n        <!--<clr-select-container>-->\r\n          <!--<label>{{'nfs.name' | translate}}</label>-->\r\n          <!--<select clrSelect name=\"name\"#name=\"ngModel\">-->\r\n            <!--<option value=\"one\">OneOneOneOne</option>-->\r\n            <!--<option value=\"two\">TwoTwoTwoTwoTwo</option>-->\r\n            <!--<option value=\"three\">ThreeThreeThreeThree</option>-->\r\n          <!--</select>-->\r\n        <!--</clr-select-container>-->\r\n        <!--名称-->\r\n        <clr-input-container>\r\n          <label>{{'nfs.name' | translate}}</label>\r\n          <input clrInput name=\"name\" value=\"{{currentData.name}}\"/>\r\n        </clr-input-container>\r\n\r\n        <clr-checkbox-container>\r\n          <label></label>\r\n          <clr-checkbox-wrapper>\r\n            <input type=\"checkbox\" clrCheckbox [(ngModel)]=\"currentData.sameName\" name=\"sameName\" />\r\n            <label>{{'nfs.fsName' | translate}}</label>\r\n          </clr-checkbox-wrapper>\r\n        </clr-checkbox-container>\r\n        <!--advance-->\r\n        <clr-checkbox-container>\r\n          <clr-checkbox-wrapper>\r\n            <input type=\"checkbox\" clrCheckbox value=\"1\" name=\"advance\" />\r\n            <label>{{'nfs.advance' | translate}}</label>\r\n          </clr-checkbox-wrapper>\r\n        </clr-checkbox-container>\r\n        <!--qos-->\r\n        <clr-toggle-wrapper class=\"merginTop\">\r\n          <label>{{'nfs.qosPolicy' | translate}}</label>\r\n          <input type=\"checkbox\" clrToggle name=\"qosPolicy\" />\r\n        </clr-toggle-wrapper>\r\n        <!--控制策略-->\r\n        <clr-radio-container clrInline>\r\n          <label>{{'nfs.controlPolicy' | translate}}</label>\r\n          <clr-radio-wrapper>\r\n            <input type=\"radio\" clrRadio name=\"control\" required value=\"up\"/>\r\n            <label>{{'nfs.ulc' | translate}}</label>\r\n          </clr-radio-wrapper>\r\n          <clr-radio-wrapper>\r\n            <input type=\"radio\" clrRadio name=\"control\" required value=\"low\"/>\r\n            <label>{{'nfs.llc' | translate}}</label>\r\n          </clr-radio-wrapper>\r\n        </clr-radio-container>\r\n\r\n        <clr-radio-container>\r\n          <label>{{'nfs.tfo' | translate}}</label>\r\n          <clr-radio-wrapper>\r\n            <input type=\"radio\" clrRadio name=\"tfo\" required value=\"1\"  />\r\n            <label>Brandwidth<=<input class=\"inputOneLine\" type=\"text\"> MB/s</label>\r\n          </clr-radio-wrapper>\r\n          <clr-radio-wrapper>\r\n            <input type=\"radio\" clrRadio name=\"tfo\" required value=\"2\"  />\r\n            <label>IOPS<=<input class=\"inputOneLine\" type=\"text\"> MB/s</label>\r\n          </clr-radio-wrapper>\r\n        </clr-radio-container>\r\n        <!--thin-->\r\n        <clr-toggle-wrapper>\r\n          <label> {{'nfs.thin' | translate}}</label>\r\n          <input type=\"checkbox\" clrToggle />\r\n        </clr-toggle-wrapper>\r\n\r\n        <!--重删-->\r\n        <clr-select-container>\r\n          <label>{{'nfs.dataDedu' | translate}}</label>\r\n          <select clrSelect [(ngModel)]=\"form.deduplication\" name=\"deduplication\">\r\n            <option value=\"disable\">{{'nfs.disable' | translate}}</option>\r\n            <option value=\"enable\">{{'nfs.enable' | translate}}</option>\r\n          </select>\r\n        </clr-select-container>\r\n        <!--压缩-->\r\n        <clr-select-container>\r\n          <label>{{'nfs.dataCompre' | translate}}</label>\r\n          <select clrSelect [(ngModel)]=\"form.compression\" name=\"compression\">\r\n            <option value=\"disable\">{{'nfs.disable' | translate}}</option>\r\n            <option value=\"enable\">{{'nfs.enable' | translate}}</option>\r\n          </select>\r\n        </clr-select-container>\r\n\r\n        <clr-toggle-wrapper class=\"merginTop\">\r\n          <label>{{'nfs.capAuto' | translate}}</label>\r\n          <input type=\"checkbox\" clrToggle />\r\n        </clr-toggle-wrapper>\r\n      </form>\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n      <button type=\"button\" class=\"btn btn-outline\" (click)=\"modifyShow = false\">{{'menu.cancel' | translate}}</button>\r\n      <button type=\"button\" class=\"btn btn-primary\" (click)=\"changeData()\">{{'menu.ok' | translate}}</button>\r\n    </div>\r\n  </clr-modal>\r\n  <!--扩容弹窗-->\r\n  <clr-modal [(clrModalOpen)]=\"expand\">\r\n    <h3 class=\"modal-title\">{{'menu.expand' | translate}}</h3>\r\n    <div class=\"modal-body\">\r\n      <!--名称-->\r\n      <clr-input-container>\r\n        <label>{{'nfs.expandSize' | translate}}</label>\r\n        <input clrInput name=\"size\"/>\r\n      </clr-input-container>\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n      <button type=\"button\" class=\"btn btn-outline\" (click)=\"expand = false\">{{'menu.cancel' | translate}}</button>\r\n      <button type=\"button\" class=\"btn btn-primary\" (click)=\"expandData()\">{{'menu.ok' | translate}}</button>\r\n    </div>\r\n  </clr-modal>\r\n  <!--缩容弹窗-->\r\n  <clr-modal [(clrModalOpen)]=\"reduceOpen\">\r\n    <h3 class=\"modal-title\">{{'menu.expand' | translate}}</h3>\r\n    <div class=\"modal-body\">\r\n      <!--名称-->\r\n      <clr-input-container>\r\n        <label>{{'nfs.oldCapacity' | translate}}</label>\r\n        <input clrInput name=\"oldCapacity\" [(ngModel)]=\"oldCapacity\" readonly=\"true\"/>\r\n      </clr-input-container>\r\n      <clr-input-container>\r\n        <label>{{'nfs.reduSize' | translate}}</label>\r\n        <input clrInput name=\"reduSize\"/>\r\n      </clr-input-container>\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n      <button type=\"button\" class=\"btn btn-outline\" (click)=\"expand = false\">{{'menu.cancel' | translate}}</button>\r\n      <button type=\"button\" class=\"btn btn-primary\" (click)=\"expandData()\">{{'menu.ok' | translate}}</button>\r\n    </div>\r\n  </clr-modal>\r\n  <!--挂载弹窗-->\r\n  <clr-modal [(clrModalOpen)]=\"mountShow\">\r\n    <h3 class=\"modal-title\">{{'nfs.mount.mount' | translate}}</h3>\r\n    <div class=\"modal-body\">\r\n      <form *ngIf=\"rowSelected.length === 1\" clrForm>\r\n\r\n        <clr-radio-container clrInline>\r\n          <label class=\"floatleft\">{{'nfs.mount.mountObj' | translate}}</label>\r\n          <clr-radio-wrapper>\r\n            <input type=\"radio\" clrRadio name=\"controlPolicy\" value=\"1\" [(ngModel)]=\"mountObj\" ng-checked=\"true\"/>\r\n            <label>{{'nfs.mount.host' | translate}}</label>\r\n          </clr-radio-wrapper>\r\n          <clr-radio-wrapper>\r\n            <input type=\"radio\" clrRadio name=\"controlPolicy\" value=\"2\"  [(ngModel)]=\"mountObj\" />\r\n            <label>{{'nfs.mount.cluster' | translate}}</label>\r\n          </clr-radio-wrapper>\r\n        </clr-radio-container>\r\n\r\n\r\n\r\n        <clr-combobox-container *ngIf=\"mountObj==='1'\">\r\n          <label>{{'nfs.mount.host' | translate}}</label>\r\n          <clr-combobox [(ngModel)]=\"select1\" name=\"hosts\" clrMulti=\"true\" required>\r\n            <ng-container *clrOptionSelected=\"let selected\">\r\n              <clr-icon shape=\"sun\" role=\"img\" aria-label=\"Sun is shining\"></clr-icon> {{selected?.hostName}}\r\n            </ng-container>\r\n            <clr-options>\r\n              <clr-option *clrOptionItems=\"let state of hostList; field:'hostName'\" [clrValue]=\"state\">\r\n                <clr-icon shape=\"sun\" role=\"img\" aria-label=\"Sun is shining\"></clr-icon>{{state.hostName}}\r\n              </clr-option>\r\n            </clr-options>\r\n          </clr-combobox>\r\n        </clr-combobox-container>\r\n\r\n        <clr-combobox-container *ngIf=\"mountObj==='2'\">\r\n          <label>{{'nfs.mount.cluster' | translate}}</label>\r\n          <clr-combobox [(ngModel)]=\"select2\" name=\"clusters\" clrMulti=\"true\" required>\r\n            <ng-container *clrOptionSelected=\"let selected\">\r\n              <clr-icon shape=\"sun\" role=\"img\" aria-label=\"Sun is shining\"></clr-icon> {{selected?.clusterName}}\r\n            </ng-container>\r\n            <clr-options>\r\n              <clr-option *clrOptionItems=\"let state of clusterList; field:'clusterName'\" [clrValue]=\"state\">\r\n                <clr-icon shape=\"sun\" role=\"img\" aria-label=\"Sun is shining\"></clr-icon>{{state.clusterName}}\r\n              </clr-option>\r\n            </clr-options>\r\n          </clr-combobox>\r\n        </clr-combobox-container>\r\n\r\n        <clr-select-container>\r\n          <label>{{'nfs.mount.mountType' | translate}}</label>\r\n          <select clrSelect [(ngModel)]=\"mountForm.mountType\" name=\"mountType\">\r\n            <option value=\"readOnly\">{{'nfs.mount.readOnly' | translate}}</option>\r\n            <option value=\"readWrite\">{{'nfs.mount.readWrite' | translate}}</option>\r\n          </select>\r\n        </clr-select-container>\r\n        <div class=\"modal-footer\">\r\n          <button type=\"button\" class=\"btn btn-outline\" (click)=\"mountShow = false\">{{'menu.cancel' | translate}}</button>\r\n          <button type=\"button\" class=\"btn btn-primary\" (click)=\"mountSubmit()\">{{'menu.ok' | translate}}</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </clr-modal>\r\n  <!--删除提示-->\r\n  <clr-modal [(clrModalOpen)]=\"delShow\" [clrModalSize]=\"'sm'\">\r\n    <h3 class=\"modal-title\">{{'nfs.del.title' | translate}}</h3>\r\n    <div class=\"modal-body\">\r\n      <p>{{'nfs.del.content' | translate}}</p>\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n      <button type=\"button\" class=\"btn btn-outline\" (click)=\"delShow=false\">{{'menu.cancel' | translate}}</button>\r\n      <button type=\"button\" class=\"btn btn-primary\" (click)=\"delNfs()\">{{'menu.ok' | translate}}</button>\r\n    </div>\r\n  </clr-modal>\r\n<!--卸载提示-->\r\n  <clr-modal [(clrModalOpen)]=\"unmountShow\" [clrModalSize]=\"'sm'\">\r\n    <h3 class=\"modal-title\">{{'nfs.unmount.title' | translate}}</h3>\r\n    <div class=\"modal-body\">\r\n      <p>{{'nfs.unmount.content' | translate}}</p>\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n      <button type=\"button\" class=\"btn btn-outline\" (click)=\"unmountShow=false\">{{'menu.cancel' | translate}}</button>\r\n      <button type=\"button\" class=\"btn btn-primary\" (click)=\"unmount()\">{{'menu.ok' | translate}}</button>\r\n    </div>\r\n  </clr-modal>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SharedModule } from '@shared/shared.module';\r\nimport { NfsRoutingModule } from './nfs-routing.module';\r\nimport { NfsComponent } from './nfs.component';\r\nimport { LogicportComponent } from './logicport/logicport.component';\r\nimport { ShareComponent } from './share/share.component';\r\nimport { FileSystemComponent } from './file-system/file-system.component';\r\nimport {FormsModule} from '@angular/forms';\r\n\r\n\r\n@NgModule({\r\n  declarations: [NfsComponent, LogicportComponent, ShareComponent, FileSystemComponent],\r\n  imports: [\r\n    FormsModule,\r\n    CommonModule,\r\n    SharedModule,\r\n    NfsRoutingModule\r\n  ]\r\n})\r\nexport class NfsModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class NfsService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getData() {\r\n    return this.http.get('http://localhost:8080/accessnfs/listnfs', );\r\n  }\r\n  getChartData(fsIds: string[] ) {\r\n    return this.http.get('http://localhost:8080/accessnfs/listnfsperformance', {params: {fsIds}});\r\n  }\r\n  addNfs(params= {}){\r\n    return this.http.post('http://localhost:8080/operatenfs/operatenfs', { params });\r\n  }\r\n\r\n  mountNfs(params= {}){\r\n    return this.http.post('http://localhost:8080/accessnfs/mountnfs', params);\r\n  }\r\n  delNfs(param: string){\r\n    return this.http.post('http://localhost:8080/accessnfs/delnfs', param);\r\n  }\r\n  getHostList(dataStoreName: string){\r\n    return this.http.get('http://localhost:8080/accessvmware/gethostsbydsname', {params: {dataStoreName}});\r\n  }\r\n  getClusterList(dataStoreName: string){\r\n    return this.http.get('http://localhost:8080/accessvmware/getclustersbydsname', {params: {dataStoreName}});\r\n  }\r\n}\r\nexport interface List {\r\n   name: string;    // 名称\r\n   status: string;  // 状态\r\n  capacity: number;  // 总容量 单位GB\r\n  freeSpace: number; // 空闲容量 单位GB\r\n  reserveCapacity: number; // 置备容量  capacity+uncommitted-freeSpace 单位GB\r\n   deviceId: string; // 存储设备ID\r\n   device: string; // 存储设备名称\r\n   logicPort: string; // 逻辑端口\r\n   logicPortId: string; // 逻辑端口 id\r\n   shareIp: string; // share ip\r\n   sharePath: string; // share path\r\n   share: string; // share 名称\r\n   shareId: string; // share id\r\n   fs: string; // fs\r\n   fsId: string; // fs id\r\n  ops: number; // OPS\r\n  bandwidth: number;   // 带宽 单位MB/s\r\n  readResponseTime: number;   // 读响应时间 单位ms\r\n  writeResponseTime: number; // 写响应时间 单位ms\r\n  objectid: string; //\r\n}\r\n// =================添加NFS参数 start=========\r\nexport class AddNfs{\r\n  storage_id: string;\r\n  pool_raw_id: number;\r\n  exportPath: string;\r\n  nfsName: string;\r\n  accessMode: string;\r\n  type: string;\r\n  filesystem_specs: FileSystem[];\r\n  capacity_autonegotiation: Autonegotiation;\r\n  tuning: Advance;\r\n  qos_policy: QosPolicy;\r\n  create_nfs_share_param: Share;\r\n  nfs_share_client_addition: ShareClient[];\r\n}\r\nexport class FileSystem{\r\n  capacity: number;\r\n  name: string;\r\n  count: number;\r\n}\r\nexport class Autonegotiation{\r\n  capacity_self_adjusting_mode: string;\r\n  capacity_recycle_mode: string;\r\n  auto_size_enable: boolean;\r\n  auto_grow_threshold_percent: number;\r\n  auto_shrink_threshold_percent: number;\r\n  max_auto_size: number;\r\n  min_auto_size: number;\r\n  auto_size_increment: number;\r\n}\r\nexport class Advance{\r\n  deduplication_enabled: boolean;\r\n  compression_enabled: boolean;\r\n  application_scenario: string;\r\n  block_size: number;\r\n  allocation_type: string;\r\n}\r\nexport class QosPolicy{\r\n  max_bandwidth: number;\r\n  max_iops: number;\r\n  min_bandwidth: number;\r\n  min_iops: number;\r\n  latency: number;\r\n}\r\nexport class Share{\r\n  name: string;\r\n  share_path: string;\r\n}\r\nexport class ShareClient{\r\n  name: string;\r\n  accessval: string;\r\n  sync: string;\r\n  all_squash: string;\r\n  root_squash: string;\r\n}\r\n\r\n// =================添加NFS参数 end =========\r\n\r\nexport class Mount{\r\n  dataStoreName: string;\r\n  hosts: string[];\r\n  clusters: string[];\r\n  mountType: string;\r\n}\r\n\r\nexport class Host{\r\n  hostId: string;\r\n  hostName: string;\r\n}\r\nexport class Cluster{\r\n  clusterId: string;\r\n  clusterName: string;\r\n}\r\n\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {ShareDetail, ShareService} from './share.service';\r\nimport {GlobalsService} from '../../../shared/globals.service';\r\n\r\n@Component({\r\n  selector: 'app-share',\r\n  templateUrl: './share.component.html',\r\n  styleUrls: ['./share.component.scss'],\r\n  providers: [ShareService, GlobalsService]\r\n})\r\nexport class ShareComponent implements OnInit {\r\n  shareDetail: ShareDetail;\r\n\r\n  constructor(private remoteSrv: ShareService, private gs: GlobalsService) { }\r\n\r\n  ngOnInit(): void {\r\n    const ctx = this.gs.getClientSdk().app.getContextObjects();\r\n    const objectId = '1234';\r\n    // objectId=ctx[0].id;\r\n    this.getShareDetail(objectId);\r\n  }\r\n  getShareDetail(objectId){\r\n    this.remoteSrv.getData(objectId)\r\n      .subscribe((result: any) => {\r\n       this.shareDetail = result.data;\r\n       console.log('shareDetail:');\r\n       console.log(this.shareDetail);\r\n      });\r\n  }\r\n}\r\n","<div *ngIf=\"shareDetail\">\r\n    <table class=\"table table-noborder\">\r\n    <tr>\r\n      <td class=\"left\">{{'nfs.share.name' | translate}}</td>\r\n      <td class=\"left\">{{shareDetail.name}}</td>\r\n      <td class=\"left\">{{'nfs.share.sharePath' | translate}}</td>\r\n      <td class=\"left\">{{shareDetail.share_path}}</td>\r\n    </tr>\r\n    <tr>\r\n      <td class=\"left\">{{'nfs.share.dtree' | translate}}</td>\r\n      <td class=\"left\">{{shareDetail.owning_dtree_name}}</td>\r\n\r\n      <td class=\"left\">{{'nfs.share.description' | translate}}</td>\r\n      <td class=\"left\">{{shareDetail.description}}</td>\r\n    </tr>\r\n  </table>\r\n  <h3>{{'nfs.share.clientInfo' | translate}}</h3>\r\n  <clr-datagrid>\r\n    <clr-dg-column>{{'nfs.share.nameAddr' | translate}}</clr-dg-column>\r\n    <clr-dg-column>{{'nfs.share.type' | translate}}</clr-dg-column>\r\n    <clr-dg-column>{{'nfs.share.permission' | translate}}</clr-dg-column>\r\n    <clr-dg-row *ngFor=\"let item of shareDetail.auth_client_list\" [clrDgItem]=\"item\">\r\n      <clr-dg-cell>{{item.name}}</clr-dg-cell>\r\n      <clr-dg-cell>{{item.type}}</clr-dg-cell>\r\n      <clr-dg-cell>{{item.accessval}}</clr-dg-cell>\r\n    </clr-dg-row>\r\n  </clr-datagrid>\r\n</div>\r\n<div *ngIf=\"!shareDetail\">\r\n  未查询到数据\r\n</div>\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class ShareService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getData(param) {\r\n    return this.http.get('http://localhost:8080/accessnfs/share/' + param);\r\n  }\r\n}\r\nexport class ShareDetail{\r\n  fs_name: string;\r\n  name: string;\r\n  share_path: string;\r\n  description: string;\r\n  owning_dtree_id: string;\r\n  owning_dtree_name: string;\r\n  device_name: string;\r\n  auth_client_list: AuthClient[];\r\n}\r\nexport class AuthClient{\r\n   accessval: string;\r\n   all_squash: string;\r\n   id: string;\r\n   name: string;\r\n   parent_id: string;\r\n   root_squash: string;\r\n   secure: string;\r\n   sync: string;\r\n   type: string;\r\n   vstore_id_in_storage: string;\r\n   vstore_name: string;\r\n}\r\n\r\n"]}