{"version":3,"sources":["webpack:///src/app/routes/rdm/rdm-routing.module.ts","webpack:///src/app/routes/rdm/rdm.component.ts","webpack:///src/app/routes/rdm/rdm.component.html","webpack:///src/app/routes/rdm/rdm.module.ts"],"names":["routes","path","component","RdmRoutingModule","forChild","imports","exports","RdmComponent","cdr","http","commonService","gs","popShow","configModel","name","size","unit","storage_id","pool_raw_id","storageType","quantity","storageDevices","storagePools","levelCheck","loadStorageDevice","ctx","getClientSdk","app","getContextObjects","console","log","get","subscribe","result","code","data","detectChanges","err","error","storageId","params","submit","selector","templateUrl","styleUrls","providers","RdmModule","declarations"],"mappings":"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","file":"rdm-rdm-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { RdmComponent } from './rdm.component';\r\n\r\nconst routes: Routes = [{ path: '', component: RdmComponent }];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class RdmRoutingModule { }\r\n","import {ChangeDetectorRef, Component, OnInit} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {CommonService} from '../common.service';\r\nimport {GlobalsService} from '../../shared/globals.service';\r\n\r\n@Component({\r\n  selector: 'app-rdm',\r\n  templateUrl: './rdm.component.html',\r\n  styleUrls: ['./rdm.component.scss'],\r\n  providers: [CommonService, GlobalsService]\r\n})\r\nexport class RdmComponent implements OnInit {\r\n\r\n\r\n  popShow = true;\r\n  configModel = {\r\n    name: '',\r\n    size: '',\r\n    unit: '1',\r\n    storage_id: '',\r\n    pool_raw_id: '',\r\n    storageType: '1',\r\n    quantity: '',\r\n  };\r\n  storageDevices = [];\r\n  storagePools = [];\r\n  levelCheck = 'level';\r\n  constructor(private cdr: ChangeDetectorRef,\r\n              private http: HttpClient,\r\n              private commonService: CommonService,\r\n              private gs: GlobalsService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loadStorageDevice();\r\n    const ctx = this.gs.getClientSdk().app.getContextObjects();\r\n    console.log(ctx);\r\n  }\r\n\r\n  submit(): void {\r\n\r\n  }\r\n\r\n  check() {}\r\n\r\n  loadStorageDevice(){\r\n    this.http.get('http://localhost:8080/dmestorage/storages', {}).subscribe((result: any) => {\r\n      console.log(result);\r\n      if (result.code === '0' || result.code === '200'){\r\n        this.storageDevices = result.data.data;\r\n        this.cdr.detectChanges(); // 此方法变化检测，异步处理数据都要添加此方法\r\n      }\r\n    }, err => {\r\n      console.error('ERROR', err);\r\n    });\r\n  }\r\n\r\n  loadStoragePool(storageId: string){\r\n    this.http.get('http://localhost:8080/dmestorage/storagepools', {params: {storageId}}).subscribe((result: any) => {\r\n      console.log(result);\r\n      if (result.code === '0' || result.code === '200'){\r\n        this.storagePools = result.data.data;\r\n        this.cdr.detectChanges(); // 此方法变化检测，异步处理数据都要添加此方法\r\n      }\r\n    }, err => {\r\n      console.error('ERROR', err);\r\n    });\r\n  }\r\n\r\n}\r\n","<form clrForm #formPageTwo=\"ngForm\">\r\n  <clr-input-container>\r\n    <label>Name</label>:\r\n    <input clrInput type=\"text\" [(ngModel)]=\"configModel.name\" name=\"name\" />\r\n  </clr-input-container>\r\n\r\n  <clr-checkbox-container>\r\n    <label>Size</label>：\r\n    <clr-checkbox-wrapper>\r\n      <label>\r\n        <input class=\"inputOneLine\" type=\"number\" [(ngModel)]=\"configModel.size\" name=\"size\" #number=\"ngModel\" />\r\n        <select [(ngModel)]=\"configModel.unit\" name=\"unit\" >\r\n          <option value=\"TB\">TB</option>\r\n          <option value=\"GB\">GB</option>\r\n          <option value=\"MB\">MB</option>\r\n          <option value=\"KB\">KB</option>\r\n        </select>\r\n        X\r\n        <input class=\"inputOneLine\" type=\"number\" [(ngModel)]=\"configModel.quantity\" name=\"quantity\" #number=\"ngModel\" />\r\n      </label>\r\n    </clr-checkbox-wrapper>\r\n  </clr-checkbox-container>\r\n\r\n  <!-- 选择 服务等级 存储选-->\r\n  <clr-radio-container clrInline>\r\n    <label>Storage Type</label>\r\n    <clr-radio-wrapper>\r\n      <input type=\"radio\" clrRadio (click)=\"levelCheck='level'\" name=\"storageType\" required value=\"1\" [(ngModel)]=\"configModel.storageType\" />\r\n      <label>Service Level</label>\r\n    </clr-radio-wrapper>\r\n    <clr-radio-wrapper>\r\n      <input type=\"radio\" clrRadio  (click)=\"levelCheck='storage'\" name=\"storageType\" required value=\"2\" [(ngModel)]=\"configModel.storageType\" />\r\n      <label>Storage/Storage Pool</label>\r\n    </clr-radio-wrapper>\r\n    <!--<clr-control-helper>Helper text</clr-control-helper>\r\n    <clr-control-error>This field is required!</clr-control-error>-->\r\n  </clr-radio-container>\r\n\r\n  <!-- 服务等级-->\r\n  <div *ngIf=\"levelCheck==='level'\" [hidden]=\"levelCheck !=='level'\">\r\n    <table class=\"table table-vertical table-noborder table-compact blueBg\">\r\n      <tbody>\r\n      <tr>\r\n        <th hidden></th>\r\n        <th>\r\n          storageName:LargeScaleERRHAHA\r\n        </th>\r\n      </tr>\r\n      <tr>\r\n        <th hidden></th>\r\n        <td>{{'vmfs.capacityUsage' | translate}}</td>\r\n        <td>{{'vmfs.qos' | translate}}</td>\r\n        <td>{{'vmfs.protection' | translate}}</td>\r\n      </tr>\r\n      <tr>\r\n        <th hidden></th>\r\n        <th><clr-progress-bar clrValue=\"{{(100- 10)/100 * 100}}\" clrSuccess clrLabeled></clr-progress-bar></th>\r\n        <th>IOPS > 2000/TB</th>\r\n        <th>IOPS > 2000/TB</th>\r\n      </tr>\r\n      <tr>\r\n        <th hidden></th>\r\n        <th>136.700 TB/300.00TbB</th>\r\n        <th>Latency < 1 ms</th>\r\n      </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n\r\n  <!-- 选择存储 -->\r\n  <div *ngIf=\"levelCheck==='storage'\"  [hidden]=\"levelCheck !=='storage'\">\r\n    <clr-select-container>\r\n      <label>Storage Device</label>:\r\n      <select clrSelect  [(ngModel)]=\"configModel.storage_id\" name=\"storage_id\" (ngModelChange)=\"loadStoragePool(configModel.storage_id);\">\r\n        <option value=\"\"></option>\r\n        <option *ngFor=\"let item of storageDevices\" value=\"{{item.id}}\">{{item.name}}</option>\r\n      </select>\r\n    </clr-select-container>\r\n    <clr-select-container>\r\n      <label>Storage Pool</label>:\r\n      <select clrSelect [(ngModel)]=\"configModel.pool_raw_id\" name=\"pool_raw_id\" >\r\n        <option value=\"\"></option>\r\n        <option *ngFor=\"let item of storagePools\" value=\"{{item.pool_raw_id}}\">{{item.name}}</option>\r\n      </select>\r\n    </clr-select-container>\r\n\r\n    <!--b.QoS 设置 -->\r\n    <clr-input-container>\r\n      <label>Qos Policy</label>:\r\n    </clr-input-container>\r\n    <!-- 控制策略 -->\r\n    <clr-radio-container clrInline>\r\n      <label>Control Policy</label>:\r\n      <clr-radio-wrapper>\r\n        <input type=\"radio\" clrRadio name=\"control_policy\" required value=\"0\" [(ngModel)]=\"configModel.control_policy\" />\r\n        <label>Upper limit control</label>\r\n      </clr-radio-wrapper>\r\n      <clr-radio-wrapper>\r\n        <input type=\"radio\" clrRadio name=\"control_policy\" required value=\"1\" [(ngModel)]=\"configModel.control_policy\" />\r\n        <label>Lower limit control</label>\r\n      </clr-radio-wrapper>\r\n    </clr-radio-container>\r\n    <!-- 带宽 下限-->\r\n    <clr-checkbox-container>\r\n      <label>Traffic Control</label>\r\n      <clr-checkbox-wrapper>\r\n        <input type=\"checkbox\" clrCheckbox/>\r\n        <label>\r\n          Bandwidth >=\r\n          <input class=\"inputOneLine\" name=\"maxbandwidth\" [(ngModel)]=\"configModel.minBandwidth\"/>MB/s\r\n        </label>\r\n      </clr-checkbox-wrapper>\r\n    </clr-checkbox-container>\r\n    <!-- IOPS 下限-->\r\n    <clr-checkbox-container>\r\n      <label></label>\r\n      <clr-checkbox-wrapper>\r\n        <input type=\"checkbox\" clrCheckbox/>\r\n        <label>IOPS >=\r\n          <input class=\"inputOneLine\" name=\"maxiops\" [(ngModel)]=\"configModel.minIOPS\"/>\r\n        </label>\r\n      </clr-checkbox-wrapper>\r\n    </clr-checkbox-container>\r\n    <!-- Latency 上限-->\r\n    <clr-checkbox-container>\r\n      <label></label>\r\n      <clr-checkbox-wrapper>\r\n        <input type=\"checkbox\" clrCheckbox/>\r\n        <label>Latency <=\r\n          <input class=\"inputOneLine\" name=\"maxiops\" [(ngModel)]=\"configModel.maxLatency\"/>us\r\n        </label>\r\n      </clr-checkbox-wrapper>\r\n    </clr-checkbox-container>\r\n\r\n    <!--c.QoS 资源调优 -->\r\n    <clr-input-container>\r\n      <label>Resource Tuning</label>\r\n    </clr-input-container>\r\n    <clr-select-container>\r\n      <label>Provisioning Type</label>\r\n      <select clrSelect [(ngModel)]=\"configModel.alloctype\" name=\"alloctype\" >\r\n        <option value=\"thin\">thin</option>\r\n        <option value=\"thick\">thick</option>\r\n      </select>\r\n    </clr-select-container>\r\n    <!--应用类型 -->\r\n    <clr-select-container>\r\n      <label>Application Type</label>\r\n      <select clrSelect [(ngModel)]=\"configModel.applicationType\" name=\"applicationType\" >\r\n        <option value=\"1\">Vmware_VDI</option>\r\n      </select>\r\n    </clr-select-container>\r\n  </div>\r\n\r\n</form>\r\n\r\n<button type=\"button\" class=\"btn btn-outline\" (click)=\"popShow=false\">Cancel</button>\r\n<button type=\"button\" class=\"btn btn-primary\" (click)=\"submit()\">Ok</button>\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport {SharedModule} from '../../shared';\r\n\r\nimport { RdmRoutingModule } from './rdm-routing.module';\r\nimport { RdmComponent } from './rdm.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [RdmComponent],\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule,\r\n    RdmRoutingModule\r\n  ]\r\n})\r\nexport class RdmModule { }\r\n"]}