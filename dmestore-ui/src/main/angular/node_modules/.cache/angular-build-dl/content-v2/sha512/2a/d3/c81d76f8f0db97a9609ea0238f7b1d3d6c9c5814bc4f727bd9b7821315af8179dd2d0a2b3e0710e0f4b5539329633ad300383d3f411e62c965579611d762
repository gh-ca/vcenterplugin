{"version":3,"sources":["./src/app/routes/rdm/rdm-routing.module.ts","./src/app/routes/rdm/rdm.component.ts","./src/app/routes/rdm/rdm.component.html","./src/app/routes/rdm/rdm.module.ts"],"names":[],"mappings":"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","file":"rdm-rdm-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { RdmComponent } from './rdm.component';\r\n\r\nconst routes: Routes = [{ path: '', component: RdmComponent }];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class RdmRoutingModule { }\r\n","import {ChangeDetectorRef, Component, OnInit} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {CommonService} from '../common.service';\r\nimport {GlobalsService} from '../../shared/globals.service';\r\n\r\n@Component({\r\n  selector: 'app-rdm',\r\n  templateUrl: './rdm.component.html',\r\n  styleUrls: ['./rdm.component.scss'],\r\n  providers: [CommonService, GlobalsService]\r\n})\r\nexport class RdmComponent implements OnInit {\r\n\r\n\r\n  popShow = true;\r\n  configModel = {\r\n    name: '',\r\n    size: '',\r\n    unit: '1',\r\n    storage_id: '',\r\n    pool_raw_id: '',\r\n    storageType: '1',\r\n    quantity: '',\r\n  };\r\n  storageDevices = [];\r\n  storagePools = [];\r\n  levelCheck = 'level';\r\n  constructor(private cdr: ChangeDetectorRef,\r\n              private http: HttpClient,\r\n              private commonService: CommonService,\r\n              private gs: GlobalsService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loadStorageDevice();\r\n    const ctx = this.gs.getClientSdk().app.getContextObjects();\r\n    console.log(ctx);\r\n  }\r\n\r\n  submit(): void {\r\n\r\n  }\r\n\r\n  check() {}\r\n\r\n  loadStorageDevice(){\r\n    this.http.get('http://localhost:8080/dmestorage/storages', {}).subscribe((result: any) => {\r\n      console.log(result);\r\n      if (result.code === '0' || result.code === '200'){\r\n        this.storageDevices = result.data.data;\r\n        this.cdr.detectChanges(); // 此方法变化检测，异步处理数据都要添加此方法\r\n      }\r\n    }, err => {\r\n      console.error('ERROR', err);\r\n    });\r\n  }\r\n\r\n  loadStoragePool(storageId: string){\r\n    this.http.get('http://localhost:8080/dmestorage/storagepools', {params: {storageId}}).subscribe((result: any) => {\r\n      console.log(result);\r\n      if (result.code === '0' || result.code === '200'){\r\n        this.storagePools = result.data.data;\r\n        this.cdr.detectChanges(); // 此方法变化检测，异步处理数据都要添加此方法\r\n      }\r\n    }, err => {\r\n      console.error('ERROR', err);\r\n    });\r\n  }\r\n\r\n}\r\n","<form clrForm #formPageTwo=\"ngForm\">\r\n  <clr-input-container>\r\n    <label>Name</label>:\r\n    <input clrInput type=\"text\" [(ngModel)]=\"configModel.name\" name=\"name\" />\r\n  </clr-input-container>\r\n\r\n  <clr-checkbox-container>\r\n    <label>Size</label>：\r\n    <clr-checkbox-wrapper>\r\n      <label>\r\n        <input class=\"inputOneLine\" type=\"number\" [(ngModel)]=\"configModel.size\" name=\"size\" #number=\"ngModel\" />\r\n        <select [(ngModel)]=\"configModel.unit\" name=\"unit\" >\r\n          <option value=\"TB\">TB</option>\r\n          <option value=\"GB\">GB</option>\r\n          <option value=\"MB\">MB</option>\r\n          <option value=\"KB\">KB</option>\r\n        </select>\r\n        X\r\n        <input class=\"inputOneLine\" type=\"number\" [(ngModel)]=\"configModel.quantity\" name=\"quantity\" #number=\"ngModel\" />\r\n      </label>\r\n    </clr-checkbox-wrapper>\r\n  </clr-checkbox-container>\r\n\r\n  <!-- 选择 服务等级 存储选-->\r\n  <clr-radio-container clrInline>\r\n    <label>Storage Type</label>\r\n    <clr-radio-wrapper>\r\n      <input type=\"radio\" clrRadio (click)=\"levelCheck='level'\" name=\"storageType\" required value=\"1\" [(ngModel)]=\"configModel.storageType\" />\r\n      <label>Service Level</label>\r\n    </clr-radio-wrapper>\r\n    <clr-radio-wrapper>\r\n      <input type=\"radio\" clrRadio  (click)=\"levelCheck='storage'\" name=\"storageType\" required value=\"2\" [(ngModel)]=\"configModel.storageType\" />\r\n      <label>Storage/Storage Pool</label>\r\n    </clr-radio-wrapper>\r\n    <!--<clr-control-helper>Helper text</clr-control-helper>\r\n    <clr-control-error>This field is required!</clr-control-error>-->\r\n  </clr-radio-container>\r\n\r\n  <!-- 服务等级-->\r\n  <div *ngIf=\"levelCheck==='level'\" [hidden]=\"levelCheck !=='level'\">\r\n    <table class=\"table table-vertical table-noborder table-compact blueBg\">\r\n      <tbody>\r\n      <tr>\r\n        <th hidden></th>\r\n        <th>\r\n          storageName:LargeScaleERRHAHA\r\n        </th>\r\n      </tr>\r\n      <tr>\r\n        <th hidden></th>\r\n        <td>{{'vmfs.capacityUsage' | translate}}</td>\r\n        <td>{{'vmfs.qos' | translate}}</td>\r\n        <td>{{'vmfs.protection' | translate}}</td>\r\n      </tr>\r\n      <tr>\r\n        <th hidden></th>\r\n        <th><clr-progress-bar clrValue=\"{{(100- 10)/100 * 100}}\" clrSuccess clrLabeled></clr-progress-bar></th>\r\n        <th>IOPS > 2000/TB</th>\r\n        <th>IOPS > 2000/TB</th>\r\n      </tr>\r\n      <tr>\r\n        <th hidden></th>\r\n        <th>136.700 TB/300.00TbB</th>\r\n        <th>Latency < 1 ms</th>\r\n      </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n\r\n  <!-- 选择存储 -->\r\n  <div *ngIf=\"levelCheck==='storage'\"  [hidden]=\"levelCheck !=='storage'\">\r\n    <clr-select-container>\r\n      <label>Storage Device</label>:\r\n      <select clrSelect  [(ngModel)]=\"configModel.storage_id\" name=\"storage_id\" (ngModelChange)=\"loadStoragePool(configModel.storage_id);\">\r\n        <option value=\"\"></option>\r\n        <option *ngFor=\"let item of storageDevices\" value=\"{{item.id}}\">{{item.name}}</option>\r\n      </select>\r\n    </clr-select-container>\r\n    <clr-select-container>\r\n      <label>Storage Pool</label>:\r\n      <select clrSelect [(ngModel)]=\"configModel.pool_raw_id\" name=\"pool_raw_id\" >\r\n        <option value=\"\"></option>\r\n        <option *ngFor=\"let item of storagePools\" value=\"{{item.pool_raw_id}}\">{{item.name}}</option>\r\n      </select>\r\n    </clr-select-container>\r\n\r\n    <!--b.QoS 设置 -->\r\n    <clr-input-container>\r\n      <label>Qos Policy</label>:\r\n    </clr-input-container>\r\n    <!-- 控制策略 -->\r\n    <clr-radio-container clrInline>\r\n      <label>Control Policy</label>:\r\n      <clr-radio-wrapper>\r\n        <input type=\"radio\" clrRadio name=\"control_policy\" required value=\"0\" [(ngModel)]=\"configModel.control_policy\" />\r\n        <label>Upper limit control</label>\r\n      </clr-radio-wrapper>\r\n      <clr-radio-wrapper>\r\n        <input type=\"radio\" clrRadio name=\"control_policy\" required value=\"1\" [(ngModel)]=\"configModel.control_policy\" />\r\n        <label>Lower limit control</label>\r\n      </clr-radio-wrapper>\r\n    </clr-radio-container>\r\n    <!-- 带宽 下限-->\r\n    <clr-checkbox-container>\r\n      <label>Traffic Control</label>\r\n      <clr-checkbox-wrapper>\r\n        <input type=\"checkbox\" clrCheckbox/>\r\n        <label>\r\n          Bandwidth >=\r\n          <input class=\"inputOneLine\" name=\"maxbandwidth\" [(ngModel)]=\"configModel.minBandwidth\"/>MB/s\r\n        </label>\r\n      </clr-checkbox-wrapper>\r\n    </clr-checkbox-container>\r\n    <!-- IOPS 下限-->\r\n    <clr-checkbox-container>\r\n      <label></label>\r\n      <clr-checkbox-wrapper>\r\n        <input type=\"checkbox\" clrCheckbox/>\r\n        <label>IOPS >=\r\n          <input class=\"inputOneLine\" name=\"maxiops\" [(ngModel)]=\"configModel.minIOPS\"/>\r\n        </label>\r\n      </clr-checkbox-wrapper>\r\n    </clr-checkbox-container>\r\n    <!-- Latency 上限-->\r\n    <clr-checkbox-container>\r\n      <label></label>\r\n      <clr-checkbox-wrapper>\r\n        <input type=\"checkbox\" clrCheckbox/>\r\n        <label>Latency <=\r\n          <input class=\"inputOneLine\" name=\"maxiops\" [(ngModel)]=\"configModel.maxLatency\"/>us\r\n        </label>\r\n      </clr-checkbox-wrapper>\r\n    </clr-checkbox-container>\r\n\r\n    <!--c.QoS 资源调优 -->\r\n    <clr-input-container>\r\n      <label>Resource Tuning</label>\r\n    </clr-input-container>\r\n    <clr-select-container>\r\n      <label>Provisioning Type</label>\r\n      <select clrSelect [(ngModel)]=\"configModel.alloctype\" name=\"alloctype\" >\r\n        <option value=\"thin\">thin</option>\r\n        <option value=\"thick\">thick</option>\r\n      </select>\r\n    </clr-select-container>\r\n    <!--应用类型 -->\r\n    <clr-select-container>\r\n      <label>Application Type</label>\r\n      <select clrSelect [(ngModel)]=\"configModel.applicationType\" name=\"applicationType\" >\r\n        <option value=\"1\">Vmware_VDI</option>\r\n      </select>\r\n    </clr-select-container>\r\n  </div>\r\n\r\n</form>\r\n\r\n<button type=\"button\" class=\"btn btn-outline\" (click)=\"popShow=false\">Cancel</button>\r\n<button type=\"button\" class=\"btn btn-primary\" (click)=\"submit()\">Ok</button>\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport {SharedModule} from '../../shared';\r\n\r\nimport { RdmRoutingModule } from './rdm-routing.module';\r\nimport { RdmComponent } from './rdm.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [RdmComponent],\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule,\r\n    RdmRoutingModule\r\n  ]\r\n})\r\nexport class RdmModule { }\r\n"],"sourceRoot":"webpack:///"}