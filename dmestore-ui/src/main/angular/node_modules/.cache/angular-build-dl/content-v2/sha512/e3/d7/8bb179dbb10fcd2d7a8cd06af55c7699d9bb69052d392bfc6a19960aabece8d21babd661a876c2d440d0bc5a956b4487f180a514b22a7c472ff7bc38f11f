{"version":3,"sources":["webpack:///src/app/routes/iscsi/iscsi-routing.module.ts","webpack:///src/app/routes/iscsi/iscsi.component.ts","webpack:///src/app/routes/iscsi/iscsi.component.html","webpack:///src/app/routes/iscsi/iscsi.module.ts"],"names":["routes","path","component","IscsiRoutingModule","forChild","imports","exports","IscsiComponent","cdr","http","commonService","gs","popShow","configModel","hostId","hostIp","storageDeviceId","storageDevices","portSelected","portLoading","portList","portTotal","ctx","getClientSdk","app","getContextObjects","console","log","loadStorageDevice","get","subscribe","result","code","data","detectChanges","err","error","loadPorts","submit","selector","templateUrl","styleUrls","providers","IscsiModule","declarations"],"mappings":"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","file":"iscsi-iscsi-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IscsiComponent } from './iscsi.component';\r\n\r\nconst routes: Routes = [{ path: '', component: IscsiComponent }];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class IscsiRoutingModule { }\r\n","import {ChangeDetectorRef, Component, OnInit} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {CommonService} from '../common.service';\r\nimport {GlobalsService} from '../../shared/globals.service';\r\n\r\n@Component({\r\n  selector: 'app-iscsi',\r\n  templateUrl: './iscsi.component.html',\r\n  styleUrls: ['./iscsi.component.scss'],\r\n  providers: [CommonService, GlobalsService]\r\n})\r\nexport class IscsiComponent implements OnInit {\r\n\r\n\r\n  popShow = true;\r\n  configModel = {\r\n    hostId: '',\r\n    hostIp: '',\r\n    storageDeviceId: ''\r\n  };\r\n  // 存储下拉框数据\r\n  storageDevices = [];\r\n\r\n  portSelected = [];\r\n  portLoading = false;\r\n  portList = [];\r\n  portTotal = 0;\r\n  constructor(private cdr: ChangeDetectorRef,\r\n              private http: HttpClient,\r\n              private commonService: CommonService,\r\n              private gs: GlobalsService) { }\r\n\r\n  ngOnInit(): void {\r\n    const ctx = this.gs.getClientSdk().app.getContextObjects();\r\n    console.log(ctx);\r\n    this.loadStorageDevice();\r\n  }\r\n\r\n  loadStorageDevice(){\r\n    this.http.get('http://localhost:8080/dmestorage/storages', {}).subscribe((result: any) => {\r\n      console.log(result);\r\n      if (result.code === '0' || result.code === '200'){\r\n        this.storageDevices = result.data.data;\r\n        this.cdr.detectChanges(); // 此方法变化检测，异步处理数据都要添加此方法\r\n      }\r\n    }, err => {\r\n      console.error('ERROR', err);\r\n    });\r\n  }\r\n\r\n  loadPorts(){\r\n    this.portLoading = true;\r\n  }\r\n\r\n  submit(){\r\n\r\n  }\r\n}\r\n","\r\n<form clrForm>\r\n  <clr-input-container>\r\n    <input hidden clrInput type=\"text\" [(ngModel)]=\"configModel.hostId\" name=\"hostId\" />\r\n    <label>Host vKernel IP</label>:\r\n    <input clrInput type=\"text\" [(ngModel)]=\"configModel.hostIp\" name=\"hostIp\" />\r\n  </clr-input-container>\r\n  <!--存储设备 -->\r\n  <clr-select-container>\r\n    <label>Storage Device</label>:\r\n    <select clrSelect (change)=\"loadPorts();\" (ngModelOptions)=\"storageDevices\"  [(ngModel)]=\"configModel.storageDeviceId\" name=\"storageDeviceId\" >\r\n      <option *ngFor=\"let item of storageDevices\" value=\"{{item.id}}\">{{item.name}}</option>\r\n    </select>\r\n  </clr-select-container>\r\n</form>\r\n<clr-datagrid [(clrDgSelected)]=\"portSelected\"   [clrDgLoading]=\"portLoading\">\r\n\r\n  <clr-dg-column [clrDgField]=\"'location'\">Location</clr-dg-column>\r\n  <clr-dg-column [clrDgField]=\"'status'\">status</clr-dg-column>\r\n  <clr-dg-column [clrDgField]=\"'ipv4Address'\">IPv4 Address</clr-dg-column>\r\n  <clr-dg-column [clrDgField]=\"'ipv6Address'\">IPv6 Address</clr-dg-column>\r\n  <clr-dg-column [clrDgField]=\"'workingRate'\">Working Rate(Mbps)</clr-dg-column>\r\n  <clr-dg-column [clrDgField]=\"'iops'\">IOPS</clr-dg-column>\r\n  <clr-dg-column [clrDgField]=\"'latency'\">Latency(ms)</clr-dg-column>\r\n  <clr-dg-column [clrDgField]=\"'bandwidth'\">BandWidth(MB/s)</clr-dg-column>\r\n  <clr-dg-column [clrDgField]=\"'usage'\">Usage(%)</clr-dg-column>\r\n\r\n\r\n  <clr-dg-column [clrDgField]=\"'connectStatus'\">Connect Status</clr-dg-column>\r\n\r\n  <clr-dg-row *ngFor=\"let item of portList\" [clrDgItem]=\"item\">\r\n    <clr-dg-cell>{{item.location}}</clr-dg-cell>\r\n    <clr-dg-cell>{{item.status}}</clr-dg-cell>\r\n    <clr-dg-cell>{{item.ipv4Address}}</clr-dg-cell>\r\n    <clr-dg-cell>{{item.ipv6Address}}</clr-dg-cell>\r\n    <clr-dg-cell>{{item.workingRate}}</clr-dg-cell>\r\n    <clr-dg-cell>{{item.iops}}</clr-dg-cell>\r\n    <clr-dg-cell>{{item.bandwidth}}</clr-dg-cell>\r\n    <clr-dg-cell>{{item.bandwidth}}</clr-dg-cell>\r\n    <clr-dg-cell>{{item.usage}}</clr-dg-cell>\r\n    <clr-dg-cell>{{item.connectStatus}}</clr-dg-cell>\r\n  </clr-dg-row>\r\n\r\n  <clr-dg-footer>\r\n    <clr-dg-pagination #pagination [clrDgPageSize]=\"5\" [clrDgTotalItems]=\"portTotal\">\r\n      <clr-dg-page-size [clrPageSizeOptions]=\"[5,10,50,100]\">per page</clr-dg-page-size>\r\n      {{pagination.firstItem + 1}} - {{pagination.lastItem + 1}}\r\n      of {{pagination.totalItems}}\r\n    </clr-dg-pagination>\r\n  </clr-dg-footer>\r\n\r\n</clr-datagrid>\r\n\r\n<button type=\"button\" class=\"btn btn-outline\" (click)=\"popShow=false\">Cancel</button>\r\n<button type=\"button\" class=\"btn btn-primary\" (click)=\"submit()\">Ok</button>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { IscsiRoutingModule } from './iscsi-routing.module';\r\nimport { IscsiComponent } from './iscsi.component';\r\nimport {SharedModule} from '../../shared';\r\n\r\n\r\n@NgModule({\r\n  declarations: [IscsiComponent],\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule,\r\n    IscsiRoutingModule\r\n  ]\r\n})\r\nexport class IscsiModule { }\r\n"]}