{"version":3,"sources":["webpack:///node_modules/echarts-liquidfill/index.js","webpack:///node_modules/echarts-liquidfill/src/liquidFill.js","webpack:///node_modules/echarts-liquidfill/src/liquidFillLayout.js","webpack:///node_modules/echarts-liquidfill/src/liquidFillSeries.js","webpack:///node_modules/echarts-liquidfill/src/liquidFillView.js","webpack:///src/app/routes/servicelevel/servicelevel-routing.module.ts","webpack:///src/app/routes/servicelevel/servicelevel.component.ts","webpack:///src/app/routes/servicelevel/servicelevel.component.html","webpack:///src/app/routes/servicelevel/servicelevel.module.ts"],"names":["module","exports","echarts","registerVisual","util","curry","graphic","extendShape","type","shape","waveLength","radius","radiusY","cx","cy","waterLevel","amplitude","phase","inverse","buildPath","ctx","curves","Math","max","ceil","PI","left","moveTo","waveRight","c","stage","pos","getWaterPositions","bezierCurveTo","lineTo","closePath","x","completeDimensions","extendSeriesModel","visualColorAccessPath","optionUpdated","option","gridSize","floor","getInitialData","ecModel","dimensions","data","list","List","initData","defaultOption","color","center","period","direction","waveAnimation","animationEasing","animationEasingUpdate","animationDuration","animationDurationUpdate","outline","show","borderDistance","itemStyle","borderColor","borderWidth","shadowBlur","shadowColor","backgroundStyle","opacity","label","insideColor","fontSize","fontWeight","align","baseline","position","emphasis","numberUtil","number","symbolUtil","parsePercent","LiquidLayout","getShallow","model","path","extendChartView","render","seriesModel","api","group","removeAll","getData","itemModel","getItemModel","get","width","getWidth","height","getHeight","size","min","outlineDistance","outlineBorderWidth","showOutline","outterRadius","innerRadius","paddingRadius","isFillContainer","symbol","getOutline","style","lineWidth","add","top","wavePath","getBackground","oldData","_data","waves","diff","idx","wave","getWave","initProps","z2","setWaveAnimation","setItemGraphicEl","push","update","newIdx","oldIdx","waveElement","getItemGraphicEl","newWave","shapeAttrs","i","length","attr","hasOwnProperty","styleAttrs","updateProps","useStyle","setClipPath","clipPath","remove","execute","getText","getPath","r","isForClipping","indexOf","makePath","slice","bouding","getBoundingRect","w","h","BoundingRect","y","createSymbol","Circle","outlinePath","fill","setStyle","getModel","getItemStyle","strokePath","fillPath","stroke","Group","isInverse","oldWave","radiusX","itemStyleModel","value","normalStyle","seriesColor","id","_waterLevel","hoverStyle","setHoverStyle","clip","maxSpeed","defaultSpeed","cnt","count","speed","phaseOffset","console","error","animate","when","during","dirty","start","labelModel","formatLabel","formatted","getFormattedLabel","defaultVal","defaultLabel","getName","name","isNaN","toFixed","textOption","text","textAlign","textVerticalAlign","silent","outsideTextRect","Rect","setText","insideTextRect","insColor","textFill","boundingCircle","CompoundPath","paths","dispose","routes","component","ServicelevelRoutingModule","forChild","imports","ServicelevelComponent","ngZone","cdr","http","commonService","popShow","volumeCapacityChart","storagePoolCapacityChart","volumeMaxResponseTimeChart","volumeDensityChart","volumeThroughputChart","volumeBandwidthChart","storagePoolDensityChart","storagePoolRadioCheck","volumeRadioCheck","searchName","sortItem","sortItems","volumeCapacityOption","legend","tooltip","trigger","title","xAxis","yAxis","series","smooth","selectedModel","description","protocol","total_capacity","used_capacity","free_capacity","capabilities","resource_type","compression","deduplication","iopriority","enabled","policy","smarttier","qos","qos_param","latency","latencyU","minBandWidth","minIOPS","maxBandWidth","maxIOPS","serviceLevels","serviceLevelsRes","storeagePoolIsloading","storagePoolTotal","storagePoolList","storagePoolQuery","q","sort","order","page","per_page","storagePoolReslut","items","status","diskType","storageDevice","totalCapacity","usedCapacity","capacityUsage","freeCapacity","iops","bandwidth","total_count","volumeIsloading","volumeTotal","volumeList","volumeQuery","volumeReslut","provisioningType","capacityUsed","applicationTypeIsloading","applicationTypeTotal","applicationTypeList","applicationTypeQuery","applicationTypeReslut","applicationType","refresh","state","params","post","subscribe","response","log","err","detectChanges","setTimeout","c1","document","querySelector","c2","c3","c4","c5","initPerformanceChart","initCapacityChart","replace","JSON","parse","usedRate","search","filter","item","sortItemsChange","o","compare","prop","obj","property","Object","recursivePropertyies","undefined","obj1","obj2","val1","val2","selector","templateUrl","styleUrls","providers","Servicelevel","ApplicationType","ServicelevelModule","declarations"],"mappings":"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","file":"servicelevel-servicelevel-module-es5.js","sourcesContent":["module.exports = require('./src/liquidFill');\n","var echarts = require('echarts/lib/echarts');\n\nrequire('./liquidFillSeries');\nrequire('./liquidFillView');\n\n\necharts.registerVisual(\n    echarts.util.curry(\n        require('echarts/lib/visual/dataColor'), 'liquidFill'\n    )\n);\n","var echarts = require('echarts/lib/echarts');\n\nmodule.exports = echarts.graphic.extendShape({\n    type: 'ec-liquid-fill',\n\n    shape: {\n        waveLength: 0,\n        radius: 0,\n        radiusY: 0,\n        cx: 0,\n        cy: 0,\n        waterLevel: 0,\n        amplitude: 0,\n        phase: 0,\n        inverse: false\n    },\n\n    buildPath: function (ctx, shape) {\n        if (shape.radiusY == null) {\n            shape.radiusY = shape.radius;\n        }\n\n        /**\n         * We define a sine wave having 4 waves, and make sure at least 8 curves\n         * is drawn. Otherwise, it may cause blank area for some waves when\n         * wave length is large enough.\n         */\n        var curves = Math.max(\n            Math.ceil(2 * shape.radius / shape.waveLength * 4) * 2,\n            8\n        );\n\n        // map phase to [-Math.PI * 2, 0]\n        while (shape.phase < -Math.PI * 2) {\n            shape.phase += Math.PI * 2;\n        }\n        while (shape.phase > 0) {\n            shape.phase -= Math.PI * 2;\n        }\n        var phase = shape.phase / Math.PI / 2 * shape.waveLength;\n\n        var left = shape.cx - shape.radius + phase - shape.radius * 2;\n\n        /**\n         * top-left corner as start point\n         *\n         * draws this point\n         *  |\n         * \\|/\n         *  ~~~~~~~~\n         *  |      |\n         *  +------+\n         */\n        ctx.moveTo(left, shape.waterLevel);\n\n        /**\n         * top wave\n         *\n         * ~~~~~~~~ <- draws this sine wave\n         * |      |\n         * +------+\n         */\n        var waveRight = 0;\n        for (var c = 0; c < curves; ++c) {\n            var stage = c % 4;\n            var pos = getWaterPositions(c * shape.waveLength / 4, stage,\n                shape.waveLength, shape.amplitude);\n            ctx.bezierCurveTo(pos[0][0] + left, -pos[0][1] + shape.waterLevel,\n                pos[1][0] + left, -pos[1][1] + shape.waterLevel,\n                pos[2][0] + left, -pos[2][1] + shape.waterLevel);\n\n            if (c === curves - 1) {\n                waveRight = pos[2][0];\n            }\n        }\n\n        if (shape.inverse) {\n            /**\n             * top-right corner\n             *                  2. draws this line\n             *                          |\n             *                       +------+\n             * 3. draws this line -> |      | <- 1. draws this line\n             *                       ~~~~~~~~\n             */\n            ctx.lineTo(waveRight + left, shape.cy - shape.radiusY);\n            ctx.lineTo(left, shape.cy - shape.radiusY);\n            ctx.lineTo(left, shape.waterLevel);\n        }\n        else {\n            /**\n             * top-right corner\n             *\n             *                       ~~~~~~~~\n             * 3. draws this line -> |      | <- 1. draws this line\n             *                       +------+\n             *                          ^\n             *                          |\n             *                  2. draws this line\n             */\n            ctx.lineTo(waveRight + left, shape.cy + shape.radiusY);\n            ctx.lineTo(left, shape.cy + shape.radiusY);\n            ctx.lineTo(left, shape.waterLevel);\n        }\n\n        ctx.closePath();\n    }\n});\n\n\n\n/**\n * Using Bezier curves to fit sine wave.\n * There is 4 control points for each curve of wave,\n * which is at 1/4 wave length of the sine wave.\n *\n * The control points for a wave from (a) to (d) are a-b-c-d:\n *          c *----* d\n *     b *\n *       |\n * ... a * ..................\n *\n * whose positions are a: (0, 0), b: (0.5, 0.5), c: (1, 1), d: (PI / 2, 1)\n *\n * @param {number} x          x position of the left-most point (a)\n * @param {number} stage      0-3, stating which part of the wave it is\n * @param {number} waveLength wave length of the sine wave\n * @param {number} amplitude  wave amplitude\n */\nfunction getWaterPositions(x, stage, waveLength, amplitude) {\n    if (stage === 0) {\n        return [\n            [x + 1 / 2 * waveLength / Math.PI / 2, amplitude / 2],\n            [x + 1 / 2 * waveLength / Math.PI,     amplitude],\n            [x + waveLength / 4,                   amplitude]\n        ];\n    }\n    else if (stage === 1) {\n        return [\n            [x + 1 / 2 * waveLength / Math.PI / 2 * (Math.PI - 2),\n            amplitude],\n            [x + 1 / 2 * waveLength / Math.PI / 2 * (Math.PI - 1),\n            amplitude / 2],\n            [x + waveLength / 4,                   0]\n        ]\n    }\n    else if (stage === 2) {\n        return [\n            [x + 1 / 2 * waveLength / Math.PI / 2, -amplitude / 2],\n            [x + 1 / 2 * waveLength / Math.PI,     -amplitude],\n            [x + waveLength / 4,                   -amplitude]\n        ]\n    }\n    else {\n        return [\n            [x + 1 / 2 * waveLength / Math.PI / 2 * (Math.PI - 2),\n            -amplitude],\n            [x + 1 / 2 * waveLength / Math.PI / 2 * (Math.PI - 1),\n            -amplitude / 2],\n            [x + waveLength / 4,                   0]\n        ]\n    }\n}\n","var completeDimensions = require('echarts/lib/data/helper/completeDimensions');\nvar echarts = require('echarts/lib/echarts');\n\necharts.extendSeriesModel({\n\n    type: 'series.liquidFill',\n\n    visualColorAccessPath: 'textStyle.normal.color',\n\n    optionUpdated: function () {\n        var option = this.option;\n        option.gridSize = Math.max(Math.floor(option.gridSize), 4);\n    },\n\n    getInitialData: function (option, ecModel) {\n        var dimensions = completeDimensions(['value'], option.data);\n        var list = new echarts.List(dimensions, this);\n        list.initData(option.data);\n        return list;\n    },\n\n    defaultOption: {\n        color: ['#294D99', '#156ACF', '#1598ED', '#45BDFF'],\n        center: ['50%', '50%'],\n        radius: '50%',\n        amplitude: '8%',\n        waveLength: '80%',\n        phase: 'auto',\n        period: 'auto',\n        direction: 'right',\n        shape: 'circle',\n\n        waveAnimation: true,\n        animationEasing: 'linear',\n        animationEasingUpdate: 'linear',\n        animationDuration: 2000,\n        animationDurationUpdate: 1000,\n\n        outline: {\n            show: true,\n            borderDistance: 8,\n            itemStyle: {\n                color: 'none',\n                borderColor: '#294D99',\n                borderWidth: 8,\n                shadowBlur: 20,\n                shadowColor: 'rgba(0, 0, 0, 0.25)'\n            }\n        },\n\n        backgroundStyle: {\n            color: '#E3F7FF'\n        },\n\n        itemStyle: {\n            opacity: 0.95,\n            shadowBlur: 50,\n            shadowColor: 'rgba(0, 0, 0, 0.4)'\n        },\n\n        label: {\n            show: true,\n            color: '#294D99',\n            insideColor: '#fff',\n            fontSize: 50,\n            fontWeight: 'bold',\n\n            align: 'center',\n            baseline: 'middle',\n            position: 'inside'\n        },\n\n        emphasis: {\n            itemStyle: {\n                opacity: 0.8\n            }\n        }\n    }\n});\n","var echarts = require('echarts/lib/echarts');\nvar numberUtil = echarts.number;\nvar symbolUtil = require('echarts/lib/util/symbol');\nvar parsePercent = numberUtil.parsePercent;\n\nvar LiquidLayout = require('./liquidFillLayout');\n\nfunction getShallow(model, path) {\n    return model && model.getShallow(path);\n}\n\necharts.extendChartView({\n\n    type: 'liquidFill',\n\n    render: function (seriesModel, ecModel, api) {\n        var group = this.group;\n        group.removeAll();\n\n        var data = seriesModel.getData();\n\n        var itemModel = data.getItemModel(0);\n\n        var center = itemModel.get('center');\n        var radius = itemModel.get('radius');\n\n        var width = api.getWidth();\n        var height = api.getHeight();\n        var size = Math.min(width, height);\n        // itemStyle\n        var outlineDistance = 0;\n        var outlineBorderWidth = 0;\n        var showOutline = seriesModel.get('outline.show');\n\n        if (showOutline) {\n            outlineDistance = seriesModel.get('outline.borderDistance');\n            outlineBorderWidth = parsePercent(\n                seriesModel.get('outline.itemStyle.borderWidth'), size\n            );\n        }\n\n        var cx = parsePercent(center[0], width);\n        var cy = parsePercent(center[1], height);\n\n        var outterRadius;\n        var innerRadius;\n        var paddingRadius;\n\n        var isFillContainer = false;\n\n        var symbol = seriesModel.get('shape');\n        if (symbol === 'container') {\n            // a shape that fully fills the container\n            isFillContainer = true;\n\n            outterRadius = [\n                width / 2,\n                height / 2\n            ];\n            innerRadius = [\n                outterRadius[0] - outlineBorderWidth / 2,\n                outterRadius[1] - outlineBorderWidth / 2\n            ];\n            paddingRadius = [\n                parsePercent(outlineDistance, width),\n                parsePercent(outlineDistance, height)\n            ];\n\n            radius = [\n                Math.max(innerRadius[0] - paddingRadius[0], 0),\n                Math.max(innerRadius[1] - paddingRadius[1], 0)\n            ];\n        }\n        else {\n            outterRadius = parsePercent(radius, size) / 2;\n            innerRadius = outterRadius - outlineBorderWidth / 2;\n            paddingRadius = parsePercent(outlineDistance, size);\n\n            radius = Math.max(innerRadius - paddingRadius, 0);\n        }\n\n        if (showOutline) {\n            var outline = getOutline();\n            outline.style.lineWidth = outlineBorderWidth;\n            group.add(getOutline());\n        }\n\n        var left = isFillContainer ? 0 : cx - radius;\n        var top = isFillContainer ? 0 : cy - radius;\n\n        var wavePath = null;\n\n        group.add(getBackground());\n\n        // each data item for a wave\n        var oldData = this._data;\n        var waves = [];\n        data.diff(oldData)\n            .add(function (idx) {\n                var wave = getWave(idx, false);\n\n                var waterLevel = wave.shape.waterLevel;\n                wave.shape.waterLevel = isFillContainer ? height / 2 : radius;\n                echarts.graphic.initProps(wave, {\n                    shape: {\n                        waterLevel: waterLevel\n                    }\n                }, seriesModel);\n\n                wave.z2 = 2;\n                setWaveAnimation(idx, wave, null);\n\n                group.add(wave);\n                data.setItemGraphicEl(idx, wave);\n                waves.push(wave);\n            })\n            .update(function (newIdx, oldIdx) {\n                var waveElement = oldData.getItemGraphicEl(oldIdx);\n\n                // new wave is used to calculate position, but not added\n                var newWave = getWave(newIdx, false, waveElement);\n\n                // changes with animation\n                var shape = {};\n                var shapeAttrs = ['amplitude', 'cx', 'cy', 'phase', 'radius', 'radiusY', 'waterLevel', 'waveLength'];\n                for (var i = 0; i < shapeAttrs.length; ++i) {\n                    var attr = shapeAttrs[i];\n                    if (newWave.shape.hasOwnProperty(attr)) {\n                        shape[attr] = newWave.shape[attr];\n                    }\n                }\n\n                var style = {};\n                var styleAttrs = ['fill', 'opacity', 'shadowBlur', 'shadowColor'];\n                for (var i = 0; i < styleAttrs.length; ++i) {\n                    var attr = styleAttrs[i];\n                    if (newWave.style.hasOwnProperty(attr)) {\n                        style[attr] = newWave.style[attr];\n                    }\n                }\n\n                if (isFillContainer) {\n                    shape.radiusY = height / 2;\n                }\n\n                // changes with animation\n                echarts.graphic.updateProps(waveElement, {\n                    shape: shape\n                }, seriesModel);\n\n                waveElement.useStyle(style);\n\n                // instant changes\n                waveElement.position = newWave.position;\n                waveElement.setClipPath(newWave.clipPath);\n                waveElement.shape.inverse = newWave.inverse;\n\n                setWaveAnimation(newIdx, waveElement, waveElement);\n                group.add(waveElement);\n                data.setItemGraphicEl(newIdx, waveElement);\n                waves.push(waveElement);\n            })\n            .remove(function (idx) {\n                var wave = oldData.getItemGraphicEl(idx);\n                group.remove(wave);\n            })\n            .execute();\n\n        if (itemModel.get('label.show')) {\n            group.add(getText(waves));\n        }\n\n        this._data = data;\n\n        /**\n         * Get path for outline, background and clipping\n         *\n         * @param {number} r outter radius of shape\n         * @param {boolean|undefined} isForClipping if the shape is used\n         *                                          for clipping\n         */\n        function getPath(r, isForClipping) {\n            if (symbol) {\n                // customed symbol path\n                if (symbol.indexOf('path://') === 0) {\n                    var path = echarts.graphic.makePath(symbol.slice(7), {});\n                    var bouding = path.getBoundingRect();\n                    var w = bouding.width;\n                    var h = bouding.height;\n                    if (w > h) {\n                        h = r * 2 / w * h;\n                        w = r * 2;\n                    }\n                    else {\n                        w = r * 2 / h * w;\n                        h = r * 2;\n                    }\n\n                    var left = isForClipping ? 0 : cx - w / 2;\n                    var top = isForClipping ? 0 : cy - h / 2;\n                    path = echarts.graphic.makePath(\n                        symbol.slice(7),\n                        {},\n                        new echarts.graphic.BoundingRect(left, top, w, h)\n                    );\n                    if (isForClipping) {\n                        path.position = [-w / 2, -h / 2];\n                    }\n                    return path;\n                }\n                else if (isFillContainer) {\n                    // fully fill the container\n                    var x = isForClipping ? -r[0] : cx - r[0];\n                    var y = isForClipping ? -r[1] : cy - r[1];\n                    return symbolUtil.createSymbol(\n                        'rect', x, y, r[0] * 2, r[1] * 2\n                    );\n                }\n                else {\n                    var x = isForClipping ? -r : cx - r;\n                    var y = isForClipping ? -r : cy - r;\n                    if (symbol === 'pin') {\n                        y += r;\n                    }\n                    else if (symbol === 'arrow') {\n                        y -= r;\n                    }\n                    return symbolUtil.createSymbol(symbol, x, y, r * 2, r * 2);\n                }\n            }\n\n            return new echarts.graphic.Circle({\n                shape: {\n                    cx: isForClipping ? 0 : cx,\n                    cy: isForClipping ? 0 : cy,\n                    r: r\n                }\n            });\n        }\n        /**\n         * Create outline\n         */\n        function getOutline() {\n            var outlinePath = getPath(outterRadius);\n            outlinePath.style.fill = null;\n\n            outlinePath.setStyle(seriesModel.getModel('outline.itemStyle')\n                .getItemStyle());\n\n            return outlinePath;\n        }\n\n        /**\n         * Create background\n         */\n        function getBackground() {\n            // Seperate stroke and fill, so we can use stroke to cover the alias of clipping.\n            var strokePath = getPath(radius);\n            strokePath.setStyle(seriesModel.getModel('backgroundStyle')\n                .getItemStyle());\n            strokePath.style.fill = null;\n\n            // Stroke is front of wave\n            strokePath.z2 = 5;\n\n            var fillPath = getPath(radius);\n            fillPath.setStyle(seriesModel.getModel('backgroundStyle')\n                .getItemStyle());\n            fillPath.style.stroke = null;\n\n            var group = new echarts.graphic.Group();\n            group.add(strokePath);\n            group.add(fillPath);\n\n            return group;\n        }\n\n        /**\n         * wave shape\n         */\n        function getWave(idx, isInverse, oldWave) {\n            var radiusX = isFillContainer ? radius[0] : radius;\n            var radiusY = isFillContainer ? height / 2 : radius;\n\n            var itemModel = data.getItemModel(idx);\n            var itemStyleModel = itemModel.getModel('itemStyle');\n            var phase = itemModel.get('phase');\n            var amplitude = parsePercent(itemModel.get('amplitude'),\n                radiusY * 2);\n            var waveLength = parsePercent(itemModel.get('waveLength'),\n                radiusX * 2);\n\n            var value = data.get('value', idx);\n            var waterLevel = radiusY - value * radiusY * 2;\n            phase = oldWave ? oldWave.shape.phase\n                : (phase === 'auto' ? idx * Math.PI / 4 : phase);\n            var normalStyle = itemStyleModel.getItemStyle();\n            if (!normalStyle.fill) {\n                var seriesColor = seriesModel.get('color');\n                var id = idx % seriesColor.length;\n                normalStyle.fill = seriesColor[id];\n            }\n\n            var x = radiusX * 2;\n            var wave = new LiquidLayout({\n                shape: {\n                    waveLength: waveLength,\n                    radius: radiusX,\n                    radiusY: radiusY,\n                    cx: x,\n                    cy: 0,\n                    waterLevel: waterLevel,\n                    amplitude: amplitude,\n                    phase: phase,\n                    inverse: isInverse\n                },\n                style: normalStyle,\n                position: [cx, cy]\n            });\n            wave.shape._waterLevel = waterLevel;\n\n            var hoverStyle = itemModel.getModel('emphasis.itemStyle')\n                .getItemStyle();\n            hoverStyle.lineWidth = 0;\n            echarts.graphic.setHoverStyle(wave, hoverStyle);\n\n            // clip out the part outside the circle\n            var clip = getPath(radius, true);\n            // set fill for clipPath, otherwise it will not trigger hover event\n            clip.setStyle({\n                fill: 'white'\n            });\n            wave.setClipPath(clip);\n\n            return wave;\n        }\n\n        function setWaveAnimation(idx, wave, oldWave) {\n            var itemModel = data.getItemModel(idx);\n\n            var maxSpeed = itemModel.get('period');\n            var direction = itemModel.get('direction');\n\n            var value = data.get('value', idx);\n\n            var phase = itemModel.get('phase');\n            phase = oldWave ? oldWave.shape.phase\n                : (phase === 'auto' ? idx * Math.PI / 4 : phase);\n\n            var defaultSpeed = function (maxSpeed) {\n                var cnt = data.count();\n                return cnt === 0 ? maxSpeed : maxSpeed *\n                    (0.2 + (cnt - idx) / cnt * 0.8);\n            };\n            var speed = 0;\n            if (maxSpeed === 'auto') {\n                speed = defaultSpeed(5000);\n            }\n            else {\n                speed = typeof maxSpeed === 'function'\n                    ? maxSpeed(value, idx) : maxSpeed;\n            }\n\n            // phase for moving left/right\n            var phaseOffset = 0;\n            if (direction === 'right' || direction == null) {\n                phaseOffset = Math.PI;\n            }\n            else if (direction === 'left') {\n                phaseOffset = -Math.PI;\n            }\n            else if (direction === 'none') {\n                phaseOffset = 0;\n            }\n            else {\n                console.error('Illegal direction value for liquid fill.');\n            }\n\n            // wave animation of moving left/right\n            if (direction !== 'none' && itemModel.get('waveAnimation')) {\n                wave\n                    .animate('shape', true)\n                    .when(0, {\n                        phase: phase\n                    })\n                    .when(speed / 2, {\n                        phase: phaseOffset + phase\n                    })\n                    .when(speed, {\n                        phase: phaseOffset * 2 + phase\n                    })\n                    .during(function () {\n                        if (wavePath) {\n                            wavePath.dirty(true);\n                        }\n                    })\n                    .start();\n            }\n        }\n\n        /**\n         * text on wave\n         */\n        function getText(waves) {\n            var labelModel = itemModel.getModel('label');\n\n            function formatLabel() {\n                var formatted = seriesModel.getFormattedLabel(0, 'normal');\n                var defaultVal = (data.get('value', 0) * 100);\n                var defaultLabel = data.getName(0) || seriesModel.name;\n                if (!isNaN(defaultVal)) {\n                    defaultLabel = defaultVal.toFixed(0) + '%';\n                }\n                return formatted == null ? defaultLabel : formatted;\n            }\n\n            var textOption = {\n                z2: 10,\n                shape: {\n                    x: left,\n                    y: top,\n                    width: (isFillContainer ? radius[0] : radius) * 2,\n                    height: (isFillContainer ? radius[1] : radius) * 2\n                },\n                style: {\n                    fill: 'transparent',\n                    text: formatLabel(),\n                    textAlign: labelModel.get('align'),\n                    textVerticalAlign: labelModel.get('baseline')\n                },\n                silent: true\n            };\n\n            var outsideTextRect = new echarts.graphic.Rect(textOption);\n            var color = labelModel.get('color');\n            echarts.graphic.setText(outsideTextRect.style, labelModel, color);\n\n            var insideTextRect = new echarts.graphic.Rect(textOption);\n            var insColor = labelModel.get('insideColor');\n            echarts.graphic.setText(insideTextRect.style, labelModel, insColor);\n            insideTextRect.style.textFill = insColor;\n\n            var group = new echarts.graphic.Group();\n            group.add(outsideTextRect);\n            group.add(insideTextRect);\n\n            // clip out waves for insideText\n            var boundingCircle = getPath(radius, true);\n\n            wavePath = new echarts.graphic.CompoundPath({\n                shape: {\n                    paths: waves\n                },\n                position: [cx, cy]\n            });\n\n            wavePath.setClipPath(boundingCircle);\n            insideTextRect.setClipPath(wavePath);\n\n            return group;\n        }\n    },\n\n    dispose: function () {\n        // dispose nothing here\n    }\n});\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { ServicelevelComponent } from './servicelevel.component';\r\n\r\nconst routes: Routes = [{ path: '', component: ServicelevelComponent }];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ServicelevelRoutingModule { }\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  AfterViewInit,\r\n  ChangeDetectorRef,\r\n  OnDestroy,\r\n  NgZone\r\n} from '@angular/core';\r\n\r\nimport {ClrDatagridStateInterface} from '@clr/angular';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport { CommonService } from '../common.service';\r\n/* import * as echarts from 'Echarts'; */\r\nimport 'echarts-liquidfill';\r\n\r\n@Component({\r\n  selector: 'app-servicelevel',\r\n  templateUrl: './servicelevel.component.html',\r\n  styleUrls: ['./servicelevel.component.scss'],\r\n  providers: [ CommonService ]\r\n})\r\nexport class ServicelevelComponent implements OnInit, AfterViewInit, OnDestroy {\r\n\r\n\r\n  // 详情页面弹出控制\r\n  popShow = false;\r\n  // 容量曲线图\r\n  volumeCapacityChart = null;\r\n  storagePoolCapacityChart = null;\r\n  // 性能曲线图\r\n  volumeMaxResponseTimeChart = null;\r\n  volumeDensityChart = null;\r\n  volumeThroughputChart = null;\r\n  volumeBandwidthChart = null;\r\n  storagePoolDensityChart = null;\r\n\r\n  // 详情列表按钮控制\r\n  storagePoolRadioCheck = 'basic';\r\n  volumeRadioCheck = 'basic';\r\n\r\n  // 服务等级列表搜索\r\n  searchName = '';\r\n  // 服务等级列表排序\r\n  sortItem = {\r\n    id: '',\r\n    value: ''\r\n  };\r\n  sortItems = [\r\n    {\r\n      id: 'name',\r\n      value: 'name'\r\n    },\r\n    {\r\n      id: 'total_capacity',\r\n      value: 'total_capacity'\r\n    },\r\n    {\r\n      id: 'latency',\r\n      value: 'latency'\r\n    },\r\n    {\r\n      id: 'maxIOPS',\r\n      value: 'maxIOPS'\r\n    },\r\n    {\r\n      id: 'minIOPS',\r\n      value: 'minIOPS'\r\n    },\r\n    {\r\n      id: 'maxBandWidth',\r\n      value: 'maxBandWidth'\r\n    },\r\n    {\r\n      id: 'minBandWidth',\r\n      value: 'minBandWidth'\r\n    }\r\n  ];\r\n\r\n  volumeCapacityOption = {\r\n    legend: {\r\n      data: ['Allocated(GB)', 'Total(GB)'],\r\n      left: 'right',\r\n    },\r\n    tooltip: {\r\n      trigger: 'axis'\r\n    },\r\n    title: {\r\n      left: 'left',\r\n      text: 'Volume Capacity'\r\n      // subtext:subTitle,\r\n    },\r\n    xAxis: {\r\n      type: 'category',\r\n      data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\r\n    },\r\n    yAxis: {\r\n      type: 'value'\r\n    },\r\n    series: [{\r\n      name: 'Allocated(GB)',\r\n      data: [820, 932, 901, 934, 1290, 1330, 1320],\r\n      type: 'line',\r\n      smooth: true\r\n    }, {\r\n      name: 'Total(GB)',\r\n      data: [25, 932, 44, 934, 566, 1589, 558],\r\n      type: 'line',\r\n      smooth: true\r\n    }]\r\n  };\r\n\r\n  // 选中的服务等级\r\n  selectedModel: Servicelevel =\r\n  {\r\n        id: '1',\r\n        name: '服务等级_CCC2',\r\n        description: 'description',\r\n        type: 'BLOCK', // FILE BLOCK\r\n        protocol: 'iSCSI', // FC, iSCSI\r\n        total_capacity: 1000,\r\n        used_capacity: 600,\r\n        free_capacity: 400,\r\n        capabilities: {\r\n            resource_type: 'thin', // default_type、thin、thick\r\n            compression: 'default_type', // default_type, enabled, disabled,\r\n            deduplication: 'enabled', // default_type, enabled, disabled,\r\n            iopriority: {\r\n                enabled: true,\r\n                policy: 1, // IO优先级枚举值, 取值范围：1：低；2：中；3：高,\r\n            },\r\n            smarttier: {\r\n                enabled: true,\r\n                policy: 1, // 数据迁移等级，取值范围：0：不迁移, 1：自动迁移, 2：向低性能层迁移, 3：向高性能层迁移\r\n            },\r\n            qos: {\r\n                enabled: true,\r\n                qos_param: {\r\n                  latency: 25,\r\n                  latencyU: 'ms',\r\n                  minBandWidth: 2000,\r\n                  minIOPS: 5000,\r\n                  maxBandWidth: 10000,\r\n                  maxIOPS: 20000,\r\n                }\r\n            }\r\n        }\r\n  };\r\n\r\n  // 服务等级列表\r\n  serviceLevels = [];\r\n  // 服务等级列表 服务器返回数据\r\n  serviceLevelsRes = [];\r\n\r\n\r\n  // ===============storage pool==============\r\n  // 表格loading标志\r\n  storeagePoolIsloading = false;\r\n  // 数据总数\r\n  storagePoolTotal = 0;\r\n  // 数据列表\r\n  storagePoolList: StoragePool[] = [];\r\n  // 选中列表\r\n  storagePoolSelected: StoragePool[];\r\n  // 查询数据参数\r\n  storagePoolQuery = { // 查询数据\r\n      q: 'name',\r\n      sort: 'hostSetting',\r\n      order: 'desc',\r\n      page: 0,\r\n      per_page: 5\r\n  };\r\n  // 查询数据结果,测试用\r\n  storagePoolReslut = {\r\n    items: [{\r\n        id: '123',\r\n        name: 'storeage',\r\n        status: 'Online',\r\n        diskType: 'SSD',\r\n        storageDevice: 'dertV8_160',\r\n\r\n        totalCapacity: 1000,\r\n        usedCapacity: 600,\r\n        capacityUsage: 60,\r\n        freeCapacity: 400,\r\n\r\n        latency: 52,\r\n        iops: 4000,\r\n        bandwidth: 10000\r\n      }],\r\n    total_count: 1\r\n  };\r\n  // ===============storage pool end==============\r\n\r\n  // ===============volume==============\r\n  // 表格loading标志\r\n  volumeIsloading = false;\r\n  // 数据总数\r\n  volumeTotal = 0;\r\n  // 数据列表\r\n  volumeList: Volume[] = [];\r\n  // 选中列表\r\n  volumeSelected: Volume[];\r\n  // 查询数据参数\r\n  volumeQuery = { // 查询数据\r\n    q: 'name',\r\n    sort: 'hostSetting',\r\n    order: 'desc',\r\n    page: 0,\r\n    per_page: 5\r\n  };\r\n  // 查询数据结果,测试用\r\n  volumeReslut = {\r\n    items: [{\r\n      id: '123',\r\n      name: 'volume-001',\r\n      status: 'Normal',\r\n      totalCapacity: 1000,\r\n      provisioningType: 'thin',\r\n      capacityUsed: 500,\r\n\r\n      latency: 52,\r\n      iops: 4000,\r\n      bandwidth: 10000\r\n    }],\r\n    total_count: 1\r\n  };\r\n  // ===============volume end==============\r\n\r\n  // ===============applicationType==============\r\n  // 表格loading标志\r\n  applicationTypeIsloading = false;\r\n  // 数据总数\r\n  applicationTypeTotal = 0;\r\n  // 数据列表\r\n  applicationTypeList: ApplicationType[] = [];\r\n  // 选中列表\r\n  applicationTypeSelected: ApplicationType[];\r\n  // 查询数据参数\r\n  applicationTypeQuery = { // 查询数据\r\n    q: 'name',\r\n    sort: 'hostSetting',\r\n    order: 'desc',\r\n    page: 0,\r\n    per_page: 5\r\n  };\r\n  // 查询数据结果,测试用\r\n  applicationTypeReslut = {\r\n    items: [{\r\n      id: '123',\r\n      storageDevice: 'applicationType-001',\r\n      applicationType: 'SSP'\r\n    }],\r\n    total_count: 1\r\n  };\r\n  // ===============applicationType end==============\r\n\r\n  constructor(private ngZone: NgZone,\r\n              private cdr: ChangeDetectorRef,\r\n              private http: HttpClient,\r\n              private commonService: CommonService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // if (this.volumeCapacityChart) {\r\n    //   this.volumeCapacityChart.dispose();\r\n    // }\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    // this.ngZone.runOutsideAngular(() => this.initChart());\r\n    this.refresh();\r\n  }\r\n\r\n  // ===============storage pool==============\r\n  storagePoolRefresh(state: ClrDatagridStateInterface){\r\n    this.storeagePoolIsloading = true;\r\n    const params = this.commonService.refresh(state, this.storagePoolQuery);\r\n    // this.http.get('https://api.github.com/search/repositories', this.practiceParams).subscribe((result: any) => {\r\n    //       console.log(result)\r\n    //       this.list = result.items;\r\n    //       this.total = result.total_count;\r\n    //       this.isLoading = false;\r\n    //       this.cdr.detectChanges(); // 此方法变化检测，异步处理数据都要添加此方法\r\n    // });\r\n    this.http.post('http://localhost:8080/datastorestatistichistrory/vmfsvolume', this.storagePoolQuery).subscribe((response: any) => {\r\n      console.log(response);\r\n    }, err => {\r\n      console.error('ERROR', err);\r\n    });\r\n    this.storagePoolList = this.storagePoolReslut.items;\r\n    this.storagePoolTotal = this.storagePoolReslut.total_count;\r\n    this.storeagePoolIsloading = false;\r\n    this.cdr.detectChanges(); // 此方法变化检测，异步处理数据都要添加此方法\r\n  }\r\n  // ===============storage pool end==============\r\n\r\n  // ===============volume pool==============\r\n  volumeRefresh(state: ClrDatagridStateInterface){\r\n    this.volumeIsloading = true;\r\n    const params = this.commonService.refresh(state, this.volumeQuery);\r\n    // this.http.get('https://api.github.com/search/repositories', this.practiceParams).subscribe((result: any) => {\r\n    //       console.log(result)\r\n    //       this.list = result.items;\r\n    //       this.total = result.total_count;\r\n    //       this.isLoading = false;\r\n    //       this.cdr.detectChanges(); // 此方法变化检测，异步处理数据都要添加此方法\r\n    // });\r\n    this.volumeList = this.volumeReslut.items;\r\n    this.volumeTotal = this.volumeReslut.total_count;\r\n    this.volumeIsloading = false;\r\n    this.cdr.detectChanges(); // 此方法变化检测，异步处理数据都要添加此方法\r\n  }\r\n  // ===============volume pool end==============\r\n\r\n  // ===============applicationType pool==============\r\n  applicationTypeRefresh(state: ClrDatagridStateInterface){\r\n    this.applicationTypeIsloading = true;\r\n    const params = this.commonService.refresh(state, this.applicationTypeQuery);\r\n    // this.http.get('https://api.github.com/search/repositories', this.practiceParams).subscribe((result: any) => {\r\n    //       console.log(result)\r\n    //       this.list = result.items;\r\n    //       this.total = result.total_count;\r\n    //       this.isLoading = false;\r\n    //       this.cdr.detectChanges(); // 此方法变化检测，异步处理数据都要添加此方法\r\n    // });\r\n    this.applicationTypeList = this.applicationTypeReslut.items;\r\n    this.applicationTypeTotal = this.applicationTypeReslut.total_count;\r\n    this.applicationTypeIsloading = false;\r\n    this.cdr.detectChanges(); // 此方法变化检测，异步处理数据都要添加此方法\r\n  }\r\n  // ===============applicationType pool end==============\r\n\r\n  initPerformanceChart(){\r\n    setTimeout(() => {\r\n      const c1 = document.querySelector('#volumeMaxResponseTimeChart');\r\n      const c2 = document.querySelector('#volumeDensityChart');\r\n      const c3 = document.querySelector('#volumeThroughputChart');\r\n      const c4 = document.querySelector('#volumeBandwidthChart');\r\n      const c5 = document.querySelector('#storagePoolDensityChart');\r\n      if (c1 == null\r\n        || c2 == null\r\n        || c3 == null\r\n        || c4 == null\r\n        || c5 == null\r\n      ){\r\n        this.initPerformanceChart();\r\n      } else {\r\n        /* this.volumeMaxResponseTimeChart = echarts.init(document.querySelector('#volumeMaxResponseTimeChart'));\r\n        this.volumeMaxResponseTimeChart.setOption(this.volumeCapacityOption);\r\n\r\n        this.volumeDensityChart = echarts.init(document.querySelector('#volumeDensityChart'));\r\n        this.volumeDensityChart.setOption(this.volumeCapacityOption);\r\n\r\n        this.volumeThroughputChart = echarts.init(document.querySelector('#volumeThroughputChart'));\r\n        this.volumeThroughputChart.setOption(this.volumeCapacityOption);\r\n\r\n        this.volumeBandwidthChart = echarts.init(document.querySelector('#volumeBandwidthChart'));\r\n        this.volumeBandwidthChart.setOption(this.volumeCapacityOption);\r\n\r\n        this.storagePoolDensityChart = echarts.init(document.querySelector('#storagePoolDensityChart'));\r\n        this.storagePoolDensityChart.setOption(this.volumeCapacityOption); */\r\n      }\r\n    }, 100);\r\n  }\r\n\r\n  initCapacityChart(){\r\n    setTimeout(() => {\r\n      const c1 = document.querySelector('#volumeCapacityChart');\r\n      const c2 = document.querySelector('#storagePoolCapacityChart');\r\n      if (c1 == null || c2 == null){\r\n        this.initCapacityChart();\r\n      } else{\r\n        /* this.volumeCapacityChart = echarts.init(document.querySelector('#volumeCapacityChart'));\r\n        this.volumeCapacityChart.setOption(this.volumeCapacityOption);\r\n\r\n        this.storagePoolCapacityChart = echarts.init(document.querySelector('#storagePoolCapacityChart'));\r\n        this.storagePoolCapacityChart.setOption(this.volumeCapacityOption); */\r\n      }\r\n    }, 100);\r\n  }\r\n\r\n  // 刷新服务等级列表\r\n  refresh(){\r\n    this.http.post('http://localhost:8080/servicelevel/listservicelevel', {}).subscribe((response: any) => {\r\n      response.data = response.data.replace('service-levels', 'serviceLevels');\r\n      const r = JSON.parse(response.data);\r\n      for (const i of r.serviceLevels){\r\n        i.usedRate =  ((i.used_capacity / i.total_capacity * 100).toFixed(2));\r\n      }\r\n      this.serviceLevelsRes = r.serviceLevels;\r\n      this.search();\r\n      console.log(this.serviceLevels);\r\n    }, err => {\r\n      console.error('ERROR', err);\r\n    });\r\n  }\r\n\r\n  // 服务等级列表搜索\r\n  search(){\r\n    if (this.searchName !== ''){\r\n      this.serviceLevels = this.serviceLevelsRes.filter(item => item.name.indexOf(this.searchName) > -1);\r\n    } else{\r\n      this.serviceLevels = this.serviceLevelsRes;\r\n    }\r\n    this.sortItemsChange();\r\n  }\r\n\r\n  // 服务等级列表排序\r\n  sortItemsChange(){\r\n    const o = this.sortItem;\r\n    if (o.value !== ''){\r\n      this.serviceLevels = this.serviceLevels.sort(this.compare(this.sortItem, 'asc'));\r\n    }\r\n  }\r\n\r\n  // 获取指定属性值\r\n  recursivePropertyies(prop: string, obj: object){\r\n    for (const property in obj){\r\n      if (property === prop){\r\n        return obj[prop];\r\n      } else if (obj[property] instanceof Object){\r\n        const r = this.recursivePropertyies(prop, obj[property]);\r\n        if (r !== undefined){\r\n          return r;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // 比较函数\r\n  compare(prop: any, sort: string){\r\n    return (obj1: any, obj2: any) => {\r\n      let val1 = this.recursivePropertyies(prop, obj1);\r\n      let val2 = this.recursivePropertyies(prop, obj2);\r\n      if (val1 === undefined) {\r\n        val1 = '';\r\n      }\r\n      if (val2 === undefined) {\r\n        val2 = '';\r\n      }\r\n      if (val1 < val2) {\r\n        if (sort === 'asc'){\r\n          return -1;\r\n        } else {\r\n          return 1;\r\n        }\r\n      } else if (val1 > val2) {\r\n        if (sort === 'asc'){\r\n          return 1;\r\n        } else {\r\n          return -1;\r\n        }\r\n      } else {\r\n          return 0;\r\n      }\r\n    };\r\n  }\r\n}\r\n\r\nclass Servicelevel {\r\n  id: string;\r\n  name: string;\r\n  description: string;\r\n  type: string; // FILE BLOCK\r\n  protocol: string; // FC, iSCSI\r\n  total_capacity: number;\r\n  used_capacity: number;\r\n  free_capacity: number;\r\n  capabilities: {\r\n    resource_type: string; // default_type、thin、thick\r\n    compression: string; // default_type, enabled, disabled;\r\n    deduplication: string; // default_type, enabled, disabled;\r\n    iopriority: {\r\n      enabled: boolean;\r\n      policy: number; // IO优先级枚举值, 取值范围：1：低；2：中；3：高;\r\n    };\r\n    smarttier: {\r\n      enabled: boolean;\r\n      policy: number; // 数据迁移等级，取值范围：0：不迁移; 1：自动迁移; 2：向低性能层迁移; 3：向高性能层迁移\r\n    };\r\n    qos: {\r\n      enabled: boolean;\r\n      qos_param: {\r\n        latency: number;\r\n        latencyU: string;\r\n        minBandWidth: number;\r\n        minIOPS: number;\r\n        maxBandWidth: number;\r\n        maxIOPS: number;\r\n      };\r\n    };\r\n  };\r\n}\r\n\r\ninterface StoragePool {\r\n  id: string;\r\n  name: string;\r\n  status: string;\r\n  diskType: string;\r\n  storageDevice: string;\r\n\r\n  totalCapacity: number;\r\n  usedCapacity: number;\r\n  capacityUsage: number;\r\n  freeCapacity: number;\r\n\r\n  latency: number;\r\n  iops: number;\r\n  bandwidth: number;\r\n}\r\n\r\ninterface Volume {\r\n  id: string;\r\n  name: string;\r\n  status: string;\r\n  totalCapacity: number;\r\n  provisioningType: string;\r\n  capacityUsed: number;\r\n\r\n  latency: number;\r\n  iops: number;\r\n  bandwidth: number;\r\n}\r\n\r\n\r\nclass ApplicationType {\r\n  id: string;\r\n  storageDevice: string;\r\n  applicationType;\r\n}\r\n","<div class=\"clr-row\">\r\n  <button class=\"btn btn-primary\" (click)=\"search();\">Search</button>\r\n  <input clrInput  [(ngModel)]=\"searchName\" name=\"name\" #name=\"ngModel\" />\r\n  <select  clrSelect (ngModelOptions)=\"sortItems\" [(ngModel)]=\"sortItem\" name=\"sort\" (change)=\"sortItemsChange();\">\r\n    <option *ngFor=\"let item of sortItems\" value=\"{{item.id}}\">{{item.value}}</option>\r\n  </select>\r\n  <button class=\"btn btn-primary\" (click)=\"refresh();\">refresh</button>\r\n</div>\r\n<div class=\"clr-row\">\r\n  <div class=\"info-card clr-col-4\" *ngFor=\"let item of serviceLevels\" [clrDgItem]=\"item\">\r\n    <div class=\"info-card-header\">\r\n      <div class=\"info-card-title\" style=\"cursor:pointer\" (click)=\"popShow=true;selectedModel=item\">{{item.name}}</div>\r\n      <clr-dropdown [clrCloseMenuOnItemClick]=\"false\">\r\n        <button clrDropdownTrigger class=\"dropdown-toggle btn btn-link\">\r\n          Operation\r\n          <clr-icon shape=\"caret down\"></clr-icon>\r\n        </button>\r\n        <clr-dropdown-menu *clrIfOpen>\r\n          <div clrDropdownItem>Link 1</div>\r\n          <div clrDropdownItem>Link 2</div>\r\n        </clr-dropdown-menu>\r\n      </clr-dropdown>\r\n    </div>\r\n    <div class=\"info-card-content\">\r\n      <div class=\"info-card-squre\">\r\n        <div class=\"squre-per-box\" [ngStyle]=\"{'height':(item.usedRate/100*200)+'px'}\"></div>\r\n        <div class=\"squre-num\">{{item.usedRate}}</div>\r\n      </div>\r\n      <div>\r\n        <div class=\"gh-info-item\">\r\n          <span class=\"gh-info-lable\">Total Capacity</span>\r\n          <span class=\"gh-info-value\">{{item.total_capacity}} TB</span>\r\n        </div>\r\n        <div class=\"gh-info-item\">\r\n          <span class=\"gh-info-lable\">Free Capacity</span>\r\n          <span class=\"gh-info-value\">{{item.free_capacity}} TB</span>\r\n        </div>\r\n        <div class=\"gh-info-item\">\r\n          <span class=\"gh-info-lable\">Qos Policy</span>\r\n          <span class=\"gh-info-value\" *ngIf=\"item.capabilities.qos != undefined\r\n                                            && item.capabilities.qos.enabled == true\r\n                                            && item.capabilities.qos.qos_param.latency != undefined\">\r\n            Latency = {{item.capabilities.qos.qos_param.latency}} {{item.capabilities.qos.qos_param.latencyUnit}}</span>\r\n        </div>\r\n        <div class=\"gh-info-item\">\r\n          <span class=\"gh-info-lable\"></span>\r\n          <span class=\"gh-info-value\" *ngIf=\"item.capabilities.qos != undefined\r\n                                            && item.capabilities.qos.enabled == true\r\n                                            && item.capabilities.qos.qos_param.minBandWidth != undefined\">\r\n            Bandwidth >= {{item.capabilities.qos.qos_param.minBandWidth}} Mbps/s\r\n          </span>\r\n          <span class=\"gh-info-value\" *ngIf=\"item.capabilities.qos != undefined\r\n                                            && item.capabilities.qos.enabled == true\r\n                                            && item.capabilities.qos.qos_param.maxBandWidth != undefined\">\r\n            Bandwidth <= {{item.capabilities.qos.qos_param.maxBandWidth}} Mbps/s\r\n          </span>\r\n        </div>\r\n        <div class=\"gh-info-item\">\r\n          <span class=\"gh-info-lable\"></span>\r\n          <span class=\"gh-info-value\" *ngIf=\"item.capabilities.qos != undefined\r\n                                            && item.capabilities.qos.enabled == true\r\n                                            && item.capabilities.qos.qos_param.minIOPS != undefined\">\r\n            IOPS >= {{item.capabilities.qos.qos_param.minIOPS}} IOPS/TB\r\n          </span>\r\n          <span class=\"gh-info-value\" *ngIf=\"item.capabilities.qos != undefined\r\n                                            && item.capabilities.qos.enabled == true\r\n                                            && item.capabilities.qos.qos_param.maxIOPS != undefined\">\r\n            IOPS <= {{item.capabilities.qos.qos_param.maxIOPS}} IOPS/TB\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n\r\n<clr-modal class=\"modal\" [(clrModalOpen)]=\"popShow\" [clrModalSize]=\"'lg'\">\r\n  <h3 class=\"modal-title\">\r\n    <span>{{selectedModel.name}}</span>\r\n    <!--<span>下拉框</span>\r\n    <span>下拉框1</span>-->\r\n  </h3>\r\n  <div class=\"modal-body\" >\r\n    <clr-tabs>\r\n      <clr-tab>\r\n        <button clrTabLink>General</button>\r\n        <clr-tab-content *clrIfActive>\r\n          <!-- 基础信息展示 -->\r\n          <div class=\"gh-info-head\">Basic Information</div>\r\n          <div class=\"gh-info-wrap clr-row\">\r\n            <div class=\"gh-info-item clr-col-4\">\r\n              <span class=\"gh-info-lable\">Name</span>\r\n              <span class=\"gh-info-value\">{{selectedModel.name}}</span>\r\n            </div>\r\n            <div class=\"gh-info-item clr-col-4\">\r\n              <span class=\"gh-info-lable\">Total Capacity</span>\r\n              <span class=\"gh-info-value\">{{selectedModel.total_capacity}} TB</span>\r\n            </div>\r\n            <div class=\"gh-info-item clr-col-4\">\r\n              <span class=\"gh-info-lable\">Free Capacity</span>\r\n              <span class=\"gh-info-value\">{{selectedModel.free_capacity}} TB</span>\r\n            </div>\r\n            <div class=\"gh-info-item clr-col-4\">\r\n              <span class=\"gh-info-lable\">Used Capacity</span>\r\n              <span class=\"gh-info-value\">{{selectedModel.used_capacity}} TB</span>\r\n            </div>\r\n            <div class=\"gh-info-item clr-col-4\">\r\n              <span class=\"gh-info-lable\">Capacity Usage</span>\r\n              <!--<span class=\"gh-info-value\"><clr-progress-bar clrValue=\"{{selectedModel.usedRate}}\" clrSuccess clrLabeled></clr-progress-bar></span>-->\r\n              <span class=\"gh-info-value\">{{selectedModel.usedRate}}%</span>\r\n          </div>\r\n            <div class=\"gh-info-item clr-col-4\">\r\n              <span class=\"gh-info-lable\">I/O Priority</span>\r\n              <span class=\"gh-info-value\" *ngIf=\"selectedModel.capabilities.iopriority !== undefined\r\n                                            && selectedModel.capabilities.iopriority.enabled === true\">\r\n                  <span *ngIf=\"selectedModel.capabilities.iopriority.policy == 1\">Lower</span>\r\n                  <span *ngIf=\"selectedModel.capabilities.iopriority.policy == 2\">Middle</span>\r\n                  <span *ngIf=\"selectedModel.capabilities.iopriority.policy == 3\">High</span>\r\n              </span>\r\n              <span class=\"gh-info-value\" *ngIf=\"selectedModel.capabilities.iopriority === undefined\r\n                                            || selectedModel.capabilities.iopriority.enabled === false\">\r\n                  --\r\n              </span>\r\n            </div>\r\n            <div class=\"gh-info-item clr-col-4\">\r\n              <span class=\"gh-info-lable\">Zoning Policy</span>\r\n              <span class=\"gh-info-value\">--</span>\r\n            </div>\r\n          </div>\r\n          <!-- 基础信息展示 -->\r\n          <div class=\"gh-info-head\">Qos Policy</div>\r\n          <div class=\"gh-info-wrap clr-row\">\r\n            <div class=\"gh-info-item clr-col-4\">\r\n              <span class=\"gh-info-lable\">Control Policy</span>\r\n              <span class=\"gh-info-value\" *ngIf=\"selectedModel.capabilities.qos != undefined\r\n                                            && selectedModel.capabilities.qos.enabled == true\">\r\n                     <span *ngIf=\"selectedModel.capabilities.qos.qos_param.maxBandWidth != undefined\r\n                                  && selectedModel.capabilities.qos.qos_param.maxIOPS != undefined\">\r\n                       Upper limit Control\r\n                     </span>\r\n                     <span *ngIf=\"selectedModel.capabilities.qos.qos_param.minBandWidth != undefined\r\n                                  && selectedModel.capabilities.qos.qos_param.minIOPS != undefined\">\r\n                       Lower limit Control\r\n                     </span>\r\n              </span>\r\n              <span class=\"gh-info-value\" *ngIf=\"selectedModel.capabilities.qos == undefined\r\n                                            || selectedModel.capabilities.qos.enabled == false\">\r\n                     --\r\n              </span>\r\n            </div>\r\n            <div class=\"gh-info-item clr-col-4\" *ngIf=\"selectedModel.capabilities.qos.qos_param.maxBandWidth != undefined\">\r\n              <span class=\"gh-info-lable\">BandWidth</span>\r\n              <span class=\"gh-info-value\"> <= {{selectedModel.capabilities.qos.qos_param.maxBandWidth}} MBPS/TB</span>\r\n            </div>\r\n            <div class=\"gh-info-item clr-col-4\" *ngIf=\"selectedModel.capabilities.qos.qos_param.minBandWidth != undefined\">\r\n              <span class=\"gh-info-lable\">BandWidth</span>\r\n              <span class=\"gh-info-value\"> >= {{selectedModel.capabilities.qos.qos_param.minBandWidth}} MBPS/TB</span>\r\n            </div>\r\n            <div class=\"gh-info-item clr-col-4\" *ngIf=\"selectedModel.capabilities.qos.qos_param.maxIOPS != undefined\">\r\n              <span class=\"gh-info-lable\">IOPS</span>\r\n              <span class=\"gh-info-value\"> <= {{selectedModel.capabilities.qos.qos_param.maxIOPS}} IOPS/TB</span>\r\n            </div>\r\n            <div class=\"gh-info-item clr-col-4\" *ngIf=\"selectedModel.capabilities.qos.qos_param.minIOPS != undefined\">\r\n              <span class=\"gh-info-lable\">IOPS</span>\r\n              <span class=\"gh-info-value\"> >= {{selectedModel.capabilities.qos.qos_param.minIOPS}} IOPS/TB</span>\r\n            </div>\r\n          </div>\r\n          <!-- 基础信息展示 -->\r\n          <div class=\"gh-info-head\">Resource Tuning</div>\r\n          <div class=\"gh-info-wrap clr-row\">\r\n            <div class=\"gh-info-item clr-col-4\">\r\n              <span class=\"gh-info-lable\">Provisioning Type</span>\r\n              <span class=\"gh-info-value\" *ngIf=\"selectedModel.capabilities.resource_type == undefined\r\n                                                || selectedModel.capabilities.resource_type == 'default_type'\">--</span>\r\n              <span class=\"gh-info-value\" *ngIf=\"selectedModel.capabilities.resource_type != undefined\r\n                                                && selectedModel.capabilities.resource_type != 'default_type'\">\r\n                {{selectedModel.capabilities.resource_type}}\r\n              </span>\r\n            </div>\r\n            <div class=\"gh-info-item clr-col-4\">\r\n              <span class=\"gh-info-lable\">Deduplication</span>\r\n              <span class=\"gh-info-value\" *ngIf=\"selectedModel.capabilities.deduplication == undefined\r\n                                                || selectedModel.capabilities.deduplication == 'default_type'\">--</span>\r\n              <span class=\"gh-info-value\" *ngIf=\"selectedModel.capabilities.deduplication != undefined\r\n                                                && selectedModel.capabilities.deduplication != 'default_type'\">\r\n                {{selectedModel.capabilities.deduplication}}\r\n              </span>\r\n            </div>\r\n            <div class=\"gh-info-item clr-col-4\">\r\n              <span class=\"gh-info-lable\">Compression</span>\r\n              <span class=\"gh-info-value\" *ngIf=\"selectedModel.capabilities.compression == undefined\r\n                                                || selectedModel.capabilities.compression == 'default_type'\">--</span>\r\n              <span class=\"gh-info-value\" *ngIf=\"selectedModel.capabilities.compression != undefined\r\n                                                && selectedModel.capabilities.compression != 'default_type'\">\r\n                {{selectedModel.capabilities.compression}}\r\n              </span>\r\n            </div>\r\n            <div class=\"gh-info-item clr-col-4\">\r\n              <span class=\"gh-info-lable\">SmartTier Policy</span>\r\n              <span class=\"gh-info-value\" *ngIf=\"selectedModel.capabilities.smarttier == undefined\r\n                                                || selectedModel.capabilities.smarttier.enabled == false\">--</span>\r\n              <span class=\"gh-info-value\" *ngIf=\"selectedModel.capabilities.smarttier != undefined\r\n                                                && selectedModel.capabilities.smarttier.enabled == true\">\r\n                     <span *ngIf=\"selectedModel.capabilities.smarttier.policy == 0\">\r\n                       不迁移\r\n                     </span>\r\n                     <span *ngIf=\"selectedModel.capabilities.smarttier.policy == 1\">\r\n                       自动迁移\r\n                     </span>\r\n                     <span *ngIf=\"selectedModel.capabilities.smarttier.policy == 2\">\r\n                       向低性能层迁移\r\n                     </span>\r\n                     <span *ngIf=\"selectedModel.capabilities.smarttier.policy == 3\">\r\n                       向高性能层迁移\r\n                     </span>\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <!-- 基础信息展示 -->\r\n          <div class=\"gh-info-head\">Threshold Setting</div>\r\n          <div class=\"gh-info-wrap clr-row\">\r\n             //\r\n          </div>\r\n        </clr-tab-content>\r\n      </clr-tab>\r\n      <clr-tab>\r\n        <button clrTabLink>Storage Pool</button>\r\n        <clr-tab-content *clrIfActive>\r\n\r\n            <div class=\"gh-info-head\"></div>\r\n\r\n            <div class=\"btn-group btn-icon\">\r\n              <div class=\"radio btn\">\r\n                <input (click)=\"storagePoolRadioCheck = 'basic'\" type=\"radio\" name=\"btn-group-demo-radios\" id=\"btn-demo-radio-1\" checked>\r\n                <label for=\"btn-demo-radio-1\"><clr-icon shape=\"list\" size=\"20\"></clr-icon></label>\r\n              </div>\r\n              <div class=\"radio btn\">\r\n                <input (click)=\"storagePoolRadioCheck = 'capacity'\" type=\"radio\" name=\"btn-group-demo-radios\" id=\"btn-demo-radio-2\">\r\n                <label for=\"btn-demo-radio-2\"><clr-icon shape=\"dashboard\" size=\"20\"></clr-icon></label>\r\n              </div>\r\n              <div class=\"radio btn\">\r\n                <input (click)=\"storagePoolRadioCheck = 'performance'\" type=\"radio\" name=\"btn-group-demo-radios\" id=\"btn-demo-radio-3\">\r\n                <label for=\"btn-demo-radio-3\"><clr-icon shape=\"radar\" size=\"20\"></clr-icon></label>\r\n              </div>\r\n              <div class=\"radio btn merginLeft\">\r\n                <label><clr-icon shape=\"refresh\" size=\"20\" (click)=\"storagePoolRefresh($event)\"></clr-icon></label>\r\n              </div>\r\n            </div>\r\n\r\n            <!-- 列表页 -->\r\n            <clr-datagrid [(clrDgSelected)]=\"storagePoolSelected\"   (clrDgRefresh)=\"storagePoolRefresh($event)\" [clrDgLoading]=\"storeagePoolIsloading\">\r\n\r\n              <clr-dg-column [clrDgField]=\"'name'\">Name</clr-dg-column>\r\n\r\n              <ng-container *ngIf=\"storagePoolRadioCheck==='basic'\">\r\n                <clr-dg-column [clrDgField]=\"'status'\">Status</clr-dg-column>\r\n                <clr-dg-column [clrDgField]=\"'diskType'\">Disk Type</clr-dg-column>\r\n                <clr-dg-column [clrDgField]=\"'storageDevice'\">Storage Device</clr-dg-column>\r\n              </ng-container>\r\n\r\n              <ng-container *ngIf=\"storagePoolRadioCheck==='capacity'\">\r\n                <clr-dg-column [clrDgField]=\"'totalCapacity'\">Total Capacity</clr-dg-column>\r\n                <clr-dg-column [clrDgField]=\"'usedCapacity'\">Used Capacity</clr-dg-column>\r\n                <clr-dg-column [clrDgField]=\"'capacityUsage'\">Capacity Usage</clr-dg-column>\r\n                <clr-dg-column [clrDgField]=\"'freeCapacity'\">Free Capacity</clr-dg-column>\r\n              </ng-container>\r\n\r\n              <ng-container *ngIf=\"storagePoolRadioCheck==='performance'\">\r\n                <clr-dg-column [clrDgField]=\"'status'\">Status</clr-dg-column>\r\n                <clr-dg-column [clrDgField]=\"'latency'\">Latency(ms)</clr-dg-column>\r\n                <clr-dg-column [clrDgField]=\"'iops'\">IOPS</clr-dg-column>\r\n                <clr-dg-column [clrDgField]=\"'bandwidth'\">Bandwidth(MB/s)</clr-dg-column>\r\n              </ng-container>\r\n\r\n              <clr-dg-row *ngFor=\"let item of storagePoolList\" [clrDgItem]=\"item\">\r\n\r\n                <clr-dg-cell>{{item.name}}</clr-dg-cell>\r\n\r\n                <ng-container *ngIf=\"storagePoolRadioCheck==='basic'\">\r\n                  <clr-dg-cell>{{item.status}}</clr-dg-cell>\r\n                  <clr-dg-cell>{{item.diskType}}</clr-dg-cell>\r\n                  <clr-dg-cell>{{item.storageDevice}}</clr-dg-cell>\r\n                </ng-container>\r\n\r\n                <ng-container *ngIf=\"storagePoolRadioCheck==='capacity'\">\r\n                  <clr-dg-cell>{{item.totalCapacity}} TB</clr-dg-cell>\r\n                  <clr-dg-cell>{{item.usedCapacity}} TB</clr-dg-cell>\r\n                  <clr-dg-cell>\r\n                    <clr-progress-bar clrValue=\"{{item.capacityUsage}}\" clrSuccess clrLabeled></clr-progress-bar>\r\n                  </clr-dg-cell>\r\n                  <clr-dg-cell>{{item.freeCapacity}} TB</clr-dg-cell>\r\n                </ng-container>\r\n\r\n                <ng-container *ngIf=\"storagePoolRadioCheck==='performance'\">\r\n                  <clr-dg-cell>{{item.status}}</clr-dg-cell>\r\n                  <clr-dg-cell>{{item.latency}}</clr-dg-cell>\r\n                  <clr-dg-cell>{{item.iops}}</clr-dg-cell>\r\n                  <clr-dg-cell>{{item.bandwidth}}</clr-dg-cell>\r\n                </ng-container>\r\n\r\n              </clr-dg-row>\r\n\r\n              <clr-dg-footer>\r\n                <clr-dg-pagination #pagination [clrDgPageSize]=\"5\" [clrDgTotalItems]=\"storagePoolTotal\">\r\n                  <clr-dg-page-size [clrPageSizeOptions]=\"[5,10,50,100]\">per page</clr-dg-page-size>\r\n                  {{pagination.firstItem + 1}} - {{pagination.lastItem + 1}}\r\n                  of {{pagination.totalItems}}\r\n                </clr-dg-pagination>\r\n              </clr-dg-footer>\r\n\r\n\r\n          </clr-datagrid>\r\n        </clr-tab-content>\r\n      </clr-tab>\r\n\r\n      <clr-tab>\r\n        <button clrTabLink>Volume</button>\r\n        <clr-tab-content *clrIfActive>\r\n\r\n          <div class=\"gh-info-head\"></div>\r\n\r\n          <div class=\"btn-group btn-icon\">\r\n            <div class=\"radio btn\">\r\n              <input (click)=\"volumeRadioCheck = 'basic'\" type=\"radio\" name=\"btn-group-demo-radios\" id=\"btn-demo-radio-4\" checked>\r\n              <label for=\"btn-demo-radio-4\"><clr-icon shape=\"list\" size=\"20\"></clr-icon></label>\r\n            </div>\r\n            <div class=\"radio btn\">\r\n              <input (click)=\"volumeRadioCheck = 'performance'\" type=\"radio\" name=\"btn-group-demo-radios\" id=\"btn-demo-radio-5\">\r\n              <label for=\"btn-demo-radio-5\"><clr-icon shape=\"dashboard\" size=\"20\"></clr-icon></label>\r\n            </div>\r\n            <div class=\"radio btn merginLeft\">\r\n              <label><clr-icon shape=\"refresh\" size=\"20\" (click)=\"volumeRefresh($event)\"></clr-icon></label>\r\n            </div>\r\n          </div>\r\n\r\n          <clr-datagrid [(clrDgSelected)]=\"volumeSelected\"   (clrDgRefresh)=\"volumeRefresh($event)\" [clrDgLoading]=\"volumeIsloading\">\r\n\r\n            <ng-container *ngIf=\"volumeRadioCheck==='basic'\">\r\n              <clr-dg-column [clrDgField]=\"'name'\">Name</clr-dg-column>\r\n              <clr-dg-column [clrDgField]=\"'status'\">Status</clr-dg-column>\r\n              <clr-dg-column [clrDgField]=\"'totalCapacity'\">Total Capacity</clr-dg-column>\r\n              <clr-dg-column [clrDgField]=\"'provisioningType'\">Provisioning Type</clr-dg-column>\r\n              <clr-dg-column [clrDgField]=\"'capacityUsed'\">capacity Usage</clr-dg-column>\r\n            </ng-container>\r\n            <ng-container *ngIf=\"volumeRadioCheck==='performance'\">\r\n              <clr-dg-column [clrDgField]=\"'name'\">Name</clr-dg-column>\r\n              <clr-dg-column [clrDgField]=\"'status'\">Status</clr-dg-column>\r\n              <clr-dg-column [clrDgField]=\"'latency'\">Latency(ms)</clr-dg-column>\r\n              <clr-dg-column [clrDgField]=\"'iops'\">IOPS</clr-dg-column>\r\n              <clr-dg-column [clrDgField]=\"'bandwidth'\">Bandwidth(MB/s)</clr-dg-column>\r\n            </ng-container>\r\n\r\n            <clr-dg-row *ngFor=\"let item of volumeList\" [clrDgItem]=\"item\">\r\n\r\n                <clr-dg-cell>{{item.name}}</clr-dg-cell>\r\n                <clr-dg-cell>{{item.status}}</clr-dg-cell>\r\n\r\n                <ng-container *ngIf=\"volumeRadioCheck==='basic'\">\r\n                  <clr-dg-cell>{{item.totalCapacity}}</clr-dg-cell>\r\n                  <clr-dg-cell>{{item.provisioningType}}</clr-dg-cell>\r\n                  <clr-dg-cell>{{item.capacityUsed}}</clr-dg-cell>\r\n                </ng-container>\r\n                <ng-container *ngIf=\"volumeRadioCheck==='performance'\">\r\n                  <clr-dg-cell>{{item.latency}}</clr-dg-cell>\r\n                  <clr-dg-cell>{{item.iops}}</clr-dg-cell>\r\n                  <clr-dg-cell>{{item.bandwidth}}</clr-dg-cell>\r\n                </ng-container>\r\n\r\n            </clr-dg-row>\r\n\r\n            <clr-dg-footer>\r\n              <clr-dg-pagination #pagination [clrDgPageSize]=\"5\" [clrDgTotalItems]=\"volumeTotal\">\r\n                <clr-dg-page-size [clrPageSizeOptions]=\"[5,10,50,100]\">per page</clr-dg-page-size>\r\n                {{pagination.firstItem + 1}} - {{pagination.lastItem + 1}}\r\n                of {{pagination.totalItems}}\r\n              </clr-dg-pagination>\r\n            </clr-dg-footer>\r\n\r\n          </clr-datagrid>\r\n\r\n        </clr-tab-content>\r\n      </clr-tab>\r\n      <clr-tab>\r\n        <button clrTabLink (click)=\"initCapacityChart()\">Capacity</button>\r\n        <clr-tab-content *clrIfActive>\r\n          <div class=\"gh-info-head\"></div>\r\n          <div class=\"clr-select-wrapper\">\r\n            <select class=\"clr-select\" >\r\n              <option value=\"1\">Last 1 month</option>\r\n              <option value=\"2\">Last 3 month</option>\r\n              <option value=\"3\">Last 6 month</option>\r\n              <option value=\"4\">Last 1 year</option>\r\n            </select>\r\n          </div>\r\n          <div class=\"gh-info-head\"></div>\r\n          <div id=\"volumeCapacityChart\" style=\"height: 300px;\"></div>\r\n          <div class=\"gh-info-head\"></div>\r\n          <div id=\"storagePoolCapacityChart\" style=\"height: 300px;\"></div>\r\n        </clr-tab-content>\r\n      </clr-tab>\r\n      <clr-tab>\r\n        <button clrTabLink (click)=\"initPerformanceChart()\">Performance</button>\r\n        <clr-tab-content *clrIfActive>\r\n          <div class=\"gh-info-head\"></div>\r\n          <div class=\"clr-select-wrapper\">\r\n            <select class=\"clr-select\" >\r\n              <option value=\"1\">Last 1 day</option>\r\n              <option value=\"2\">Last 3 week</option>\r\n              <option value=\"3\">Last 6 month</option>\r\n              <option value=\"4\">Last 1 year</option>\r\n            </select>\r\n          </div>\r\n          <div class=\"gh-info-head\"></div>\r\n          <div echarts [options]=\"volumeCapacityOption\" id=\"volumeMaxResponseTimeChart\" style=\"height: 300px;\"></div>\r\n          <div class=\"gh-info-head\"></div>\r\n          <div echarts [options]=\"volumeCapacityOption\" id=\"volumeDensityChart\" style=\"height: 300px;\"></div>\r\n          <div class=\"gh-info-head\"></div>\r\n          <div echarts [options]=\"volumeCapacityOption\" id=\"volumeThroughputChart\" style=\"height: 300px;\"></div>\r\n          <div class=\"gh-info-head\"></div>\r\n          <div echarts [options]=\"volumeCapacityOption\" id=\"volumeBandwidthChart\" style=\"height: 300px;\"></div>\r\n          <div class=\"gh-info-head\"></div>\r\n          <div echarts [options]=\"volumeCapacityOption\" id=\"storagePoolDensityChart\" style=\"height: 300px;\"></div>\r\n        </clr-tab-content>\r\n      </clr-tab>\r\n      <clr-tab>\r\n        <button clrTabLink>Application Type</button>\r\n        <clr-tab-content *clrIfActive>\r\n          <clr-datagrid [(clrDgSelected)]=\"applicationTypeSelected\"   (clrDgRefresh)=\"applicationTypeRefresh($event)\" [clrDgLoading]=\"applicationTypeIsloading\">\r\n\r\n            <clr-dg-column [clrDgField]=\"'storageDevice'\">Storage Device</clr-dg-column>\r\n            <clr-dg-column [clrDgField]=\"'applicationType'\">Application Type</clr-dg-column>\r\n\r\n            <clr-dg-row *ngFor=\"let item of applicationTypeList\" [clrDgItem]=\"item\">\r\n              <clr-dg-cell>{{item.storageDevice}}</clr-dg-cell>\r\n              <clr-dg-cell>{{item.applicationType}}</clr-dg-cell>\r\n            </clr-dg-row>\r\n\r\n            <clr-dg-footer>\r\n              <clr-dg-pagination #pagination [clrDgPageSize]=\"5\" [clrDgTotalItems]=\"applicationTypeTotal\">\r\n                <clr-dg-page-size [clrPageSizeOptions]=\"[5,10,50,100]\">per page</clr-dg-page-size>\r\n                {{pagination.firstItem + 1}} - {{pagination.lastItem + 1}}\r\n                of {{pagination.totalItems}}\r\n              </clr-dg-pagination>\r\n            </clr-dg-footer>\r\n\r\n          </clr-datagrid>\r\n        </clr-tab-content>\r\n      </clr-tab>\r\n    </clr-tabs>\r\n  </div>\r\n  <div class=\"modal-footer\">\r\n    <button type=\"button\" class=\"btn btn-outline bottom-middle\" (click)=\"popShow=false\">Close</button>\r\n  </div>\r\n</clr-modal>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ServicelevelRoutingModule } from './servicelevel-routing.module';\r\nimport { ServicelevelComponent } from './servicelevel.component';\r\nimport {SharedModule} from '../../shared';\r\n\r\n\r\n@NgModule({\r\n  declarations: [ServicelevelComponent],\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule,\r\n    ServicelevelRoutingModule\r\n  ]\r\n})\r\nexport class ServicelevelModule { }\r\n"]}