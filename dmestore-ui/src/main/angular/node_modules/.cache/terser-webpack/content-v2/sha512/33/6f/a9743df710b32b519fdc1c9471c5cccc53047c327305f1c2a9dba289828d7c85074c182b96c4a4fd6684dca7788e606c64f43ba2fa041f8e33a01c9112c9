{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[2],{FX80:function(module,__webpack_exports__,__webpack_require__){\"use strict\";__webpack_require__.d(__webpack_exports__,\"b\",(function(){return VmfsListService})),__webpack_require__.d(__webpack_exports__,\"a\",(function(){return GetForm}));var _angular_core__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(\"fXoL\"),_angular_common_http__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(\"tk/3\");let VmfsListService=(()=>{class VmfsListService{constructor(http){this.http=http}getData(params={}){return this.http.get(\"accessvmfs/listvmfs\",params)}getChartData(volumeIds){return this.http.get(\"accessvmfs/listvmfsperformance\",{params:{volumeIds:volumeIds}})}getStorages(){return this.http.get(\"dmestorage/storages\")}getStoragePoolsByStorId(storageId,mediaType){return this.http.get(\"dmestorage/storagepools?storageId=\"+storageId+\"&media_type=\"+mediaType)}getHostList(){return this.http.get(\"accessvmware/listhost\")}getClusterList(){return this.http.get(\"accessvmware/listcluster\")}getHostListByObjectId(objectId){return this.http.get(\"accessvmware/gethostsbydsobjectid?dataStoreObjectId=\"+objectId)}getClusterListByObjectId(objectId){return this.http.get(\"accessvmware/getclustersbydsobjectid?dataStoreObjectId=\"+objectId)}getMountHostOrCluSter(objectId){return this.http.get(\"accessvmware/getclustersbydsobjectid?dataStoreObjectId=\"+objectId)}getServiceLevelList(params={}){return this.http.put(\"operatevmfs/listvmfsservicelevel\",params)}createVmfs(params={}){return this.http.post(\"accessvmfs/createvmfs\",params)}updateVmfs(volumeId,params={}){return this.http.put(\"operatevmfs/updatevmfs?volume_id=\"+volumeId,params)}delVmfs(params={}){return this.http.post(\"accessvmfs/deletevmfs\",params)}getMountHost(objectId){return this.http.get(\"accessvmfs/gethostsbystorageid/\"+objectId)}getMountCluster(objectId){return this.http.get(\"accessvmfs/gethostgroupsbystorageid/\"+objectId)}unmountVMFS(params={}){return this.http.post(\"/accessvmfs/ummountvmfs\",params)}mountVmfs(params={}){return this.http.post(\"accessvmfs/mountvmfs\",params)}reclaimVmfs(params={}){return this.http.post(\"operatevmfs/recyclevmfs\",params)}changeServiceLevel(params={}){return this.http.post(\"operatevmfs/updatevmfsservicelevel\",params)}expandVMFS(params={}){return this.http.post(\"operatevmfs/expandvmfs\",params)}scanVMFS(storageType){return this.http.get(\"accessdme/scandatastore\",{params:{storageType:storageType}})}}return VmfsListService.ɵfac=function(t){return new(t||VmfsListService)(_angular_core__WEBPACK_IMPORTED_MODULE_0__.Yb(_angular_common_http__WEBPACK_IMPORTED_MODULE_1__.b))},VmfsListService.ɵprov=_angular_core__WEBPACK_IMPORTED_MODULE_0__.Kb({token:VmfsListService,factory:VmfsListService.ɵfac}),VmfsListService})();class GetForm{getAddForm(){return{name:null,volumeName:null,isSameName:!0,capacity:null,capacityUnit:\"GB\",count:null,service_level_id:null,service_level_name:null,version:\"5\",blockSize:\"1024\",spaceReclamationGranularity:\"1024\",spaceReclamationPriority:\"low\",host:null,hostId:null,cluster:null,clusterId:null,storage_id:null,pool_raw_id:null,workload_type_id:null,alloctype:null,control_policy:\"1\",latencyChoose:!1,latency:null,maxbandwidth:null,maxbandwidthChoose:!1,maxiops:null,maxiopsChoose:!1,minbandwidth:null,minbandwidthChoose:!1,miniops:null,miniopsChoose:!1,qosname:null,deviceName:null,hostDataloadSuccess:!1,culDataloadSuccess:!1}}getEditForm(){return{name:null,isSameName:!0,volume_id:null,control_policy:\"1\",max_iops:null,max_bandwidth:null,newVoName:null,oldDsName:null,newDsName:null,min_iops:null,min_bandwidth:null,dataStoreObjectId:null,service_level_name:null,latency:null}}getExpandForm(){return{vo_add_capacity:0,capacityUnit:\"GB\",volume_id:\"\",ds_name:\"\"}}getChangeLevelForm(){return{volume_ids:[],ds_name:\"\",service_level_id:\"\",service_level_name:\"\"}}getMountForm(){return{hostId:null,host:null,clusterId:null,cluster:null,dataStoreObjectIds:[],mountType:null}}getUnmountForm(){return{name:null,hostName:null,hostId:null,hostGroupId:null,hostGroupName:null,dataStoreObjectIds:[],mountType:\"1\"}}}},tMGR:function(module,__webpack_exports__,__webpack_require__){\"use strict\";__webpack_require__.d(__webpack_exports__,\"e\",(function(){return NfsService})),__webpack_require__.d(__webpack_exports__,\"a\",(function(){return AddNfs})),__webpack_require__.d(__webpack_exports__,\"f\",(function(){return UpdateNfs})),__webpack_require__.d(__webpack_exports__,\"d\",(function(){return Mount})),__webpack_require__.d(__webpack_exports__,\"c\",(function(){return ModifyNfs})),__webpack_require__.d(__webpack_exports__,\"b\",(function(){return MakePerformance}));var _shared_globals_service__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(\"/Kh9\"),_angular_core__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(\"fXoL\"),_angular_common_http__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(\"tk/3\");let NfsService=(()=>{class NfsService{constructor(http){this.http=http}getData(){return this.http.get(\"accessnfs/listnfs\")}getChartData(fsIds){return this.http.get(\"accessnfs/listnfsperformance\",{params:{fsIds:fsIds}})}addNfs(params={}){return console.log(\"addNfs\"),console.log(params),this.http.post(\"operatenfs/createnfsdatastore\",params)}updateNfs(params={}){return this.http.post(\"operatenfs/updatenfsdatastore\",params)}mountNfs(params={}){return this.http.post(\"accessnfs/mountnfs\",params)}delNfs(param){return this.http.post(\"accessnfs/delnfs\",param)}getHostListByObjectId(dataStoreObjectId){return this.http.get(\"accessvmware/gethostsbydsobjectid\",{params:{dataStoreObjectId:dataStoreObjectId}})}getHostList(){return this.http.get(\"accessvmware/listhost\")}getClusterListByObjectId(dataStoreObjectId){return this.http.get(\"accessvmware/getclustersbydsobjectid\",{params:{dataStoreObjectId:dataStoreObjectId}})}getVolsByObjId(objId){return this.http.get(\"accessvmfs/volume/\"+objId)}getVmkernelListByObjectId(hostObjectId){return this.http.get(\"accessvmware/getvmkernelipbyhostobjectid\",{params:{hostObjectId:hostObjectId}})}getNfsDetailById(fileSystemId){return this.http.get(\"dmestorage/filesystemdetail\",{params:{fileSystemId:fileSystemId}})}changeCapacity(params={}){return this.http.post(\"operatenfs/changenfsdatastore\",params)}getLineChartData(url,params={}){return this.http.post(url,params)}}return NfsService.vmfsIOPS=[\"1125921381744648\",\"1125921381744649\"],NfsService.vmfsBDWT=[\"1125921381744646\",\"1125921381744647\"],NfsService.vmfsLatency=[\"1125921381744656\",\"1125921381744657\"],NfsService.vmfsUrl=\"datastorestatistichistrory/vmfs\",NfsService.nfsOPS=[\"1125921381744648\",\"1125921381744649\"],NfsService.nfsBDWT=[\"1125921381744646\",\"1125921381744647\"],NfsService.nfsLatency=[\"1125921381744656\",\"1125921381744657\"],NfsService.nfsUrl=\"datastorestatistichistrory/nfs\",NfsService.perRanges=[{key:\"LAST_5_MINUTE\",value:\"最近5分钟\"},{key:\"LAST_1_HOUR\",value:\"最近1小时\"},{key:\"LAST_1_DAY\",value:\"最近1天\"},{key:\"LAST_1_WEEK\",value:\"最近1周\"},{key:\"LAST_1_MONTH\",value:\"最近1个月\"},{key:\"LAST_1_QUARTER\",value:\"最近1个季度\"},{key:\"HALF_1_YEAR\",value:\"最近半年\"},{key:\"LAST_1_YEAR\",value:\"最近1年\"},{key:\"BEGIN_END_TIME\",value:\"开始-结束时间\"},{key:\"INVALID\",value:\"无效\"}],NfsService.ɵfac=function(t){return new(t||NfsService)(_angular_core__WEBPACK_IMPORTED_MODULE_1__.Yb(_angular_common_http__WEBPACK_IMPORTED_MODULE_2__.b))},NfsService.ɵprov=_angular_core__WEBPACK_IMPORTED_MODULE_1__.Kb({token:NfsService,factory:NfsService.ɵfac}),NfsService})();class AddNfs{constructor(){this.sameName=!0,this.advance=!1,this.qosFlag=!1,this.deduplicationEnabled=!1,this.compressionEnabled=!1,this.autoSizeEnable=!1,this.thin=!0}}class UpdateNfs{constructor(){this.sameName=!0}}class Autonegotiation{}class Advance{}class QosPolicy{}class Mount{}class ModifyNfs{constructor(){this.capacity_autonegotiation=new Autonegotiation,this.tuning=new Advance,this.qos_policy=new QosPolicy,this.sameName=!0,this.advance=!0,this.qosPolicy=!0}}class ChartOptions{}class Title{}class TextStyle{}class XAxis{}class YAxis{}class SplitLine{}class AxisLine{}class Tooltip{}class AxisPointer{}class Legend{}class LegendData{}class Serie{}class ItemStyle{}class Normal{}class LineStyle{}class Label{constructor(){this.show=!0}}let MakePerformance=(()=>{class MakePerformance{constructor(remoteSrv,cdr,gs){this.remoteSrv=remoteSrv,this.cdr=cdr,this.gs=gs}setChart(height,title,subtext,indicatorIds,objIds,range,url,startTime,endTime){const chart=this.getNewChart(height,title,subtext);return new Promise((resolve,reject)=>{this.remoteSrv.getLineChartData(url,{indicator_ids:indicatorIds,obj_ids:objIds,range:range,begin_time:startTime,end_time:endTime}).subscribe(result=>{if(console.log(\"chartData: \",title,result),\"200\"===result.code&&null!==result.data&&null!==result.data.data){const resData=result.data;chart.title.text=title,chart.title.subtext=subtext;const upperData=resData[objIds[0]][indicatorIds[0]],lowerData=resData[objIds[0]][indicatorIds[1]],pmaxData=this.getUpperOrLower(upperData,\"upper\");let lmaxData=this.getUpperOrLower(lowerData,\"lower\");this.getUpperOrLower(upperData,\"lower\"),this.getUpperOrLower(lowerData,\"lower\");const uppers=upperData.series,lower=lowerData.series,pavgData=upperData.avg,lavgData=lowerData.avg;this.setXAxisData(uppers,chart),chart.yAxis.max=pmaxData>lmaxData?pmaxData:lmaxData,console.log(\"chart.yAxis.pmaxData\",pmaxData),console.log(\"chart.yAxis.lmaxData\",lmaxData),uppers.forEach(item=>{for(const key of Object.keys(item))chart.series[2].data.push({value:Number(item[key]),symbol:\"none\"});for(const key of Object.keys(pavgData))chart.series[0].data.push({value:Number(pavgData[key]),symbol:\"none\"})}),lower.forEach(item=>{for(const key of Object.keys(item))chart.series[3].data.push({value:Number(item[key]),symbol:\"none\"});for(const key of Object.keys(lavgData))chart.series[1].data.push({value:Number(lavgData[key]),symbol:\"none\"})}),resolve(chart)}else console.log(\"get chartData fail: \",result.description)})})}setChartSingle(height,title,subtext,indicatorIds,objIds,range,url,startTime,endTime){const chart=this.getNewChartSingle(height,title,subtext);return new Promise((resolve,reject)=>{this.remoteSrv.getLineChartData(url,{indicator_ids:indicatorIds,obj_ids:objIds,range:range,begin_time:startTime,end_time:endTime}).subscribe(result=>{if(console.log(\"chartData: \",title,result),chart.title.text=title,chart.title.subtext=subtext,\"200\"===result.code&&null!==result.data&&null!==result.data.data){let resData=result.data;result.data.data&&(resData=result.data.data);const seriesData=resData[objIds[0]][indicatorIds[0]].series;this.setXAxisData(seriesData,chart),seriesData.forEach(item=>{for(const key of Object.keys(item))chart.series[0].data.push({value:Number(item[key]),symbol:\"none\"})})}else console.log(\"get chartData fail: \",result.description);resolve(chart)})})}getNewChart(height,title,subtext){const chart=new ChartOptions;chart.height=height;const titleInfo=new Title;titleInfo.text=title,titleInfo.subtext=subtext,titleInfo.textAlign=\"bottom\";const textStyle=new TextStyle;textStyle.fontStyle=\"normal\",titleInfo.textStyle=textStyle,chart.title=titleInfo;const xAxis=new XAxis;xAxis.type=\"category\",xAxis.boundaryGap=!1,xAxis.data=[],chart.xAxis=xAxis;const yAxis=new YAxis;yAxis.type=\"value\",yAxis.min=0,yAxis.splitNumber=2,yAxis.boundaryGap=[\"50%\",\"50%\"];const axisLine=new AxisLine;axisLine.show=!1,yAxis.axisLine=axisLine;const splitLine=new SplitLine;splitLine.show=!0;const lineStyle=new LineStyle;lineStyle.type=\"dashed\",splitLine.lineStyle=lineStyle,yAxis.splitLine=splitLine,chart.yAxis=yAxis;const tooltip=new Tooltip;tooltip.trigger=\"axis\",tooltip.formatter=\"{b} <br/> {a0}: {c0}<br/>{a1}: {c1}<br/>{a2}: {c2}<br/>{a3}: {c3}\";const axisPointer=new AxisPointer;axisPointer.axis=\"x\",axisPointer.type=\"line\",tooltip.axisPointer=axisPointer,chart.tooltip=tooltip;const legend=new Legend,legendData=[];legendData.push(this.setLengdData(\"Upper Limit\",\"line\")),legendData.push(this.setLengdData(\"Lower Limit\",\"line\")),legendData.push(this.setLengdData(\"Read\",\"circle\")),legendData.push(this.setLengdData(\"Write\",\"circle\")),legend.x=\"right\",legend.y=\"top\",legend.selectedMode=!0,legend.data=legendData,chart.legend=legend,chart.color=[\"#DB2000\",\"#F8E082\",\"#6870c4\",\"#01bfa8\"];const series=[];return series.push(this.setSerieData(\"Upper Limit\",\"line\",!0,\"dotted\",\"#DB2000\",null)),series.push(this.setSerieData(\"Lower Limit\",\"line\",!0,\"dotted\",\"#F8E082\",null)),series.push(this.setSerieData(\"Read\",\"line\",!0,\"solid\",\"#6870c4\",null)),series.push(this.setSerieData(\"Write\",\"line\",!0,\"solid\",\"#01bfa8\",null)),chart.series=series,chart}getNewChartSingle(height,title,subtext){const chart=new ChartOptions;chart.height=height;const titleInfo=new Title;titleInfo.text=title,titleInfo.subtext=subtext,titleInfo.textAlign=\"bottom\";const textStyle=new TextStyle;textStyle.fontStyle=\"normal\",titleInfo.textStyle=textStyle,chart.title=titleInfo;const xAxis=new XAxis;xAxis.type=\"category\",xAxis.boundaryGap=!1,xAxis.data=[],chart.xAxis=xAxis;const yAxis=new YAxis;yAxis.type=\"value\",yAxis.min=0,yAxis.splitNumber=2,yAxis.boundaryGap=[\"50%\",\"50%\"];const axisLine=new AxisLine;axisLine.show=!1,yAxis.axisLine=axisLine;const splitLine=new SplitLine;splitLine.show=!0;const lineStyle=new LineStyle;lineStyle.type=\"dashed\",splitLine.lineStyle=lineStyle,yAxis.splitLine=splitLine,chart.yAxis=yAxis;const tooltip=new Tooltip;tooltip.trigger=\"axis\",tooltip.formatter=\"{b} <br/> {a0}: {c0}\";const axisPointer=new AxisPointer;axisPointer.axis=\"x\",axisPointer.type=\"line\",tooltip.axisPointer=axisPointer,chart.tooltip=tooltip,chart.color=[\"#DB2000\"];const series=[];return series.push(this.setSerieData(\"卷最大I/O相应时间\",\"line\",!0,\"dotted\",\"#DB2000\",null)),chart.series=series,chart}setSerieData(name,type,smooth,lineType,lineColor,labelFormatter){const serie=new Serie;serie.name=name,serie.type=type,serie.data=[],serie.smooth=smooth;const itemStyle=new ItemStyle,normal=new Normal,lineStyle=new LineStyle;lineStyle.color=lineColor,lineStyle.type=lineType,lineStyle.width=2,normal.lineStyle=lineStyle,itemStyle.normal=normal,serie.itemStyle=itemStyle;const lable=new Label;return lable.formatter=labelFormatter,lable.show=!0,serie.label=lable,serie}setLengdData(name,icon){const legendData=new LegendData;return legendData.name=name,null!==icon&&(legendData.icon=icon),legendData}setXAxisData(data,chart){console.log(\"data\",data),data.forEach(item=>{for(const key of Object.keys(item)){const date=new Date(+key),dateStr=date.getFullYear()+\"-\"+date.getMonth()+\"-\"+date.getDay()+\" \"+date.getHours()+\":\"+date.getMinutes();chart.xAxis.data.push(dateStr)}})}getUpperOrLower(data,type){let result;if(\"lower\"===type)for(const key of Object.keys(data.max))result=Number(data.max[key]);else for(const key of Object.keys(data.max))result=Number(data.min[key]);return result}getVolsByObjId(objectId,volumeInfoList,volNames,selectVolName,selectVolume){console.log(\"objectId: \"+objectId),this.remoteSrv.getVolsByObjId(objectId).subscribe(result=>{if(console.log(result),\"200\"===result.code){const volName=[];(volumeInfoList=result.data).forEach(item=>{volName.push(item.name)}),this.getVolByName(volName[0],volumeInfoList),this.cdr.detectChanges()}else console.log(result.description)})}getVolByName(name,volumeInfoList){return volumeInfoList.filter(item=>item.name===name)[0]}}return MakePerformance.ɵfac=function(t){return new(t||MakePerformance)(_angular_core__WEBPACK_IMPORTED_MODULE_1__.Yb(NfsService),_angular_core__WEBPACK_IMPORTED_MODULE_1__.Yb(_angular_core__WEBPACK_IMPORTED_MODULE_1__.h),_angular_core__WEBPACK_IMPORTED_MODULE_1__.Yb(_shared_globals_service__WEBPACK_IMPORTED_MODULE_0__.b))},MakePerformance.ɵprov=_angular_core__WEBPACK_IMPORTED_MODULE_1__.Kb({token:MakePerformance,factory:MakePerformance.ɵfac}),MakePerformance})()}}]);","extractedComments":[]}