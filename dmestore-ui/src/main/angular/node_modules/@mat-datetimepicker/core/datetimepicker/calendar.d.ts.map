{"version":3,"file":"calendar.d.ts","sources":["calendar.d.ts"],"names":[],"mappingssourcesContent":["import { AfterContentInit, ChangeDetectorRef, ElementRef, EventEmitter, NgZone, OnDestroy } from \"@angular/core\";\r\nimport { MatDatepickerIntl } from \"@angular/material/datepicker\";\r\nimport { DatetimeAdapter } from \"../adapter/datetime-adapter\";\r\nimport { MatDatetimeFormats } from \"../adapter/datetime-formats\";\r\nimport { MatClockView } from \"./clock\";\r\nimport { MatDatetimepickerType } from \"./datetimepicker\";\r\nimport { MatDatetimepickerFilterType } from \"./datetimepicker-filtertype\";\r\nexport declare type MatCalendarView = \"clock\" | \"month\" | \"year\" | \"multi-year\";\r\n/**\r\n * A calendar that is used as part of the datepicker.\r\n * @docs-private\r\n */\r\nexport declare class MatDatetimepickerCalendar<D> implements AfterContentInit, OnDestroy {\r\n    private _elementRef;\r\n    private _intl;\r\n    private _ngZone;\r\n    private _adapter;\r\n    private _dateFormats;\r\n    _userSelection: EventEmitter<void>;\r\n    /** Active multi year view when click on year. */\r\n    multiYearSelector: boolean;\r\n    /** Whether the calendar should be started in month or year view. */\r\n    startView: MatCalendarView;\r\n    twelvehour: boolean;\r\n    timeInterval: number;\r\n    /** A function used to filter which dates are selectable. */\r\n    dateFilter: (date: D, type: MatDatetimepickerFilterType) => boolean;\r\n    ariaLabel: string;\r\n    ariaNextMonthLabel: string;\r\n    ariaPrevMonthLabel: string;\r\n    ariaNextYearLabel: string;\r\n    ariaPrevYearLabel: string;\r\n    ariaNextMultiYearLabel: string;\r\n    ariaPrevMultiYearLabel: string;\r\n    /** Emits when the currently selected date changes. */\r\n    selectedChange: EventEmitter<D>;\r\n    /** Emits when the view has been changed. **/\r\n    viewChanged: EventEmitter<MatCalendarView>;\r\n    _AMPM: string;\r\n    _clockView: MatClockView;\r\n    _calendarState: string;\r\n    private _intlChanges;\r\n    private _clampedActiveDate;\r\n    constructor(_elementRef: ElementRef, _intl: MatDatepickerIntl, _ngZone: NgZone, _adapter: DatetimeAdapter<D>, _dateFormats: MatDatetimeFormats, changeDetectorRef: ChangeDetectorRef);\r\n    private _type;\r\n    get type(): MatDatetimepickerType;\r\n    set type(value: MatDatetimepickerType);\r\n    private _startAt;\r\n    /** A date representing the period (month or year) to start the calendar in. */\r\n    get startAt(): D | null;\r\n    set startAt(value: D | null);\r\n    private _selected;\r\n    /** The currently selected date. */\r\n    get selected(): D | null;\r\n    set selected(value: D | null);\r\n    private _minDate;\r\n    /** The minimum selectable date. */\r\n    get minDate(): D | null;\r\n    set minDate(value: D | null);\r\n    private _maxDate;\r\n    /** The maximum selectable date. */\r\n    get maxDate(): D | null;\r\n    set maxDate(value: D | null);\r\n    /**\r\n     * The current active date. This determines which time period is shown and which date is\r\n     * highlighted when using keyboard navigation.\r\n     */\r\n    get _activeDate(): D;\r\n    set _activeDate(value: D);\r\n    /** Whether the calendar is in month view. */\r\n    _currentView: MatCalendarView;\r\n    get currentView(): MatCalendarView;\r\n    set currentView(view: MatCalendarView);\r\n    /** The label for the current calendar view. */\r\n    get _yearLabel(): string;\r\n    get _monthYearLabel(): string;\r\n    get _dateLabel(): string;\r\n    get _hoursLabel(): string;\r\n    get _minutesLabel(): string;\r\n    get _ariaLabelNext(): string;\r\n    get _ariaLabelPrev(): string;\r\n    /** Date filter for the month and year views. */\r\n    _dateFilterForViews: (date: D) => boolean;\r\n    _userSelected(): void;\r\n    ngAfterContentInit(): void;\r\n    ngOnDestroy(): void;\r\n    /** Handles date selection in the month view. */\r\n    _dateSelected(date: D): void;\r\n    /** Handles month selection in the year view. */\r\n    _monthSelected(month: D): void;\r\n    /** Handles year selection in the multi year view. */\r\n    _yearSelected(year: D): void;\r\n    _timeSelected(date: D): void;\r\n    _onActiveDateChange(date: D): void;\r\n    _updateDate(date: D): D;\r\n    _selectAMPM(date: D): void;\r\n    _ampmClicked(source: string): void;\r\n    _yearClicked(): void;\r\n    _dateClicked(): void;\r\n    _hoursClicked(): void;\r\n    _minutesClicked(): void;\r\n    /** Handles user clicks on the previous button. */\r\n    _previousClicked(): void;\r\n    /** Handles user clicks on the next button. */\r\n    _nextClicked(): void;\r\n    /** Whether the previous period button is enabled. */\r\n    _previousEnabled(): boolean;\r\n    /** Whether the next period button is enabled. */\r\n    _nextEnabled(): boolean;\r\n    /** Handles keydown events on the calendar body. */\r\n    _handleCalendarBodyKeydown(event: KeyboardEvent): void;\r\n    _focusActiveCell(): void;\r\n    _calendarStateDone(): void;\r\n    /** Whether the two dates represent the same view in the current view mode (month or year). */\r\n    private _isSameView;\r\n    /** Handles keydown events on the calendar body when calendar is in month view. */\r\n    private _handleCalendarBodyKeydownInMonthView;\r\n    /** Handles keydown events on the calendar body when calendar is in year view. */\r\n    private _handleCalendarBodyKeydownInYearView;\r\n    /** Handles keydown events on the calendar body when calendar is in multi-year view. */\r\n    private _handleCalendarBodyKeydownInMultiYearView;\r\n    /** Handles keydown events on the calendar body when calendar is in month view. */\r\n    private _handleCalendarBodyKeydownInClockView;\r\n    /**\r\n     * Determine the date for the month that comes before the given month in the same column in the\r\n     * calendar table.\r\n     */\r\n    private _prevMonthInSameCol;\r\n    /**\r\n     * Determine the date for the month that comes after the given month in the same column in the\r\n     * calendar table.\r\n     */\r\n    private _nextMonthInSameCol;\r\n    private calendarState;\r\n    private _2digit;\r\n}\r\n"]}