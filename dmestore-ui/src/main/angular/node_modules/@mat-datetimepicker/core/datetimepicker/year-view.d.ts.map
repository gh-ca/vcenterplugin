{"version":3,"file":"year-view.d.ts","sources":["year-view.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { AfterContentInit, EventEmitter } from \"@angular/core\";\r\nimport { MatDatetimepickerType } from \"./datetimepicker\";\r\nimport { MatDatetimepickerCalendarCell } from \"./calendar-body\";\r\nimport { MatDatetimeFormats } from \"../adapter/datetime-formats\";\r\nimport { DatetimeAdapter } from \"../adapter/datetime-adapter\";\r\n/**\r\n * An internal component used to display a single year in the datepicker.\r\n * @docs-private\r\n */\r\nexport declare class MatDatetimepickerYearView<D> implements AfterContentInit {\r\n    _adapter: DatetimeAdapter<D>;\r\n    private _dateFormats;\r\n    _userSelection: EventEmitter<void>;\r\n    type: MatDatetimepickerType;\r\n    /** A function used to filter which dates are selectable. */\r\n    dateFilter: (date: D) => boolean;\r\n    /** Emits when a new month is selected. */\r\n    selectedChange: EventEmitter<D>;\r\n    /** Grid of calendar cells representing the months of the year. */\r\n    _months: MatDatetimepickerCalendarCell[][];\r\n    /** The label for this year (e.g. \"2017\"). */\r\n    _yearLabel: string;\r\n    /** The month in this year that today falls on. Null if today is in a different year. */\r\n    _todayMonth: number;\r\n    /**\r\n     * The month in this year that the selected Date falls on.\r\n     * Null if the selected Date is in a different year.\r\n     */\r\n    _selectedMonth: number;\r\n    _calendarState: string;\r\n    constructor(_adapter: DatetimeAdapter<D>, _dateFormats: MatDatetimeFormats);\r\n    private _activeDate;\r\n    /** The date to display in this year view (everything other than the year is ignored). */\r\n    get activeDate(): D;\r\n    set activeDate(value: D);\r\n    private _selected;\r\n    /** The currently selected date. */\r\n    get selected(): D;\r\n    set selected(value: D);\r\n    ngAfterContentInit(): void;\r\n    /** Handles when a new month is selected. */\r\n    _monthSelected(month: number): void;\r\n    _calendarStateDone(): void;\r\n    /** Initializes this month view. */\r\n    private _init;\r\n    /**\r\n     * Gets the month in this year that the given Date falls on.\r\n     * Returns null if the given Date is in another year.\r\n     */\r\n    private _getMonthInCurrentYear;\r\n    /** Creates an MdCalendarCell for the given month. */\r\n    private _createCellForMonth;\r\n    /** Whether the given month is enabled. */\r\n    private _isMonthEnabled;\r\n}\r\n"]}