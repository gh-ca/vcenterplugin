{"version":3,"file":"mat-datetimepicker-core.js","sources":["../../../projects/core/src/adapter/datetime-adapter.ts","../../../projects/core/src/adapter/datetime-formats.ts","../../../projects/core/src/adapter/native-datetime-adapter.ts","../../../projects/core/src/adapter/native-datetime-formats.ts","../../../projects/core/src/adapter/adapter.module.ts","../../../projects/core/src/datetimepicker/datetimepicker-animations.ts","../../../projects/core/src/datetimepicker/datetimepicker-errors.ts","../../../projects/core/src/datetimepicker/datetimepicker-filtertype.ts","../../../projects/core/src/datetimepicker/calendar-body.ts","../../../projects/core/src/datetimepicker/multi-year-view.ts","../../../projects/core/src/datetimepicker/calendar.ts","../../../projects/core/src/datetimepicker/clock.ts","../../../projects/core/src/datetimepicker/datetimepicker.ts","../../../projects/core/src/datetimepicker/datetimepicker-input.ts","../../../projects/core/src/datetimepicker/datetimepicker-toggle.ts","../../../projects/core/src/datetimepicker/month-view.ts","../../../projects/core/src/datetimepicker/year-view.ts","../../../projects/core/src/datetimepicker/datetimepicker.module.ts"],"names":["observableOf"],"mappings":"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","sourcesContent":["import {DateAdapter} from \"@angular/material/core\";\r\n\r\nexport abstract class DatetimeAdapter<D> extends DateAdapter<D> {\r\n\r\n  constructor(protected _delegate: DateAdapter<D>) {\r\n    super();\r\n  }\r\n\r\n  abstract getHour(date: D): number;\r\n\r\n  abstract getMinute(date: D): number;\r\n\r\n  abstract getFirstDateOfMonth(date: D): D;\r\n\r\n  abstract isInNextMonth(startDate: D, endDate: D): boolean;\r\n\r\n  abstract getHourNames(): string[];\r\n\r\n  abstract getMinuteNames(): string[];\r\n\r\n  abstract addCalendarHours(date: D, months: number): D;\r\n\r\n  abstract addCalendarMinutes(date: D, months: number): D;\r\n\r\n  abstract createDatetime(year: number, month: number, date: number, hour: number, minute: number): D;\r\n\r\n  getValidDateOrNull(obj: any): D | null {\r\n    return (this.isDateInstance(obj) && this.isValid(obj)) ? obj : null;\r\n  }\r\n\r\n  compareDatetime(first: D, second: D): number {\r\n    return this.compareDate(first, second) ||\r\n      this.getHour(first) - this.getHour(second) ||\r\n      this.getMinute(first) - this.getMinute(second);\r\n  }\r\n\r\n  sameDatetime(first: D | null, second: D | null): boolean {\r\n    if (first && second) {\r\n      const firstValid = this.isValid(first);\r\n      const secondValid = this.isValid(second);\r\n      if (firstValid && secondValid) {\r\n        return !this.compareDatetime(first, second);\r\n      }\r\n      return firstValid === secondValid;\r\n    }\r\n    return first === second;\r\n  }\r\n\r\n  sameYear(first: D, second: D) {\r\n    return first && second && this.getYear(first) === this.getYear(second);\r\n  }\r\n\r\n  sameDay(first: D, second: D) {\r\n    return first && second && this.getDate(first) === this.getDate(second) && this.sameMonthAndYear(first, second);\r\n  }\r\n\r\n  sameHour(first: D, second: D) {\r\n    return first && second && this.getHour(first) === this.getHour(second) && this.sameDay(first, second);\r\n  }\r\n\r\n  sameMinute(first: D, second: D) {\r\n    return first && second && this.getMinute(first) === this.getMinute(second) && this.sameHour(first, second);\r\n  }\r\n\r\n  sameMonthAndYear(first: D | null, second: D | null): boolean {\r\n    if (first && second) {\r\n      const firstValid = this.isValid(first);\r\n      const secondValid = this.isValid(second);\r\n      if (firstValid && secondValid) {\r\n        return !(this.getYear(first) - this.getYear(second) ||\r\n          this.getMonth(first) - this.getMonth(second));\r\n      }\r\n      return firstValid === secondValid;\r\n    }\r\n    return first === second;\r\n  }\r\n\r\n  // delegate\r\n  clone(date: D): D {\r\n    return this._delegate.clone(date);\r\n  }\r\n\r\n  addCalendarYears(date: D, years: number): D {\r\n    return this._delegate.addCalendarYears(date, years);\r\n  }\r\n\r\n  addCalendarMonths(date: D, months: number): D {\r\n    return this._delegate.addCalendarMonths(date, months);\r\n  }\r\n\r\n  addCalendarDays(date: D, days: number): D {\r\n    return this._delegate.addCalendarDays(date, days);\r\n  }\r\n\r\n  getYear(date: D): number {\r\n    return this._delegate.getYear(date);\r\n  }\r\n\r\n  getMonth(date: D): number {\r\n    return this._delegate.getMonth(date);\r\n  }\r\n\r\n  getDate(date: D): number {\r\n    return this._delegate.getDate(date);\r\n  }\r\n\r\n  getDayOfWeek(date: D): number {\r\n    return this._delegate.getDayOfWeek(date);\r\n  }\r\n\r\n  getMonthNames(style): string[] {\r\n    return this._delegate.getMonthNames(style);\r\n  }\r\n\r\n  getDateNames(): string[] {\r\n    return this._delegate.getDateNames();\r\n  }\r\n\r\n  getDayOfWeekNames(style): string[] {\r\n    return this._delegate.getDayOfWeekNames(style);\r\n  }\r\n\r\n  getYearName(date: D): string {\r\n    return this._delegate.getYearName(date);\r\n  }\r\n\r\n  getFirstDayOfWeek(): number {\r\n    return this._delegate.getFirstDayOfWeek();\r\n  }\r\n\r\n  getNumDaysInMonth(date: D): number {\r\n    return this._delegate.getNumDaysInMonth(date);\r\n  }\r\n\r\n  createDate(year: number, month: number, date: number): D {\r\n    return this._delegate.createDate(year, month, date);\r\n  }\r\n\r\n  today(): D {\r\n    return this._delegate.today();\r\n  }\r\n\r\n  parse(value: any, parseFormat: any): D | null {\r\n    return this._delegate.parse(value, parseFormat);\r\n  }\r\n\r\n  format(date: D, displayFormat: any): string {\r\n    return this._delegate.format(date, displayFormat);\r\n  }\r\n\r\n  toIso8601(date: D): string {\r\n    return this._delegate.toIso8601(date);\r\n  }\r\n\r\n  isDateInstance(obj: any): boolean {\r\n    return this._delegate.isDateInstance(obj);\r\n  }\r\n\r\n  isValid(date: D): boolean {\r\n    return this._delegate.isValid(date);\r\n  }\r\n\r\n  invalid(): D {\r\n    return this._delegate.invalid();\r\n  }\r\n\r\n  clampDate(date: D, min?: D | null, max?: D | null): D {\r\n    if (min && this.compareDatetime(date, min) < 0) {\r\n      return min;\r\n    }\r\n    if (max && this.compareDatetime(date, max) > 0) {\r\n      return max;\r\n    }\r\n    return date;\r\n  }\r\n}\r\n","import {InjectionToken} from \"@angular/core\";\r\n\r\nexport interface MatDatetimeFormats {\r\n  parse: {\r\n    dateInput?: any;\r\n    monthInput?: any;\r\n    timeInput?: any;\r\n    datetimeInput?: any;\r\n  };\r\n  display: {\r\n    dateInput: any;\r\n    monthInput: any;\r\n    timeInput: any;\r\n    datetimeInput: any;\r\n    monthYearLabel: any;\r\n    dateA11yLabel: any;\r\n    monthYearA11yLabel: any;\r\n    popupHeaderDateLabel: any;\r\n  };\r\n}\r\n\r\nexport const MAT_DATETIME_FORMATS = new InjectionToken<MatDatetimeFormats>(\"mat-datetime-formats\");\r\n","import {Inject, Injectable, Optional} from \"@angular/core\";\r\nimport {DateAdapter, MAT_DATE_LOCALE} from \"@angular/material/core\";\r\nimport {DatetimeAdapter} from \"./datetime-adapter\";\r\n\r\n/** The default hour names to use if Intl API is not available. */\r\nconst DEFAULT_HOUR_NAMES = range(24, i => String(i));\r\n\r\n/** The default minute names to use if Intl API is not available. */\r\nconst DEFAULT_MINUTE_NAMES = range(60, i => String(i));\r\n\r\nfunction range<T>(length: number, valueFunction: (index: number) => T): T[] {\r\n  const valuesArray = Array(length);\r\n  for (let i = 0; i < length; i++) {\r\n    valuesArray[i] = valueFunction(i);\r\n  }\r\n  return valuesArray;\r\n}\r\n\r\n@Injectable()\r\nexport class NativeDatetimeAdapter extends DatetimeAdapter<Date> {\r\n\r\n  constructor(@Optional() @Inject(MAT_DATE_LOCALE) matDateLocale: string, _delegate: DateAdapter<Date>) {\r\n    super(_delegate);\r\n    this.setLocale(matDateLocale);\r\n  }\r\n\r\n  clone(date: Date): Date {\r\n    return this.createDatetime(this.getYear(date), this.getMonth(date), this.getDate(date), this.getHour(date), this.getMinute(date));\r\n  }\r\n\r\n  getHour(date: Date): number {\r\n    return date.getHours();\r\n  }\r\n\r\n  getMinute(date: Date): number {\r\n    return date.getMinutes();\r\n  }\r\n\r\n  isInNextMonth(startDate: Date, endDate: Date): boolean {\r\n    const nextMonth = this.getDateInNextMonth(startDate);\r\n    return this.sameMonthAndYear(nextMonth, endDate);\r\n  }\r\n\r\n  createDatetime(year: number, month: number, date: number, hour: number, minute: number): Date {\r\n    // Check for invalid month and date (except upper bound on date which we have to check after\r\n    // creating the Date).\r\n    if (month < 0 || month > 11) {\r\n      throw Error(`Invalid month index \"${month}\". Month index has to be between 0 and 11.`);\r\n    }\r\n\r\n    if (date < 1) {\r\n      throw Error(`Invalid date \"${date}\". Date has to be greater than 0.`);\r\n    }\r\n\r\n    if (hour < 0 || hour > 23) {\r\n      throw Error(`Invalid hour \"${hour}\". Hour has to be between 0 and 23.`);\r\n    }\r\n\r\n    if (minute < 0 || minute > 59) {\r\n      throw Error(`Invalid minute \"${minute}\". Minute has to be between 0 and 59.`);\r\n    }\r\n\r\n    const result = this._createDateWithOverflow(year, month, date, hour, minute);\r\n\r\n    // Check that the date wasn't above the upper bound for the month, causing the month to overflow\r\n    if (result.getMonth() !== month) {\r\n      throw Error(`Invalid date \"${date}\" for month with index \"${month}\".`);\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  getFirstDateOfMonth(date: Date): Date {\r\n    const result = new Date();\r\n    result.setFullYear(date.getFullYear(), date.getMonth(), 1);\r\n    return result;\r\n  }\r\n\r\n  getHourNames(): string[] {\r\n    return DEFAULT_HOUR_NAMES;\r\n  }\r\n\r\n  getMinuteNames(): string[] {\r\n    return DEFAULT_MINUTE_NAMES;\r\n  }\r\n\r\n  addCalendarYears(date: Date, years: number): Date {\r\n    return this.addCalendarMonths(date, years * 12);\r\n  }\r\n\r\n  addCalendarMonths(date: Date, months: number): Date {\r\n    let newDate = this._createDateWithOverflow(\r\n      this.getYear(date), this.getMonth(date) + months, this.getDate(date), this.getHour(date), this.getMinute(date));\r\n\r\n    // It's possible to wind up in the wrong month if the original month has more days than the new\r\n    // month. In this case we want to go to the last day of the desired month.\r\n    // Note: the additional + 12 % 12 ensures we end up with a positive number, since JS % doesn't\r\n    // guarantee this.\r\n    if (this.getMonth(newDate) !== ((this.getMonth(date) + months) % 12 + 12) % 12) {\r\n      newDate = this._createDateWithOverflow(this.getYear(newDate), this.getMonth(newDate), 0, this.getHour(date), this.getMinute(date));\r\n    }\r\n\r\n    return newDate;\r\n  }\r\n\r\n  addCalendarDays(date: Date, days: number): Date {\r\n    return this._createDateWithOverflow(\r\n      this.getYear(date), this.getMonth(date), this.getDate(date) + days, this.getHour(date), this.getMinute(date));\r\n  }\r\n\r\n  addCalendarHours(date: Date, hours: number): Date {\r\n    return this._createDateWithOverflow(\r\n      this.getYear(date), this.getMonth(date), this.getDate(date),\r\n      this.getHour(date) + hours, this.getMinute(date));\r\n  }\r\n\r\n  addCalendarMinutes(date: Date, minutes: number): Date {\r\n    return this._createDateWithOverflow(\r\n      this.getYear(date), this.getMonth(date), this.getDate(date),\r\n      this.getHour(date), this.getMinute(date) + minutes);\r\n  }\r\n\r\n  toIso8601(date: Date): string {\r\n    return super.toIso8601(date) + \"T\" + [\r\n      this._2digit(date.getUTCHours()),\r\n      this._2digit(date.getUTCMinutes())\r\n    ].join(\":\");\r\n  }\r\n\r\n  private getDateInNextMonth(date: Date) {\r\n    return new Date(date.getFullYear(), date.getMonth() + 1, 1,\r\n      date.getHours(), date.getMinutes());\r\n  }\r\n\r\n  /**\r\n   * Strip out unicode LTR and RTL characters. Edge and IE insert these into formatted dates while\r\n   * other browsers do not. We remove them to make output consistent and because they interfere with\r\n   * date parsing.\r\n   * @param str The string to strip direction characters from.\r\n   * @returns The stripped string.\r\n   */\r\n  private _stripDirectionalityCharacters(str: string) {\r\n    return str.replace(/[\\u200e\\u200f]/g, \"\");\r\n  }\r\n\r\n  /**\r\n   * Pads a number to make it two digits.\r\n   * @param n The number to pad.\r\n   * @returns The padded number.\r\n   */\r\n  private _2digit(n: number) {\r\n    return (\"00\" + n).slice(-2);\r\n  }\r\n\r\n  /** Creates a date but allows the month and date to overflow. */\r\n  private _createDateWithOverflow(year: number, month: number, date: number,\r\n                                  hours: number, minutes: number) {\r\n    const result = new Date(year, month, date, hours, minutes);\r\n\r\n    // We need to correct for the fact that JS native Date treats years in range [0, 99] as\r\n    // abbreviations for 19xx.\r\n    if (year >= 0 && year < 100) {\r\n      result.setFullYear(this.getYear(result) - 1900);\r\n    }\r\n    return result;\r\n  }\r\n}\r\n","import {MatDatetimeFormats} from \"./datetime-formats\";\r\n\r\nexport const MAT_NATIVE_DATETIME_FORMATS: MatDatetimeFormats = {\r\n  parse: {},\r\n  display: {\r\n    dateInput: {year: \"numeric\", month: \"2-digit\", day: \"2-digit\"},\r\n    monthInput: {month: \"long\"},\r\n    datetimeInput: {year: \"numeric\", month: \"2-digit\", day: \"2-digit\", hour: \"2-digit\", minute: \"2-digit\"},\r\n    timeInput: {hour: \"2-digit\", minute: \"2-digit\"},\r\n    monthYearLabel: {year: \"numeric\", month: \"short\"},\r\n    dateA11yLabel: {year: \"numeric\", month: \"long\", day: \"numeric\"},\r\n    monthYearA11yLabel: {year: \"numeric\", month: \"long\"},\r\n    popupHeaderDateLabel: {weekday: \"short\", month: \"short\", day: \"2-digit\"}\r\n  }\r\n};\r\n","import {NgModule} from \"@angular/core\";\r\nimport {MatNativeDateModule, NativeDateModule} from \"@angular/material/core\";\r\nimport {DatetimeAdapter} from \"./datetime-adapter\";\r\nimport {MAT_DATETIME_FORMATS} from \"./datetime-formats\";\r\nimport {NativeDatetimeAdapter} from \"./native-datetime-adapter\";\r\nimport {MAT_NATIVE_DATETIME_FORMATS} from \"./native-datetime-formats\";\r\n\r\n// tslint:disable max-classes-per-file\r\n@NgModule({\r\n  imports: [NativeDateModule],\r\n  providers: [\r\n    {\r\n      provide: DatetimeAdapter,\r\n      useClass: NativeDatetimeAdapter\r\n    }\r\n  ]\r\n})\r\nexport class NativeDatetimeModule {\r\n}\r\n\r\n@NgModule({\r\n  imports: [\r\n    NativeDatetimeModule,\r\n    MatNativeDateModule\r\n  ],\r\n  providers: [{provide: MAT_DATETIME_FORMATS, useValue: MAT_NATIVE_DATETIME_FORMATS}]\r\n})\r\nexport class MatNativeDatetimeModule {\r\n}\r\n","import {animate, AnimationTriggerMetadata, keyframes, state, style, transition, trigger} from \"@angular/animations\";\r\n\r\n/**\r\n * This animation fades in the background color and text content of the\r\n * select's options. It is time delayed to occur 100ms after the overlay\r\n * panel has transformed in.\r\n */\r\nexport const fadeInContent: AnimationTriggerMetadata = trigger(\"fadeInContent\", [\r\n  state(\"showing\", style({opacity: 1})),\r\n  transition(\"void => showing\", [\r\n    style({opacity: 0}),\r\n    animate(`150ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)`)\r\n  ])\r\n]);\r\n\r\nexport const slideCalendar: AnimationTriggerMetadata = trigger(\"slideCalendar\", [\r\n  transition(\"* => left\", [\r\n    animate(180, keyframes([\r\n      style({transform: \"translateX(100%)\", offset: 0.5}),\r\n      style({transform: \"translateX(-100%)\", offset: 0.51}),\r\n      style({transform: \"translateX(0)\", offset: 1})\r\n    ]))\r\n  ]),\r\n  transition(\"* => right\", [\r\n    animate(180, keyframes([\r\n      style({transform: \"translateX(-100%)\", offset: 0.5}),\r\n      style({transform: \"translateX(100%)\", offset: 0.51}),\r\n      style({transform: \"translateX(0)\", offset: 1})\r\n    ]))\r\n  ])\r\n]);\r\n","/** @docs-private */\r\nexport function createMissingDateImplError(provider: string) {\r\n  return Error(\r\n    `MatDatetimepicker: No provider found for ${provider}. You must import one of the following ` +\r\n    `modules at your application root: MatNativeDatetimeModule, MatMomentDatetimeModule, or provide a ` +\r\n    `custom implementation.`);\r\n}\r\n","export enum MatDatetimepickerFilterType {\r\n  DATE, HOUR, MINUTE\r\n}\r\n","import {ChangeDetectionStrategy, Component, EventEmitter, Input, Output, ViewEncapsulation} from \"@angular/core\";\r\n\r\n/**\r\n * An internal class that represents the data corresponding to a single calendar cell.\r\n * @docs-private\r\n */\r\nexport class MatDatetimepickerCalendarCell {\r\n  constructor(public value: number,\r\n              public displayValue: string,\r\n              public ariaLabel: string,\r\n              public enabled: boolean) {\r\n  }\r\n}\r\n\r\n/**\r\n * An internal component used to display calendar data in a table.\r\n * @docs-private\r\n */\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: \"[mat-datetimepicker-calendar-body]\",\r\n  templateUrl: \"calendar-body.html\",\r\n  styleUrls: [\"calendar-body.scss\"],\r\n  host: {\r\n    \"class\": \"mat-datetimepicker-calendar-body\"\r\n  },\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class MatDatetimepickerCalendarBody {\r\n  /** The label for the table. (e.g. \"Jan 2017\"). */\r\n  @Input() label: string;\r\n\r\n  /** The cells to display in the table. */\r\n  @Input() rows: MatDatetimepickerCalendarCell[][];\r\n\r\n  /** The value in the table that corresponds to today. */\r\n  @Input() todayValue: number;\r\n\r\n  /** The value in the table that is currently selected. */\r\n  @Input() selectedValue: number;\r\n\r\n  /** The minimum number of free cells needed to fit the label in the first row. */\r\n  @Input() labelMinRequiredCells: number;\r\n\r\n  /** The number of columns in the table. */\r\n  @Input() numCols = 7;\r\n\r\n  /** Whether to allow selection of disabled cells. */\r\n  @Input() allowDisabledSelection = false;\r\n\r\n  /** The cell number of the active cell in the table. */\r\n  @Input() activeCell = 0;\r\n\r\n  /** Emits when a new value is selected. */\r\n  @Output() selectedValueChange = new EventEmitter<number>();\r\n\r\n  /** The number of blank cells to put at the beginning for the first row. */\r\n  get _firstRowOffset(): number {\r\n    return this.rows && this.rows.length && this.rows[0].length ?\r\n      this.numCols - this.rows[0].length : 0;\r\n  }\r\n\r\n  _cellClicked(cell: MatDatetimepickerCalendarCell): void {\r\n    if (!this.allowDisabledSelection && !cell.enabled) {\r\n      return;\r\n    }\r\n    this.selectedValueChange.emit(cell.value);\r\n  }\r\n\r\n  _isActiveCell(rowIndex: number, colIndex: number): boolean {\r\n    let cellNumber = rowIndex * this.numCols + colIndex;\r\n\r\n    // Account for the fact that the first row may not have as many cells.\r\n    if (rowIndex) {\r\n      cellNumber -= this._firstRowOffset;\r\n    }\r\n\r\n    return cellNumber === this.activeCell;\r\n  }\r\n}\r\n","/* tslint:disable */\r\nimport {\r\n  AfterContentInit,\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  EventEmitter,\r\n  Inject,\r\n  Input,\r\n  Optional,\r\n  Output,\r\n  ViewEncapsulation\r\n} from \"@angular/core\";\r\nimport {MatDatetimepickerType} from \"./datetimepicker\";\r\nimport {createMissingDateImplError} from \"./datetimepicker-errors\";\r\nimport {MatDatetimepickerCalendarCell} from \"./calendar-body\";\r\nimport {slideCalendar} from \"./datetimepicker-animations\";\r\nimport {MAT_DATETIME_FORMATS, MatDatetimeFormats} from \"../adapter/datetime-formats\";\r\nimport {DatetimeAdapter} from \"../adapter/datetime-adapter\";\r\n\r\n\r\nexport const yearsPerPage = 24;\r\n\r\nexport const yearsPerRow = 4;\r\n\r\n/**\r\n * An internal component used to display multiple years in the datepicker.\r\n * @docs-private\r\n */\r\n@Component({\r\n  selector: \"mat-datetimepicker-multi-year-view\",\r\n  templateUrl: \"multi-year-view.html\",\r\n  animations: [slideCalendar],\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class MatDatetimepickerMultiYearView<D> implements AfterContentInit {\r\n\r\n  @Output() _userSelection = new EventEmitter<void>();\r\n\r\n  @Input() type: MatDatetimepickerType = \"date\";\r\n  /** A function used to filter which dates are selectable. */\r\n  @Input() dateFilter: (date: D) => boolean;\r\n  /** Emits when a new month is selected. */\r\n  @Output() selectedChange = new EventEmitter<D>();\r\n  /** Grid of calendar cells representing the years in the range. */\r\n  _years: MatDatetimepickerCalendarCell[][];\r\n  /** The label for this year range (e.g. \"2000-2020\"). */\r\n  _yearLabel: string;\r\n  /** The year in this range that today falls on. Null if today is in a different range. */\r\n  _todayYear: number;\r\n  /**\r\n   * The year in this range that the selected Date falls on.\r\n   * Null if the selected Date is in a different range.\r\n   */\r\n  _selectedYear: number | null;\r\n  _calendarState: string;\r\n\r\n  constructor(@Optional() public _adapter: DatetimeAdapter<D>,\r\n              @Optional() @Inject(MAT_DATETIME_FORMATS) private _dateFormats: MatDatetimeFormats) {\r\n    if (!this._adapter) {\r\n      throw createMissingDateImplError(\"DatetimeAdapter\");\r\n    }\r\n\r\n    if (!this._dateFormats) {\r\n      throw createMissingDateImplError(\"MAT_DATETIME_FORMATS\");\r\n    }\r\n\r\n    this._activeDate = this._adapter.today();\r\n  }\r\n\r\n  private _activeDate: D;\r\n\r\n  /** The date to display in this multi year view*/\r\n  @Input()\r\n  get activeDate(): D {\r\n    return this._activeDate;\r\n  }\r\n\r\n  set activeDate(value: D) {\r\n    let oldActiveDate = this._activeDate;\r\n    this._activeDate = value || this._adapter.today();\r\n    if (oldActiveDate && this._activeDate &&\r\n      !isSameMultiYearView(this._adapter, oldActiveDate, this._activeDate, this.minDate, this.maxDate)) {\r\n      this._init();\r\n    }\r\n  }\r\n\r\n  private _selected: D;\r\n\r\n  /** The currently selected date. */\r\n  @Input()\r\n  get selected(): D {\r\n    return this._selected;\r\n  }\r\n\r\n  set selected(value: D) {\r\n    this._selected = value;\r\n    this._selectedYear = this._selected && this._adapter.getYear(this._selected);\r\n  }\r\n\r\n  private _minDate: D | null;\r\n\r\n  /** The minimum selectable date. */\r\n  @Input()\r\n  get minDate(): D | null {\r\n    return this._minDate;\r\n  }\r\n\r\n  set minDate(value: D | null) {\r\n    this._minDate = this._getValidDateOrNull(this._adapter.deserialize(value));\r\n  }\r\n\r\n  private _maxDate: D | null;\r\n\r\n  /** The maximum selectable date. */\r\n  @Input()\r\n  get maxDate(): D | null {\r\n    return this._maxDate;\r\n  }\r\n\r\n  set maxDate(value: D | null) {\r\n    this._maxDate = this._getValidDateOrNull(this._adapter.deserialize(value));\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    this._init();\r\n  }\r\n\r\n  /** Handles when a new year is selected. */\r\n  _yearSelected(year: number) {\r\n    const month = this._adapter.getMonth(this.activeDate);\r\n    const normalizedDate = this._adapter.createDatetime(year, month, 1, 0, 0);\r\n\r\n    this.selectedChange.emit(this._adapter.createDatetime(\r\n      year,\r\n      month,\r\n      Math.min(this._adapter.getDate(this.activeDate),\r\n        this._adapter.getNumDaysInMonth(normalizedDate)),\r\n      this._adapter.getHour(this.activeDate),\r\n      this._adapter.getMinute(this.activeDate)));\r\n\r\n    if (this.type === \"year\") {\r\n      this._userSelection.emit();\r\n    }\r\n  }\r\n\r\n  _getActiveCell(): number {\r\n    return getActiveOffset(this._adapter, this.activeDate, this.minDate, this.maxDate);\r\n  }\r\n\r\n  _calendarStateDone() {\r\n    this._calendarState = \"\";\r\n  }\r\n\r\n  /** Initializes this year view. */\r\n  private _init() {\r\n\r\n    this._todayYear = this._adapter.getYear(this._adapter.today());\r\n    this._yearLabel = this._adapter.getYearName(this.activeDate);\r\n\r\n\r\n    const activeYear = this._adapter.getYear(this.activeDate);\r\n\r\n    const minYearOfPage = activeYear - getActiveOffset(\r\n      this._adapter, this.activeDate, this.minDate, this.maxDate);\r\n\r\n    this._years = [];\r\n    for (let i = 0, row: number[] = []; i < yearsPerPage; i++) {\r\n      row.push(minYearOfPage + i);\r\n      if (row.length == yearsPerRow) {\r\n        this._years.push(row.map(year => this._createCellForYear(year)));\r\n        row = [];\r\n      }\r\n    }\r\n  }\r\n\r\n  /** Creates an MatDatetimepickerCalendarCell for the given year. */\r\n  private _createCellForYear(year: number) {\r\n    let yearName = this._adapter.getYearName(this._adapter.createDate(year, 0, 1));\r\n    return new MatDatetimepickerCalendarCell(year, yearName, yearName, this._shouldEnableYear(year));\r\n  }\r\n\r\n  /** Whether the given year is enabled. */\r\n  private _shouldEnableYear(year: number) {\r\n    // disable if the year is greater than maxDate lower than minDate\r\n    if (year === undefined || year === null ||\r\n      (this.maxDate && year > this._adapter.getYear(this.maxDate)) ||\r\n      (this.minDate && year < this._adapter.getYear(this.minDate))) {\r\n      return false;\r\n    }\r\n\r\n    // enable if it reaches here and there's no filter defined\r\n    if (!this.dateFilter) {\r\n      return true;\r\n    }\r\n\r\n    const firstOfYear = this._adapter.createDate(year, 0, 1);\r\n\r\n    // If any date in the year is enabled count the year as enabled.\r\n    for (let date = firstOfYear; this._adapter.getYear(date) == year;\r\n         date = this._adapter.addCalendarDays(date, 1)) {\r\n      if (this.dateFilter(date)) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Gets the year in this years range that the given Date falls on.\r\n   * Returns null if the given Date is not in this range.\r\n   */\r\n  private _getYearInCurrentRange(date: D) {\r\n    const year = this._adapter.getYear(date);\r\n    return this._isInRange(year) ?\r\n      year : null;\r\n  }\r\n\r\n  /**\r\n   * Validate if the current year is in the current range\r\n   * Returns true if is in range else returns false\r\n   */\r\n  private _isInRange(year: number): boolean {\r\n\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @param obj The object to check.\r\n   * @returns The given object if it is both a date instance and valid, otherwise null.\r\n   */\r\n  private _getValidDateOrNull(obj: any): D | null {\r\n    return (this._adapter.isDateInstance(obj) && this._adapter.isValid(obj)) ? obj : null;\r\n  }\r\n}\r\n\r\nexport function isSameMultiYearView<D>(\r\n  dateAdapter: DatetimeAdapter<D>, date1: D, date2: D, minDate: D | null, maxDate: D | null): boolean {\r\n  const year1 = dateAdapter.getYear(date1);\r\n  const year2 = dateAdapter.getYear(date2);\r\n  const startingYear = getStartingYear(dateAdapter, minDate, maxDate);\r\n  return Math.floor((year1 - startingYear) / yearsPerPage) ===\r\n    Math.floor((year2 - startingYear) / yearsPerPage);\r\n}\r\n\r\n/**\r\n * When the multi-year view is first opened, the active year will be in view.\r\n * So we compute how many years are between the active year and the *slot* where our\r\n * \"startingYear\" will render when paged into view.\r\n */\r\nexport function getActiveOffset<D>(\r\n  dateAdapter: DatetimeAdapter<D>, activeDate: D, minDate: D | null, maxDate: D | null): number {\r\n  const activeYear = dateAdapter.getYear(activeDate);\r\n  return euclideanModulo((activeYear - getStartingYear(dateAdapter, minDate, maxDate)),\r\n    yearsPerPage);\r\n}\r\n\r\n/**\r\n * We pick a \"starting\" year such that either the maximum year would be at the end\r\n * or the minimum year would be at the beginning of a page.\r\n */\r\nfunction getStartingYear<D>(\r\n  dateAdapter: DatetimeAdapter<D>, minDate: D | null, maxDate: D | null): number {\r\n  let startingYear = 0;\r\n  if (maxDate) {\r\n    const maxYear = dateAdapter.getYear(maxDate);\r\n    startingYear = maxYear - yearsPerPage + 1;\r\n  } else if (minDate) {\r\n    startingYear = dateAdapter.getYear(minDate);\r\n  }\r\n  return startingYear;\r\n}\r\n\r\n/** Gets remainder that is non-negative, even if first number is negative */\r\nfunction euclideanModulo(a: number, b: number): number {\r\n  return (a % b + b) % b;\r\n}\r\n","import {DOWN_ARROW, END, ENTER, HOME, LEFT_ARROW, PAGE_DOWN, PAGE_UP, RIGHT_ARROW, UP_ARROW} from \"@angular/cdk/keycodes\";\r\nimport {\r\n  AfterContentInit,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Inject,\r\n  Input,\r\n  NgZone,\r\n  OnDestroy,\r\n  Optional,\r\n  Output,\r\n  ViewEncapsulation\r\n} from \"@angular/core\";\r\nimport {MatDatepickerIntl} from \"@angular/material/datepicker\";\r\nimport {Subscription} from \"rxjs\";\r\nimport {first} from \"rxjs/operators\";\r\nimport {DatetimeAdapter} from \"../adapter/datetime-adapter\";\r\nimport {MAT_DATETIME_FORMATS, MatDatetimeFormats} from \"../adapter/datetime-formats\";\r\nimport {MatClockView} from \"./clock\";\r\nimport {MatDatetimepickerType} from \"./datetimepicker\";\r\nimport {slideCalendar} from \"./datetimepicker-animations\";\r\nimport {createMissingDateImplError} from \"./datetimepicker-errors\";\r\nimport {MatDatetimepickerFilterType} from \"./datetimepicker-filtertype\";\r\nimport {getActiveOffset, isSameMultiYearView, yearsPerPage, yearsPerRow} from \"./multi-year-view\";\r\n\r\nexport type MatCalendarView = \"clock\" | \"month\" | \"year\" | \"multi-year\";\r\n\r\n/**\r\n * A calendar that is used as part of the datepicker.\r\n * @docs-private\r\n */\r\n@Component({\r\n  selector: \"mat-datetimepicker-calendar\",\r\n  templateUrl: \"calendar.html\",\r\n  styleUrls: [\"calendar.scss\"],\r\n  host: {\r\n    \"[class.mat-datetimepicker-calendar]\": \"true\",\r\n    \"[attr.aria-label]\": \"ariaLabel\",\r\n    \"role\": \"dialog\",\r\n    \"tabindex\": \"0\",\r\n    \"(keydown)\": \"_handleCalendarBodyKeydown($event)\"\r\n  },\r\n  animations: [slideCalendar],\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class MatDatetimepickerCalendar<D> implements AfterContentInit, OnDestroy {\r\n\r\n  @Output() _userSelection = new EventEmitter<void>();\r\n  /** Active multi year view when click on year. */\r\n  @Input() multiYearSelector: boolean = false;\r\n  /** Whether the calendar should be started in month or year view. */\r\n  @Input() startView: MatCalendarView = \"month\";\r\n  @Input() twelvehour: boolean = false;\r\n  @Input() timeInterval: number = 1;\r\n  /** A function used to filter which dates are selectable. */\r\n  @Input() dateFilter: (date: D, type: MatDatetimepickerFilterType) => boolean;\r\n  @Input() ariaLabel = \"Use arrow keys to navigate\";\r\n  @Input() ariaNextMonthLabel = \"Next month\";\r\n  @Input() ariaPrevMonthLabel = \"Previous month\";\r\n  @Input() ariaNextYearLabel = \"Next year\";\r\n  @Input() ariaPrevYearLabel = \"Previous year\";\r\n  @Input() ariaNextMultiYearLabel = \"Next year range\";\r\n  @Input() ariaPrevMultiYearLabel = \"Previous year range\";\r\n  /** Emits when the currently selected date changes. */\r\n  @Output() selectedChange: EventEmitter<D> = new EventEmitter<D>();\r\n  /** Emits when the view has been changed. **/\r\n  @Output() viewChanged: EventEmitter<MatCalendarView> = new EventEmitter<MatCalendarView>();\r\n  _AMPM: string;\r\n  _clockView: MatClockView = \"hour\";\r\n  _calendarState: string;\r\n  private _intlChanges: Subscription;\r\n  private _clampedActiveDate: D;\r\n\r\n  constructor(private _elementRef: ElementRef,\r\n              private _intl: MatDatepickerIntl,\r\n              private _ngZone: NgZone,\r\n              @Optional() private _adapter: DatetimeAdapter<D>,\r\n              @Optional() @Inject(MAT_DATETIME_FORMATS) private _dateFormats: MatDatetimeFormats,\r\n              changeDetectorRef: ChangeDetectorRef) {\r\n    if (!this._adapter) {\r\n      throw createMissingDateImplError(\"DatetimeAdapter\");\r\n    }\r\n\r\n    if (!this._dateFormats) {\r\n      throw createMissingDateImplError(\"MAT_DATETIME_FORMATS\");\r\n    }\r\n\r\n    this._intlChanges = _intl.changes.subscribe(() => changeDetectorRef.markForCheck());\r\n  }\r\n\r\n  private _type: MatDatetimepickerType = \"date\";\r\n\r\n  @Input()\r\n  get type(): MatDatetimepickerType {\r\n    return this._type;\r\n  }\r\n\r\n  set type(value: MatDatetimepickerType) {\r\n    this._type = value || \"date\";\r\n    if (this.type === \"year\") {\r\n      this.multiYearSelector = true;\r\n    }\r\n  }\r\n\r\n  private _startAt: D | null;\r\n\r\n  /** A date representing the period (month or year) to start the calendar in. */\r\n  @Input()\r\n  get startAt(): D | null {\r\n    return this._startAt;\r\n  }\r\n\r\n  set startAt(value: D | null) {\r\n    this._startAt = this._adapter.getValidDateOrNull(value);\r\n  }\r\n\r\n  private _selected: D | null;\r\n\r\n  /** The currently selected date. */\r\n  @Input()\r\n  get selected(): D | null {\r\n    return this._selected;\r\n  }\r\n\r\n  set selected(value: D | null) {\r\n    this._selected = this._adapter.getValidDateOrNull(value);\r\n  }\r\n\r\n  private _minDate: D | null;\r\n\r\n  /** The minimum selectable date. */\r\n  @Input()\r\n  get minDate(): D | null {\r\n    return this._minDate;\r\n  }\r\n\r\n  set minDate(value: D | null) {\r\n    this._minDate = this._adapter.getValidDateOrNull(value);\r\n  }\r\n\r\n  private _maxDate: D | null;\r\n\r\n  /** The maximum selectable date. */\r\n  @Input()\r\n  get maxDate(): D | null {\r\n    return this._maxDate;\r\n  }\r\n\r\n  set maxDate(value: D | null) {\r\n    this._maxDate = this._adapter.getValidDateOrNull(value);\r\n  }\r\n\r\n  /**\r\n   * The current active date. This determines which time period is shown and which date is\r\n   * highlighted when using keyboard navigation.\r\n   */\r\n  get _activeDate(): D {\r\n    return this._clampedActiveDate;\r\n  }\r\n\r\n  set _activeDate(value: D) {\r\n    const oldActiveDate = this._clampedActiveDate;\r\n    this._clampedActiveDate = this._adapter.clampDate(value, this.minDate, this.maxDate);\r\n    if (oldActiveDate && this._clampedActiveDate && this.currentView === \"month\" &&\r\n      !this._adapter.sameMonthAndYear(oldActiveDate, this._clampedActiveDate)) {\r\n      if (this._adapter.isInNextMonth(oldActiveDate, this._clampedActiveDate)) {\r\n        this.calendarState(\"right\");\r\n      } else {\r\n        this.calendarState(\"left\");\r\n      }\r\n    }\r\n  }\r\n\r\n  /** Whether the calendar is in month view. */\r\n  _currentView: MatCalendarView;\r\n\r\n  get currentView(): MatCalendarView {\r\n    return this._currentView;\r\n  }\r\n\r\n  set currentView(view: MatCalendarView) {\r\n    this._currentView = view;\r\n    this.viewChanged.emit(view);\r\n  }\r\n\r\n  /** The label for the current calendar view. */\r\n  get _yearLabel(): string {\r\n    return this._adapter.getYearName(this._activeDate);\r\n  }\r\n\r\n  get _monthYearLabel(): string {\r\n\r\n    if (this.currentView === \"multi-year\") {\r\n      // The offset from the active year to the \"slot\" for the starting year is the\r\n      // *actual* first rendered year in the multi-year view, and the last year is\r\n      // just yearsPerPage - 1 away.\r\n      const activeYear = this._adapter.getYear(this._activeDate);\r\n      const minYearOfPage = activeYear - getActiveOffset(\r\n        this._adapter, this._activeDate, this.minDate, this.maxDate);\r\n      const maxYearOfPage = minYearOfPage + yearsPerPage - 1;\r\n      const minYearName =\r\n        this._adapter.getYearName(this._adapter.createDate(minYearOfPage, 0, 1));\r\n      const maxYearName =\r\n        this._adapter.getYearName(this._adapter.createDate(maxYearOfPage, 0, 1));\r\n      return this._intl.formatYearRange(minYearName, maxYearName);\r\n    }\r\n\r\n    return this.currentView === \"month\" ? this._adapter.getMonthNames(\"long\")[this._adapter.getMonth(this._activeDate)] :\r\n      this._adapter.getYearName(this._activeDate);\r\n  }\r\n\r\n  get _dateLabel(): string {\r\n    switch (this.type) {\r\n      case \"month\":\r\n        return this._adapter.getMonthNames(\"long\")[this._adapter.getMonth(this._activeDate)];\r\n      default:\r\n        return this._adapter.format(this._activeDate, this._dateFormats.display.popupHeaderDateLabel);\r\n    }\r\n  }\r\n\r\n  get _hoursLabel(): string {\r\n    let hour = this._adapter.getHour(this._activeDate);\r\n    if (!!this.twelvehour) {\r\n      if (hour === 0) {\r\n        hour = 24;\r\n      }\r\n      hour = hour > 12 ? (hour - 12) : hour;\r\n    }\r\n    return this._2digit(hour);\r\n  }\r\n\r\n  get _minutesLabel(): string {\r\n    return this._2digit(this._adapter.getMinute(this._activeDate));\r\n  }\r\n\r\n  get _ariaLabelNext(): string {\r\n    switch (this._currentView) {\r\n      case \"month\":\r\n        return this.ariaNextMonthLabel;\r\n      case \"year\":\r\n        return this.ariaNextYearLabel;\r\n      case \"multi-year\":\r\n        return this.ariaNextMultiYearLabel;\r\n      default:\r\n        return \"\";\r\n    }\r\n  }\r\n\r\n  get _ariaLabelPrev(): string {\r\n    switch (this._currentView) {\r\n      case \"month\":\r\n        return this.ariaPrevMonthLabel;\r\n      case \"year\":\r\n        return this.ariaPrevYearLabel;\r\n      case \"multi-year\":\r\n        return this.ariaPrevMultiYearLabel;\r\n      default:\r\n        return \"\";\r\n    }\r\n  }\r\n\r\n  /** Date filter for the month and year views. */\r\n  _dateFilterForViews = (date: D) => {\r\n    return !!date &&\r\n      (!this.dateFilter || this.dateFilter(date, MatDatetimepickerFilterType.DATE)) &&\r\n      (!this.minDate || this._adapter.compareDate(date, this.minDate) >= 0) &&\r\n      (!this.maxDate || this._adapter.compareDate(date, this.maxDate) <= 0);\r\n  };\r\n\r\n  _userSelected(): void {\r\n    this._userSelection.emit();\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    this._activeDate = this.startAt || this._adapter.today();\r\n    this._selectAMPM(this._activeDate);\r\n    this._focusActiveCell();\r\n    if (this.type === \"year\") {\r\n      this.currentView = \"multi-year\";\r\n    } else if (this.type === \"month\") {\r\n      this.currentView = \"year\";\r\n    } else if (this.type === \"time\") {\r\n      this.currentView = \"clock\";\r\n    } else {\r\n      this.currentView = this.startView || \"month\";\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._intlChanges.unsubscribe();\r\n  }\r\n\r\n  /** Handles date selection in the month view. */\r\n  _dateSelected(date: D): void {\r\n    if (this.type === \"date\") {\r\n      if (!this._adapter.sameDate(date, this.selected)) {\r\n        this.selectedChange.emit(date);\r\n      }\r\n    } else {\r\n      this._activeDate = date;\r\n      this.currentView = \"clock\";\r\n    }\r\n  }\r\n\r\n  /** Handles month selection in the year view. */\r\n  _monthSelected(month: D): void {\r\n    if (this.type === \"month\") {\r\n      if (!this._adapter.sameMonthAndYear(month, this.selected)) {\r\n        this.selectedChange.emit(this._adapter.getFirstDateOfMonth(month));\r\n      }\r\n    } else {\r\n      this._activeDate = month;\r\n      this.currentView = \"month\";\r\n      this._clockView = \"hour\";\r\n    }\r\n  }\r\n\r\n  /** Handles year selection in the multi year view. */\r\n  _yearSelected(year: D): void {\r\n    if (this.type === \"year\") {\r\n      if (!this._adapter.sameYear(year, this.selected)) {\r\n        const normalizedDate = this._adapter.createDatetime(this._adapter.getYear(year), 0, 1, 0, 0);\r\n        this.selectedChange.emit(normalizedDate);\r\n      }\r\n    } else {\r\n      this._activeDate = year;\r\n      this.currentView = \"year\";\r\n    }\r\n  }\r\n\r\n  _timeSelected(date: D): void {\r\n    if (this._clockView !== \"minute\") {\r\n      this._activeDate = this._updateDate(date);\r\n      this._clockView = \"minute\";\r\n    } else {\r\n      if (!this._adapter.sameDatetime(date, this.selected)) {\r\n        this.selectedChange.emit(date);\r\n      }\r\n    }\r\n  }\r\n\r\n  _onActiveDateChange(date: D) {\r\n    this._activeDate = date;\r\n  }\r\n\r\n  _updateDate(date: D): D {\r\n    if (!!this.twelvehour) {\r\n      const HOUR = this._adapter.getHour(date);\r\n      if (HOUR === 12) {\r\n        if (this._AMPM === \"AM\") {\r\n          return this._adapter.addCalendarHours(date, -12);\r\n        }\r\n      } else if (this._AMPM === \"PM\") {\r\n        return this._adapter.addCalendarHours(date, 12);\r\n      }\r\n    }\r\n    return date;\r\n  }\r\n\r\n  _selectAMPM(date: D) {\r\n    if (this._adapter.getHour(date) > 11) {\r\n      this._AMPM = \"PM\";\r\n    } else {\r\n      this._AMPM = \"AM\";\r\n    }\r\n  }\r\n\r\n  _ampmClicked(source: string): void {\r\n    if (source === this._AMPM) {\r\n      return;\r\n    }\r\n    this._AMPM = source;\r\n    if (this._AMPM === \"AM\") {\r\n      this._activeDate = this._adapter.addCalendarHours(this._activeDate, -12);\r\n    } else {\r\n      this._activeDate = this._adapter.addCalendarHours(this._activeDate, 12);\r\n    }\r\n\r\n  }\r\n\r\n  _yearClicked(): void {\r\n    if (this.type === \"year\" || this.multiYearSelector) {\r\n      this.currentView = \"multi-year\";\r\n      return;\r\n    }\r\n    this.currentView = \"year\";\r\n  }\r\n\r\n  _dateClicked(): void {\r\n    if (this.type !== \"month\") {\r\n      this.currentView = \"month\";\r\n    }\r\n  }\r\n\r\n  _hoursClicked(): void {\r\n    this.currentView = \"clock\";\r\n    this._clockView = \"hour\";\r\n  }\r\n\r\n  _minutesClicked(): void {\r\n    this.currentView = \"clock\";\r\n    this._clockView = \"minute\";\r\n  }\r\n\r\n  /** Handles user clicks on the previous button. */\r\n  _previousClicked(): void {\r\n    this._activeDate = this.currentView === \"month\" ?\r\n      this._adapter.addCalendarMonths(this._activeDate, -1) :\r\n      this._adapter.addCalendarYears(\r\n        this._activeDate, this.currentView === \"year\" ? -1 : -yearsPerPage\r\n      );\r\n  }\r\n\r\n  /** Handles user clicks on the next button. */\r\n  _nextClicked(): void {\r\n    this._activeDate = this.currentView === \"month\" ?\r\n      this._adapter.addCalendarMonths(this._activeDate, 1) :\r\n      this._adapter.addCalendarYears(\r\n        this._activeDate, this.currentView === \"year\" ? 1 : yearsPerPage\r\n      );\r\n  }\r\n\r\n  /** Whether the previous period button is enabled. */\r\n  _previousEnabled(): boolean {\r\n    if (!this.minDate) {\r\n      return true;\r\n    }\r\n    return !this.minDate || !this._isSameView(this._activeDate, this.minDate);\r\n  }\r\n\r\n  /** Whether the next period button is enabled. */\r\n  _nextEnabled(): boolean {\r\n    return !this.maxDate || !this._isSameView(this._activeDate, this.maxDate);\r\n  }\r\n\r\n  /** Handles keydown events on the calendar body. */\r\n  _handleCalendarBodyKeydown(event: KeyboardEvent): void {\r\n    // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\r\n    // disabled ones from being selected. This may not be ideal, we should look into whether\r\n    // navigation should skip over disabled dates, and if so, how to implement that efficiently.\r\n    if (this.currentView === \"month\") {\r\n      this._handleCalendarBodyKeydownInMonthView(event);\r\n    } else if (this.currentView === \"year\") {\r\n      this._handleCalendarBodyKeydownInYearView(event);\r\n    } else if (this.currentView === \"multi-year\") {\r\n      this._handleCalendarBodyKeydownInMultiYearView(event);\r\n    } else {\r\n      this._handleCalendarBodyKeydownInClockView(event);\r\n    }\r\n  }\r\n\r\n  _focusActiveCell() {\r\n    this._ngZone.runOutsideAngular(() => {\r\n      this._ngZone.onStable.asObservable().pipe(first()).subscribe(() => {\r\n        this._elementRef.nativeElement.focus();\r\n      });\r\n    });\r\n  }\r\n\r\n  _calendarStateDone() {\r\n    this._calendarState = \"\";\r\n  }\r\n\r\n  /** Whether the two dates represent the same view in the current view mode (month or year). */\r\n  private _isSameView(date1: D, date2: D): boolean {\r\n    if (this.currentView === \"month\") {\r\n      return this._adapter.getYear(date1) === this._adapter.getYear(date2) &&\r\n        this._adapter.getMonth(date1) === this._adapter.getMonth(date2);\r\n    }\r\n    if (this.currentView === \"year\") {\r\n      return this._adapter.getYear(date1) === this._adapter.getYear(date2);\r\n    }\r\n    // Otherwise we are in 'multi-year' view.\r\n    return isSameMultiYearView(\r\n      this._adapter, date1, date2, this.minDate, this.maxDate);\r\n  }\r\n\r\n  /** Handles keydown events on the calendar body when calendar is in month view. */\r\n  private _handleCalendarBodyKeydownInMonthView(event: KeyboardEvent): void {\r\n    // tslint:disable-next-line:deprecation\r\n    switch (event.keyCode) {\r\n      case LEFT_ARROW:\r\n        this._activeDate = this._adapter.addCalendarDays(this._activeDate, -1);\r\n        break;\r\n      case RIGHT_ARROW:\r\n        this._activeDate = this._adapter.addCalendarDays(this._activeDate, 1);\r\n        break;\r\n      case UP_ARROW:\r\n        this._activeDate = this._adapter.addCalendarDays(this._activeDate, -7);\r\n        break;\r\n      case DOWN_ARROW:\r\n        this._activeDate = this._adapter.addCalendarDays(this._activeDate, 7);\r\n        break;\r\n      case HOME:\r\n        this._activeDate = this._adapter.addCalendarDays(this._activeDate,\r\n          1 - this._adapter.getDate(this._activeDate));\r\n        break;\r\n      case END:\r\n        this._activeDate = this._adapter.addCalendarDays(this._activeDate,\r\n          (this._adapter.getNumDaysInMonth(this._activeDate) -\r\n            this._adapter.getDate(this._activeDate)));\r\n        break;\r\n      case PAGE_UP:\r\n        this._activeDate = event.altKey ?\r\n          this._adapter.addCalendarYears(this._activeDate, -1) :\r\n          this._adapter.addCalendarMonths(this._activeDate, -1);\r\n        break;\r\n      case PAGE_DOWN:\r\n        this._activeDate = event.altKey ?\r\n          this._adapter.addCalendarYears(this._activeDate, 1) :\r\n          this._adapter.addCalendarMonths(this._activeDate, 1);\r\n        break;\r\n      case ENTER:\r\n        if (this._dateFilterForViews(this._activeDate)) {\r\n          this._dateSelected(this._activeDate);\r\n          // Prevent unexpected default actions such as form submission.\r\n          event.preventDefault();\r\n        }\r\n        return;\r\n      default:\r\n        // Don't prevent default or focus active cell on keys that we don't explicitly handle.\r\n        return;\r\n    }\r\n\r\n    // Prevent unexpected default actions such as form submission.\r\n    event.preventDefault();\r\n  }\r\n\r\n  /** Handles keydown events on the calendar body when calendar is in year view. */\r\n  private _handleCalendarBodyKeydownInYearView(event: KeyboardEvent): void {\r\n    // tslint:disable-next-line:deprecation\r\n    switch (event.keyCode) {\r\n      case LEFT_ARROW:\r\n        this._activeDate = this._adapter.addCalendarMonths(this._activeDate, -1);\r\n        break;\r\n      case RIGHT_ARROW:\r\n        this._activeDate = this._adapter.addCalendarMonths(this._activeDate, 1);\r\n        break;\r\n      case UP_ARROW:\r\n        this._activeDate = this._prevMonthInSameCol(this._activeDate);\r\n        break;\r\n      case DOWN_ARROW:\r\n        this._activeDate = this._nextMonthInSameCol(this._activeDate);\r\n        break;\r\n      case HOME:\r\n        this._activeDate = this._adapter.addCalendarMonths(this._activeDate,\r\n          -this._adapter.getMonth(this._activeDate));\r\n        break;\r\n      case END:\r\n        this._activeDate = this._adapter.addCalendarMonths(this._activeDate,\r\n          11 - this._adapter.getMonth(this._activeDate));\r\n        break;\r\n      case PAGE_UP:\r\n        this._activeDate =\r\n          this._adapter.addCalendarYears(this._activeDate, event.altKey ? -10 : -1);\r\n        break;\r\n      case PAGE_DOWN:\r\n        this._activeDate =\r\n          this._adapter.addCalendarYears(this._activeDate, event.altKey ? 10 : 1);\r\n        break;\r\n      case ENTER:\r\n        this._monthSelected(this._activeDate);\r\n        break;\r\n      default:\r\n        // Don't prevent default or focus active cell on keys that we don't explicitly handle.\r\n        return;\r\n    }\r\n\r\n    // Prevent unexpected default actions such as form submission.\r\n    event.preventDefault();\r\n  }\r\n\r\n  /** Handles keydown events on the calendar body when calendar is in multi-year view. */\r\n  private _handleCalendarBodyKeydownInMultiYearView(event: KeyboardEvent): void {\r\n    // tslint:disable-next-line:deprecation\r\n    switch (event.keyCode) {\r\n      case LEFT_ARROW:\r\n        this._activeDate = this._adapter.addCalendarYears(this._activeDate, -1);\r\n        break;\r\n      case RIGHT_ARROW:\r\n        this._activeDate = this._adapter.addCalendarYears(this._activeDate, 1);\r\n        break;\r\n      case UP_ARROW:\r\n        this._activeDate = this._adapter.addCalendarYears(this._activeDate, -yearsPerRow);\r\n        break;\r\n      case DOWN_ARROW:\r\n        this._activeDate = this._adapter.addCalendarYears(this._activeDate, yearsPerRow);\r\n        break;\r\n      case HOME:\r\n        this._activeDate = this._adapter.addCalendarYears(this._activeDate,\r\n          -getActiveOffset(this._adapter, this._activeDate, this.minDate, this.maxDate));\r\n        break;\r\n      case END:\r\n        this._activeDate = this._adapter.addCalendarYears(this._activeDate,\r\n          yearsPerPage - getActiveOffset(\r\n          this._adapter, this._activeDate, this.minDate, this.maxDate) - 1);\r\n        break;\r\n      case PAGE_UP:\r\n        this._activeDate =\r\n          this._adapter.addCalendarYears(\r\n            this._activeDate, event.altKey ? -yearsPerPage * 10 : -yearsPerPage);\r\n        break;\r\n      case PAGE_DOWN:\r\n        this._activeDate =\r\n          this._adapter.addCalendarYears(\r\n            this._activeDate, event.altKey ? yearsPerPage * 10 : yearsPerPage);\r\n        break;\r\n      case ENTER:\r\n        this._yearSelected(this._activeDate);\r\n        break;\r\n      default:\r\n        // Don't prevent default or focus active cell on keys that we don't explicitly handle.\r\n        return;\r\n    }\r\n  }\r\n\r\n  /** Handles keydown events on the calendar body when calendar is in month view. */\r\n  private _handleCalendarBodyKeydownInClockView(event: KeyboardEvent): void {\r\n    // tslint:disable-next-line:deprecation\r\n    switch (event.keyCode) {\r\n      case UP_ARROW:\r\n        this._activeDate = this._clockView === \"hour\" ?\r\n          this._adapter.addCalendarHours(this._activeDate, 1) :\r\n          this._adapter.addCalendarMinutes(this._activeDate, 1);\r\n        break;\r\n      case DOWN_ARROW:\r\n        this._activeDate = this._clockView === \"hour\" ?\r\n          this._adapter.addCalendarHours(this._activeDate, -1) :\r\n          this._adapter.addCalendarMinutes(this._activeDate, -1);\r\n        break;\r\n      case ENTER:\r\n        this._timeSelected(this._activeDate);\r\n        return;\r\n      default:\r\n        // Don't prevent default or focus active cell on keys that we don't explicitly handle.\r\n        return;\r\n    }\r\n\r\n    // Prevent unexpected default actions such as form submission.\r\n    event.preventDefault();\r\n  }\r\n\r\n  /**\r\n   * Determine the date for the month that comes before the given month in the same column in the\r\n   * calendar table.\r\n   */\r\n  private _prevMonthInSameCol(date: D): D {\r\n    // Determine how many months to jump forward given that there are 2 empty slots at the beginning\r\n    // of each year.\r\n    const increment = this._adapter.getMonth(date) <= 4 ? -5 :\r\n      (this._adapter.getMonth(date) >= 7 ? -7 : -12);\r\n    return this._adapter.addCalendarMonths(date, increment);\r\n  }\r\n\r\n  /**\r\n   * Determine the date for the month that comes after the given month in the same column in the\r\n   * calendar table.\r\n   */\r\n  private _nextMonthInSameCol(date: D): D {\r\n    // Determine how many months to jump forward given that there are 2 empty slots at the beginning\r\n    // of each year.\r\n    const increment = this._adapter.getMonth(date) <= 4 ? 7 :\r\n      (this._adapter.getMonth(date) >= 7 ? 5 : 12);\r\n    return this._adapter.addCalendarMonths(date, increment);\r\n  }\r\n\r\n  private calendarState(direction: string): void {\r\n    this._calendarState = direction;\r\n  }\r\n\r\n  private _2digit(n: number) {\r\n    return (\"00\" + n).slice(-2);\r\n  }\r\n}\r\n","/* tslint:disable */\r\nimport {AfterContentInit, Component, ElementRef, EventEmitter, Input, Output} from \"@angular/core\";\r\nimport {DatetimeAdapter} from \"../adapter/datetime-adapter\";\r\nimport {MatDatetimepickerFilterType} from \"./datetimepicker-filtertype\";\r\n\r\nexport const CLOCK_RADIUS = 50;\r\nexport const CLOCK_INNER_RADIUS = 27.5;\r\nexport const CLOCK_OUTER_RADIUS = 41.25;\r\nexport const CLOCK_TICK_RADIUS = 7.0833;\r\n\r\nexport type MatClockView = \"hour\" | \"minute\";\r\n\r\n/**\r\n * A clock that is used as part of the datepicker.\r\n * @docs-private\r\n */\r\n@Component({\r\n  selector: \"mat-datetimepicker-clock\",\r\n  templateUrl: \"clock.html\",\r\n  styleUrls: [\"clock.scss\"],\r\n  host: {\r\n    \"role\": \"clock\",\r\n    \"(mousedown)\": \"_handleMousedown($event)\"\r\n  }\r\n})\r\nexport class MatDatetimepickerClock<D> implements AfterContentInit {\r\n\r\n  @Output() _userSelection = new EventEmitter<void>();\r\n  /** A function used to filter which dates are selectable. */\r\n  @Input() dateFilter: (date: D, type: MatDatetimepickerFilterType) => boolean;\r\n  @Input() interval: number = 1;\r\n  @Input() twelvehour: boolean = false;\r\n  /** Emits when the currently selected date changes. */\r\n  @Output() selectedChange = new EventEmitter<D>();\r\n  @Output() activeDateChange = new EventEmitter<D>();\r\n  /** Hours and Minutes representing the clock view. */\r\n  _hours: Array<Object> = [];\r\n  _minutes: Array<Object> = [];\r\n  /** Whether the clock is in hour view. */\r\n  _hourView: boolean = true;\r\n  _selectedHour: number;\r\n  _selectedMinute: number;\r\n  private _timeChanged = false;\r\n  private mouseMoveListener: any;\r\n  private mouseUpListener: any;\r\n\r\n  constructor(private _element: ElementRef,\r\n              private _adapter: DatetimeAdapter<D>) {\r\n    this.mouseMoveListener = (event: any) => {\r\n      this._handleMousemove(event);\r\n    };\r\n    this.mouseUpListener = () => {\r\n      this._handleMouseup();\r\n    };\r\n  }\r\n\r\n  private _activeDate: D;\r\n\r\n  /**\r\n   * The date to display in this clock view.\r\n   */\r\n  @Input()\r\n  get activeDate(): D {\r\n    return this._activeDate;\r\n  }\r\n\r\n  set activeDate(value: D) {\r\n    let oldActiveDate = this._activeDate;\r\n    this._activeDate = this._adapter.clampDate(value, this.minDate, this.maxDate);\r\n    if (!this._adapter.sameMinute(oldActiveDate, this._activeDate)) {\r\n      this._init();\r\n    }\r\n  }\r\n\r\n  private _selected: D | null;\r\n\r\n  /** The currently selected date. */\r\n  @Input()\r\n  get selected(): D | null {\r\n    return this._selected;\r\n  }\r\n\r\n  set selected(value: D | null) {\r\n    this._selected = this._adapter.getValidDateOrNull(this._adapter.deserialize(value));\r\n    if (this._selected) {\r\n      this.activeDate = this._selected;\r\n    }\r\n  }\r\n\r\n  private _minDate: D | null;\r\n\r\n  /** The minimum selectable date. */\r\n  @Input()\r\n  get minDate(): D | null {\r\n    return this._minDate;\r\n  }\r\n\r\n  set minDate(value: D | null) {\r\n    this._minDate = this._adapter.getValidDateOrNull(this._adapter.deserialize(value));\r\n  }\r\n\r\n  private _maxDate: D | null;\r\n\r\n  /** The maximum selectable date. */\r\n  @Input()\r\n  get maxDate(): D | null {\r\n    return this._maxDate;\r\n  }\r\n\r\n  set maxDate(value: D | null) {\r\n    this._maxDate = this._adapter.getValidDateOrNull(this._adapter.deserialize(value));\r\n  }\r\n\r\n  /** Whether the clock should be started in hour or minute view. */\r\n  @Input()\r\n  set startView(value: MatClockView) {\r\n    this._hourView = value != \"minute\";\r\n  }\r\n\r\n  get _hand(): any {\r\n    let hour = this._adapter.getHour(this.activeDate);\r\n    if (!!this.twelvehour) {\r\n      if (hour === 0) {\r\n        hour = 24;\r\n      }\r\n      this._selectedHour = hour > 12 ? (hour - 12) : hour;\r\n    } else {\r\n      this._selectedHour = hour;\r\n    }\r\n    this._selectedMinute = this._adapter.getMinute(this.activeDate);\r\n    let deg = 0;\r\n    let radius = CLOCK_OUTER_RADIUS;\r\n    if (this._hourView) {\r\n      let outer = this._selectedHour > 0 && this._selectedHour < 13;\r\n      radius = outer ? CLOCK_OUTER_RADIUS : CLOCK_INNER_RADIUS;\r\n      if (this.twelvehour) {\r\n        radius = CLOCK_OUTER_RADIUS;\r\n      }\r\n      deg = Math.round(this._selectedHour * (360 / (24 / 2)));\r\n    } else {\r\n      deg = Math.round(this._selectedMinute * (360 / 60));\r\n    }\r\n    return {\r\n      \"transform\": `rotate(${deg}deg)`,\r\n      \"height\": `${radius}%`,\r\n      \"margin-top\": `${50 - radius}%`\r\n    };\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    this.activeDate = this._activeDate || this._adapter.today();\r\n    this._init();\r\n  }\r\n\r\n  /** Handles mousedown events on the clock body. */\r\n  _handleMousedown(event: any) {\r\n    this._timeChanged = false;\r\n    this.setTime(event);\r\n    document.addEventListener(\"mousemove\", this.mouseMoveListener);\r\n    document.addEventListener(\"touchmove\", this.mouseMoveListener);\r\n    document.addEventListener(\"mouseup\", this.mouseUpListener);\r\n    document.addEventListener(\"touchend\", this.mouseUpListener);\r\n  }\r\n\r\n  _handleMousemove(event: any) {\r\n    event.preventDefault();\r\n    this.setTime(event);\r\n  }\r\n\r\n  _handleMouseup() {\r\n    document.removeEventListener(\"mousemove\", this.mouseMoveListener);\r\n    document.removeEventListener(\"touchmove\", this.mouseMoveListener);\r\n    document.removeEventListener(\"mouseup\", this.mouseUpListener);\r\n    document.removeEventListener(\"touchend\", this.mouseUpListener);\r\n    if (this._timeChanged) {\r\n      this.selectedChange.emit(this.activeDate);\r\n      if (!this._hourView) {\r\n        this._userSelection.emit();\r\n      }\r\n    }\r\n  }\r\n\r\n  /** Initializes this clock view. */\r\n  private _init() {\r\n    this._hours.length = 0;\r\n    this._minutes.length = 0;\r\n\r\n    let hourNames = this._adapter.getHourNames();\r\n    let minuteNames = this._adapter.getMinuteNames();\r\n\r\n    if (this.twelvehour) {\r\n      for (let i = 1; i < (hourNames.length / 2) + 1; i++) {\r\n        let radian = i / 6 * Math.PI;\r\n        let radius = CLOCK_OUTER_RADIUS;\r\n        const date = this._adapter.createDatetime(\r\n          this._adapter.getYear(this.activeDate),\r\n          this._adapter.getMonth(this.activeDate),\r\n          this._adapter.getDate(this.activeDate), i + 1, 0);\r\n        let enabled =\r\n          (!this.minDate || this._adapter.compareDatetime(date, this.minDate) >= 0) &&\r\n          (!this.maxDate || this._adapter.compareDatetime(date, this.maxDate) <= 0);\r\n        this._hours.push({\r\n          value: i,\r\n          displayValue: i === 0 ? \"00\" : hourNames[i],\r\n          enabled: enabled,\r\n          top: CLOCK_RADIUS - Math.cos(radian) * radius - CLOCK_TICK_RADIUS,\r\n          left: CLOCK_RADIUS + Math.sin(radian) * radius - CLOCK_TICK_RADIUS\r\n        });\r\n      }\r\n    } else {\r\n      for (let i = 0; i < hourNames.length; i++) {\r\n        let radian = i / 6 * Math.PI;\r\n        let outer = i > 0 && i < 13,\r\n          radius = outer ? CLOCK_OUTER_RADIUS : CLOCK_INNER_RADIUS;\r\n        const date = this._adapter.createDatetime(\r\n          this._adapter.getYear(this.activeDate),\r\n          this._adapter.getMonth(this.activeDate),\r\n          this._adapter.getDate(this.activeDate), i, 0);\r\n        let enabled =\r\n          (!this.minDate || this._adapter.compareDatetime(date, this.minDate) >= 0) &&\r\n          (!this.maxDate || this._adapter.compareDatetime(date, this.maxDate) <= 0) &&\r\n          (!this.dateFilter || this.dateFilter(date, MatDatetimepickerFilterType.HOUR));\r\n        this._hours.push({\r\n          value: i,\r\n          displayValue: i === 0 ? \"00\" : hourNames[i],\r\n          enabled: enabled,\r\n          top: CLOCK_RADIUS - Math.cos(radian) * radius - CLOCK_TICK_RADIUS,\r\n          left: CLOCK_RADIUS + Math.sin(radian) * radius - CLOCK_TICK_RADIUS,\r\n          fontSize: i > 0 && i < 13 ? \"\" : \"80%\"\r\n        });\r\n      }\r\n    }\r\n\r\n    for (let i = 0; i < minuteNames.length; i += 5) {\r\n      let radian = i / 30 * Math.PI;\r\n      const date = this._adapter.createDatetime(\r\n        this._adapter.getYear(this.activeDate),\r\n        this._adapter.getMonth(this.activeDate),\r\n        this._adapter.getDate(this.activeDate), this._adapter.getHour(this.activeDate), i);\r\n      let enabled =\r\n        (!this.minDate || this._adapter.compareDatetime(date, this.minDate) >= 0) &&\r\n        (!this.maxDate || this._adapter.compareDatetime(date, this.maxDate) <= 0) &&\r\n        (!this.dateFilter || this.dateFilter(date, MatDatetimepickerFilterType.MINUTE));\r\n      this._minutes.push({\r\n        value: i,\r\n        displayValue: i === 0 ? \"00\" : minuteNames[i],\r\n        enabled: enabled,\r\n        top: CLOCK_RADIUS - Math.cos(radian) * CLOCK_OUTER_RADIUS - CLOCK_TICK_RADIUS,\r\n        left: CLOCK_RADIUS + Math.sin(radian) * CLOCK_OUTER_RADIUS - CLOCK_TICK_RADIUS\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set Time\r\n   * @param event\r\n   */\r\n  private setTime(event: any) {\r\n    let trigger = this._element.nativeElement;\r\n    let triggerRect = trigger.getBoundingClientRect();\r\n    let width = trigger.offsetWidth;\r\n    let height = trigger.offsetHeight;\r\n    let pageX = event.pageX !== undefined ? event.pageX : event.touches[0].pageX;\r\n    let pageY = event.pageY !== undefined ? event.pageY : event.touches[0].pageY;\r\n    let x = (width / 2) - (pageX - triggerRect.left - window.pageXOffset);\r\n    let y = (height / 2) - (pageY - triggerRect.top - window.pageYOffset);\r\n    let radian = Math.atan2(-x, y);\r\n    let unit = Math.PI / (this._hourView ? 6 : (this.interval ? (30 / this.interval) : 30));\r\n    let z = Math.sqrt(x * x + y * y);\r\n    let outer = this._hourView && z > ((width * (CLOCK_OUTER_RADIUS / 100)) +\r\n      (width * (CLOCK_INNER_RADIUS / 100))) / 2;\r\n\r\n    if (radian < 0) {\r\n      radian = Math.PI * 2 + radian;\r\n    }\r\n    let value = Math.round(radian / unit);\r\n\r\n    let date;\r\n    if (this._hourView) {\r\n      if (this.twelvehour) {\r\n        value = value === 0 ? 12 : value;\r\n      } else {\r\n        if (value === 12) {\r\n          value = 0;\r\n        }\r\n        value = outer ? (value === 0 ? 12 : value) : value === 0 ? 0 : value + 12;\r\n      }\r\n      date = this._adapter.createDatetime(\r\n        this._adapter.getYear(this.activeDate),\r\n        this._adapter.getMonth(this.activeDate),\r\n        this._adapter.getDate(this.activeDate), value, this._adapter.getMinute(this.activeDate));\r\n    } else {\r\n      if (this.interval) {\r\n        value *= this.interval;\r\n      }\r\n      if (value === 60) {\r\n        value = 0;\r\n      }\r\n      date = this._adapter.createDatetime(\r\n        this._adapter.getYear(this.activeDate),\r\n        this._adapter.getMonth(this.activeDate),\r\n        this._adapter.getDate(this.activeDate), this._adapter.getHour(this.activeDate), value);\r\n    }\r\n\r\n    const clamped = this._adapter.clampDate(date, this.minDate, this.maxDate);\r\n    if (date === clamped) {\r\n      this._timeChanged = true;\r\n      this.activeDate = clamped;\r\n      this.activeDateChange.emit(this.activeDate);\r\n    }\r\n  }\r\n}\r\n","import {Directionality} from \"@angular/cdk/bidi\";\r\nimport {coerceBooleanProperty} from \"@angular/cdk/coercion\";\r\nimport {ESCAPE} from \"@angular/cdk/keycodes\";\r\nimport {Overlay, OverlayConfig, OverlayRef, PositionStrategy} from \"@angular/cdk/overlay\";\r\nimport {ComponentPortal} from \"@angular/cdk/portal\";\r\nimport {DOCUMENT} from \"@angular/common\";\r\nimport {\r\n  AfterContentInit,\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  ComponentRef,\r\n  EventEmitter,\r\n  Inject,\r\n  Input,\r\n  NgZone,\r\n  OnDestroy,\r\n  Optional,\r\n  Output,\r\n  ViewChild,\r\n  ViewContainerRef,\r\n  ViewEncapsulation\r\n} from \"@angular/core\";\r\nimport {MAT_DATEPICKER_SCROLL_STRATEGY} from \"@angular/material/datepicker\";\r\nimport {MatDialog, MatDialogRef} from \"@angular/material/dialog\";\r\nimport {Subject, Subscription} from \"rxjs\";\r\nimport {first} from \"rxjs/operators\";\r\nimport {DatetimeAdapter} from \"../adapter/datetime-adapter\";\r\nimport {MatCalendarView, MatDatetimepickerCalendar} from \"./calendar\";\r\nimport {createMissingDateImplError} from \"./datetimepicker-errors\";\r\nimport {MatDatetimepickerFilterType} from \"./datetimepicker-filtertype\";\r\nimport {MatDatetimepickerInput} from \"./datetimepicker-input\";\r\n\r\nexport type MatDatetimepickerType = \"date\" | \"time\" | \"month\" | \"year\" | \"datetime\";\r\nexport type MatDatetimepickerMode = \"auto\" | \"portrait\" | \"landscape\";\r\n\r\n/** Used to generate a unique ID for each datepicker instance. */\r\nlet datetimepickerUid = 0;\r\n\r\n/**\r\n * Component used as the content for the datepicker dialog and popup. We use this instead of using\r\n * MatCalendar directly as the content so we can control the initial focus. This also gives us a\r\n * place to put additional features of the popup that are not part of the calendar itself in the\r\n * future. (e.g. confirmation buttons).\r\n * @docs-private\r\n */\r\n@Component({\r\n  selector: \"mat-datetimepicker-content\",\r\n  templateUrl: \"datetimepicker-content.html\",\r\n  styleUrls: [\"datetimepicker-content.scss\"],\r\n  host: {\r\n    \"class\": \"mat-datetimepicker-content\",\r\n    \"[class.mat-datetimepicker-content-touch]\": \"datetimepicker?.touchUi\",\r\n    \"(keydown)\": \"_handleKeydown($event)\"\r\n  },\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class MatDatetimepickerContent<D> implements AfterContentInit {\r\n  datetimepicker: MatDatetimepicker<D>;\r\n\r\n  @ViewChild(MatDatetimepickerCalendar, {static: true}) _calendar: MatDatetimepickerCalendar<D>;\r\n\r\n  ngAfterContentInit() {\r\n    this._calendar._focusActiveCell();\r\n  }\r\n\r\n  /**\r\n   * Handles keydown event on datepicker content.\r\n   * @param event The event.\r\n   */\r\n  _handleKeydown(event: KeyboardEvent): void {\r\n    // tslint:disable-next-line:deprecation\r\n    if (event.keyCode === ESCAPE) {\r\n      this.datetimepicker.close();\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    }\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: \"mat-datetimepicker\",\r\n  exportAs: \"matDatetimepicker\",\r\n  template: \"\",\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n  preserveWhitespaces: false\r\n})\r\nexport class MatDatetimepicker<D> implements OnDestroy {\r\n  /** Active multi year view when click on year. */\r\n  @Input() multiYearSelector: boolean = false;\r\n  /** if true change the clock to 12 hour format. */\r\n  @Input() twelvehour: boolean = false;\r\n  /** The view that the calendar should start in. */\r\n  @Input() startView: MatCalendarView = \"month\";\r\n  @Input() mode: MatDatetimepickerMode = \"auto\";\r\n  @Input() timeInterval: number = 1;\r\n  @Input() ariaNextMonthLabel = \"Next month\";\r\n  @Input() ariaPrevMonthLabel = \"Previous month\";\r\n  @Input() ariaNextYearLabel = \"Next year\";\r\n  @Input() ariaPrevYearLabel = \"Previous year\";\r\n  /**\r\n   * Emits new selected date when selected date changes.\r\n   * @deprecated Switch to the `dateChange` and `dateInput` binding on the input element.\r\n   */\r\n  @Output() selectedChanged = new EventEmitter<D>();\r\n  /** Classes to be passed to the date picker panel. Supports the same syntax as `ngClass`. */\r\n  @Input() panelClass: string | string[];\r\n  /** Emits when the datepicker has been opened. */\r\n    // tslint:disable-next-line:no-output-rename\r\n  @Output(\"opened\") openedStream: EventEmitter<void> = new EventEmitter<void>();\r\n  /** Emits when the datepicker has been closed. */\r\n    // tslint:disable-next-line:no-output-rename\r\n  @Output(\"closed\") closedStream: EventEmitter<void> = new EventEmitter<void>();\r\n  /** Emits when the view has been changed. **/\r\n  @Output() viewChanged: EventEmitter<MatCalendarView> = new EventEmitter<MatCalendarView>();\r\n  /** Whether the calendar is open. */\r\n  opened = false;\r\n  /** The id for the datepicker calendar. */\r\n  id = `mat-datetimepicker-${datetimepickerUid++}`;\r\n  /** The input element this datepicker is associated with. */\r\n  _datepickerInput: MatDatetimepickerInput<D>;\r\n  /** Emits when the datepicker is disabled. */\r\n  _disabledChange = new Subject<boolean>();\r\n  private _validSelected: D | null = null;\r\n  /** A reference to the overlay when the calendar is opened as a popup. */\r\n  private _popupRef: OverlayRef;\r\n  /** A reference to the dialog when the calendar is opened as a dialog. */\r\n  private _dialogRef: MatDialogRef<any> | null;\r\n  /** A portal containing the calendar for this datepicker. */\r\n  private _calendarPortal: ComponentPortal<MatDatetimepickerContent<D>>;\r\n  /** The element that was focused before the datepicker was opened. */\r\n  private _focusedElementBeforeOpen: HTMLElement | null = null;\r\n  private _inputSubscription = Subscription.EMPTY;\r\n\r\n  constructor(private _dialog: MatDialog,\r\n              private _overlay: Overlay,\r\n              private _ngZone: NgZone,\r\n              private _viewContainerRef: ViewContainerRef,\r\n              @Inject(MAT_DATEPICKER_SCROLL_STRATEGY) private _scrollStrategy,\r\n              @Optional() private _dateAdapter: DatetimeAdapter<D>,\r\n              @Optional() private _dir: Directionality,\r\n              @Optional() @Inject(DOCUMENT) private _document: any) {\r\n    if (!this._dateAdapter) {\r\n      throw createMissingDateImplError(\"DateAdapter\");\r\n    }\r\n  }\r\n\r\n  private _startAt: D | null;\r\n\r\n  /** The date to open the calendar to initially. */\r\n  @Input()\r\n  get startAt(): D | null {\r\n    // If an explicit startAt is set we start there, otherwise we start at whatever the currently\r\n    // selected value is.\r\n    return this._startAt || (this._datepickerInput ? this._datepickerInput.value : null);\r\n  }\r\n\r\n  set startAt(date: D | null) {\r\n    this._startAt = this._dateAdapter.getValidDateOrNull(date);\r\n  }\r\n\r\n  private _openOnFocus: boolean;\r\n\r\n  @Input()\r\n  get openOnFocus(): boolean {\r\n    return this._openOnFocus;\r\n  }\r\n\r\n  set openOnFocus(value: boolean) {\r\n    this._openOnFocus = coerceBooleanProperty(value);\r\n  }\r\n\r\n  private _type: MatDatetimepickerType = \"date\";\r\n\r\n  @Input()\r\n  get type() {\r\n    return this._type;\r\n  }\r\n\r\n  set type(value: MatDatetimepickerType) {\r\n    this._type = value || \"date\";\r\n  }\r\n\r\n  private _touchUi = false;\r\n\r\n  /**\r\n   * Whether the calendar UI is in touch mode. In touch mode the calendar opens in a dialog rather\r\n   * than a popup and elements have more padding to allow for bigger touch targets.\r\n   */\r\n  @Input()\r\n  get touchUi(): boolean {\r\n    return this._touchUi;\r\n  }\r\n\r\n  set touchUi(value: boolean) {\r\n    this._touchUi = coerceBooleanProperty(value);\r\n  }\r\n\r\n  private _disabled: boolean;\r\n\r\n  /** Whether the datepicker pop-up should be disabled. */\r\n  @Input()\r\n  get disabled(): boolean {\r\n    return this._disabled === undefined && this._datepickerInput ?\r\n      this._datepickerInput.disabled : !!this._disabled;\r\n  }\r\n\r\n  set disabled(value: boolean) {\r\n    const newValue = coerceBooleanProperty(value);\r\n\r\n    if (newValue !== this._disabled) {\r\n      this._disabled = newValue;\r\n      this._disabledChange.next(newValue);\r\n    }\r\n  }\r\n\r\n  /** The currently selected date. */\r\n  get _selected(): D | null {\r\n    return this._validSelected;\r\n  }\r\n\r\n  set _selected(value: D | null) {\r\n    this._validSelected = value;\r\n  }\r\n\r\n  /** The minimum selectable date. */\r\n  get _minDate(): D | null {\r\n    return this._datepickerInput && this._datepickerInput.min;\r\n  }\r\n\r\n  /** The maximum selectable date. */\r\n  get _maxDate(): D | null {\r\n    return this._datepickerInput && this._datepickerInput.max;\r\n  }\r\n\r\n  get _dateFilter(): (date: D | null, type: MatDatetimepickerFilterType) => boolean {\r\n    return this._datepickerInput && this._datepickerInput._dateFilter;\r\n  }\r\n\r\n  _handleFocus() {\r\n    if (!this.opened && this.openOnFocus) {\r\n      this.open();\r\n    }\r\n  }\r\n\r\n  _viewChanged(type: MatCalendarView): void {\r\n    this.viewChanged.emit(type);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.close();\r\n    this._inputSubscription.unsubscribe();\r\n    this._disabledChange.complete();\r\n\r\n    if (this._popupRef) {\r\n      this._popupRef.dispose();\r\n    }\r\n  }\r\n\r\n  /** Selects the given date */\r\n  _select(date: D): void {\r\n    const oldValue = this._selected;\r\n    this._selected = date;\r\n    if (!this._dateAdapter.sameDatetime(oldValue, this._selected)) {\r\n      // tslint:disable-next-line deprecation\r\n      this.selectedChanged.emit(date);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Register an input with this datepicker.\r\n   * @param input The datepicker input to register with this datepicker.\r\n   */\r\n  _registerInput(input: MatDatetimepickerInput<D>): void {\r\n    if (this._datepickerInput) {\r\n      throw Error(\"A MatDatepicker can only be associated with a single input.\");\r\n    }\r\n    this._datepickerInput = input;\r\n    this._inputSubscription =\r\n      this._datepickerInput._valueChange.subscribe((value: D | null) => this._selected = value);\r\n  }\r\n\r\n  /** Open the calendar. */\r\n  open(): void {\r\n    if (this.opened || this.disabled) {\r\n      return;\r\n    }\r\n    if (!this._datepickerInput) {\r\n      throw Error(\"Attempted to open an MatDatepicker with no associated input.\");\r\n    }\r\n    if (this._document) {\r\n      this._focusedElementBeforeOpen = this._document.activeElement;\r\n    }\r\n\r\n    this.touchUi ? this._openAsDialog() : this._openAsPopup();\r\n    this.opened = true;\r\n    this.openedStream.emit();\r\n  }\r\n\r\n  /** Close the calendar. */\r\n  close(): void {\r\n    if (!this.opened) {\r\n      return;\r\n    }\r\n    if (this._popupRef && this._popupRef.hasAttached()) {\r\n      this._popupRef.detach();\r\n    }\r\n    if (this._dialogRef) {\r\n      this._dialogRef.close();\r\n      this._dialogRef = null;\r\n    }\r\n    if (this._calendarPortal && this._calendarPortal.isAttached) {\r\n      this._calendarPortal.detach();\r\n    }\r\n\r\n    const completeClose = () => {\r\n      // The `_opened` could've been reset already if\r\n      // we got two events in quick succession.\r\n      if (this.opened) {\r\n        this.opened = false;\r\n        this.closedStream.emit();\r\n        this._focusedElementBeforeOpen = null;\r\n      }\r\n    };\r\n\r\n    if (this._focusedElementBeforeOpen &&\r\n      typeof this._focusedElementBeforeOpen.focus === \"function\") {\r\n      // Because IE moves focus asynchronously, we can't count on it being restored before we've\r\n      // marked the datepicker as closed. If the event fires out of sequence and the element that\r\n      // we're refocusing opens the datepicker on focus, the user could be stuck with not being\r\n      // able to close the calendar at all. We work around it by making the logic, that marks\r\n      // the datepicker as closed, async as well.\r\n      this._focusedElementBeforeOpen.focus();\r\n      setTimeout(completeClose);\r\n    } else {\r\n      completeClose();\r\n    }\r\n  }\r\n\r\n  /** Open the calendar as a dialog. */\r\n  private _openAsDialog(): void {\r\n    this._dialogRef = this._dialog.open(MatDatetimepickerContent, {\r\n      direction: this._dir ? this._dir.value : \"ltr\",\r\n      viewContainerRef: this._viewContainerRef,\r\n      panelClass: \"mat-datetimepicker-dialog\"\r\n    });\r\n    this._dialogRef.afterClosed().subscribe(() => this.close());\r\n    this._dialogRef.componentInstance.datetimepicker = this;\r\n  }\r\n\r\n  /** Open the calendar as a popup. */\r\n  private _openAsPopup(): void {\r\n    if (!this._calendarPortal) {\r\n      this._calendarPortal = new ComponentPortal<MatDatetimepickerContent<D>>(MatDatetimepickerContent, this._viewContainerRef);\r\n    }\r\n\r\n    if (!this._popupRef) {\r\n      this._createPopup();\r\n    }\r\n\r\n    if (!this._popupRef.hasAttached()) {\r\n      const componentRef: ComponentRef<MatDatetimepickerContent<D>> =\r\n        this._popupRef.attach(this._calendarPortal);\r\n      componentRef.instance.datetimepicker = this;\r\n\r\n      // Update the position once the calendar has rendered.\r\n      this._ngZone.onStable.asObservable().pipe(first()).subscribe(() => {\r\n        this._popupRef.updatePosition();\r\n      });\r\n    }\r\n\r\n    this._popupRef.backdropClick().subscribe(() => this.close());\r\n  }\r\n\r\n  /** Create the popup. */\r\n  private _createPopup(): void {\r\n    const overlayConfig = new OverlayConfig({\r\n      positionStrategy: this._createPopupPositionStrategy(),\r\n      hasBackdrop: true,\r\n      backdropClass: \"mat-overlay-transparent-backdrop\",\r\n      direction: this._dir ? this._dir.value : \"ltr\",\r\n      scrollStrategy: this._scrollStrategy(),\r\n      panelClass: \"mat-datetimepicker-popup\"\r\n    });\r\n\r\n    this._popupRef = this._overlay.create(overlayConfig);\r\n  }\r\n\r\n  /** Create the popup PositionStrategy. */\r\n  private _createPopupPositionStrategy(): PositionStrategy {\r\n    return this._overlay.position()\r\n      .flexibleConnectedTo(this._datepickerInput.getConnectedOverlayOrigin())\r\n      .withTransformOriginOn(\".mat-datetimepicker-content\")\r\n      .withFlexibleDimensions(false)\r\n      .withViewportMargin(8)\r\n      .withLockedPosition()\r\n      .withPositions([\r\n        {\r\n          originX: \"start\",\r\n          originY: \"bottom\",\r\n          overlayX: \"start\",\r\n          overlayY: \"top\"\r\n        },\r\n        {\r\n          originX: \"start\",\r\n          originY: \"top\",\r\n          overlayX: \"start\",\r\n          overlayY: \"bottom\"\r\n        },\r\n        {\r\n          originX: \"end\",\r\n          originY: \"bottom\",\r\n          overlayX: \"end\",\r\n          overlayY: \"top\"\r\n        },\r\n        {\r\n          originX: \"end\",\r\n          originY: \"top\",\r\n          overlayX: \"end\",\r\n          overlayY: \"bottom\"\r\n        }\r\n      ]);\r\n  }\r\n}\r\n","import {coerceBooleanProperty} from \"@angular/cdk/coercion\";\r\nimport {DOWN_ARROW} from \"@angular/cdk/keycodes\";\r\nimport {AfterContentInit, Directive, ElementRef, EventEmitter, forwardRef, Inject, Input, OnDestroy, Optional, Output} from \"@angular/core\";\r\nimport {\r\n  AbstractControl,\r\n  ControlValueAccessor,\r\n  NG_VALIDATORS,\r\n  NG_VALUE_ACCESSOR,\r\n  ValidationErrors,\r\n  Validator,\r\n  ValidatorFn,\r\n  Validators\r\n} from \"@angular/forms\";\r\nimport {MAT_INPUT_VALUE_ACCESSOR} from \"@angular/material/input\";\r\nimport {MatFormField} from \"@angular/material/form-field\";\r\nimport {Subscription} from \"rxjs\";\r\nimport {DatetimeAdapter} from \"../adapter/datetime-adapter\";\r\nimport {MAT_DATETIME_FORMATS, MatDatetimeFormats} from \"../adapter/datetime-formats\";\r\nimport {MatDatetimepicker} from \"./datetimepicker\";\r\nimport {createMissingDateImplError} from \"./datetimepicker-errors\";\r\nimport {MatDatetimepickerFilterType} from \"./datetimepicker-filtertype\";\r\n\r\n// tslint:disable no-use-before-declare\r\n\r\nexport const MAT_DATETIMEPICKER_VALUE_ACCESSOR: any = {\r\n  provide: NG_VALUE_ACCESSOR,\r\n  useExisting: forwardRef(() => MatDatetimepickerInput),\r\n  multi: true\r\n};\r\n\r\nexport const MAT_DATETIMEPICKER_VALIDATORS: any = {\r\n  provide: NG_VALIDATORS,\r\n  useExisting: forwardRef(() => MatDatetimepickerInput),\r\n  multi: true\r\n};\r\n\r\n/**\r\n * An event used for datepicker input and change events. We don't always have access to a native\r\n * input or change event because the event may have been triggered by the user clicking on the\r\n * calendar popup. For consistency, we always use MatDatepickerInputEvent instead.\r\n */\r\nexport class MatDatetimepickerInputEvent<D> {\r\n  /** The new value for the target datepicker input. */\r\n  value: D | null;\r\n\r\n  constructor(public target: MatDatetimepickerInput<D>, public targetElement: HTMLElement) {\r\n    this.value = this.target.value;\r\n  }\r\n}\r\n\r\n/** Directive used to connect an input to a MatDatepicker. */\r\n@Directive({\r\n  selector: \"input[matDatetimepicker]\",\r\n  providers: [\r\n    MAT_DATETIMEPICKER_VALUE_ACCESSOR,\r\n    MAT_DATETIMEPICKER_VALIDATORS,\r\n    {provide: MAT_INPUT_VALUE_ACCESSOR, useExisting: MatDatetimepickerInput},\r\n  ],\r\n  host: {\r\n    \"[attr.aria-haspopup]\": \"true\",\r\n    \"[attr.aria-owns]\": \"(_datepicker?.opened && _datepicker.id) || null\",\r\n    \"[attr.min]\": \"min ? _dateAdapter.toIso8601(min) : null\",\r\n    \"[attr.max]\": \"max ? _dateAdapter.toIso8601(max) : null\",\r\n    \"[disabled]\": \"disabled\",\r\n    \"(focus)\": \"_datepicker._handleFocus()\",\r\n    \"(input)\": \"_onInput($event.target.value)\",\r\n    \"(change)\": \"_onChange()\",\r\n    \"(blur)\": \"_onBlur()\",\r\n    \"(keydown)\": \"_onKeydown($event)\"\r\n  },\r\n  exportAs: \"matDatepickerInput\"\r\n})\r\nexport class MatDatetimepickerInput<D> implements AfterContentInit, ControlValueAccessor, OnDestroy,\r\n  Validator {\r\n  _datepicker: MatDatetimepicker<D>;\r\n  _dateFilter: (date: D | null, type: MatDatetimepickerFilterType) => boolean;\r\n  /** Emits when a `change` event is fired on this `<input>`. */\r\n  @Output() dateChange = new EventEmitter<MatDatetimepickerInputEvent<D>>();\r\n  /** Emits when an `input` event is fired on this `<input>`. */\r\n  @Output() dateInput = new EventEmitter<MatDatetimepickerInputEvent<D>>();\r\n  /** Emits when the value changes (either due to user input or programmatic change). */\r\n  _valueChange = new EventEmitter<D | null>();\r\n  /** Emits when the disabled state has changed */\r\n  _disabledChange = new EventEmitter<boolean>();\r\n  private _datepickerSubscription = Subscription.EMPTY;\r\n  private _localeSubscription = Subscription.EMPTY;\r\n  /** Whether the last value set on the input was valid. */\r\n  private _lastValueValid = false;\r\n\r\n  constructor(private _elementRef: ElementRef,\r\n              @Optional() public _dateAdapter: DatetimeAdapter<D>,\r\n              @Optional() @Inject(MAT_DATETIME_FORMATS) private _dateFormats: MatDatetimeFormats,\r\n              @Optional() private _formField: MatFormField) {\r\n    if (!this._dateAdapter) {\r\n      throw createMissingDateImplError(\"DatetimeAdapter\");\r\n    }\r\n    if (!this._dateFormats) {\r\n      throw createMissingDateImplError(\"MAT_DATETIME_FORMATS\");\r\n    }\r\n\r\n    // Update the displayed date when the locale changes.\r\n    this._localeSubscription = _dateAdapter.localeChanges.subscribe(() => {\r\n      this.value = this.value;\r\n    });\r\n  }\r\n\r\n  /** The datepicker that this input is associated with. */\r\n  @Input()\r\n  set matDatetimepicker(value: MatDatetimepicker<D>) {\r\n    this.registerDatepicker(value);\r\n  }\r\n\r\n  @Input() set matDatepickerFilter(filter: (date: D | null, type: MatDatetimepickerFilterType) => boolean) {\r\n    this._dateFilter = filter;\r\n    this._validatorOnChange();\r\n  }\r\n\r\n  private _value: D | null;\r\n\r\n  /** The value of the input. */\r\n  @Input()\r\n  get value(): D | null {\r\n    return this._value;\r\n  }\r\n\r\n  set value(value: D | null) {\r\n    value = this._dateAdapter.deserialize(value);\r\n    this._lastValueValid = !value || this._dateAdapter.isValid(value);\r\n    value = this._dateAdapter.getValidDateOrNull(value);\r\n    const oldDate = this.value;\r\n    this._value = value;\r\n    this._formatValue(value);\r\n\r\n    // use timeout to ensure the datetimepicker is instantiated and we get the correct format\r\n    setTimeout(() => {\r\n      if (!this._dateAdapter.sameDatetime(oldDate, value)) {\r\n        this._valueChange.emit(value);\r\n      }\r\n    });\r\n  }\r\n\r\n  private _min: D | null;\r\n\r\n  /** The minimum valid date. */\r\n  @Input()\r\n  get min(): D | null {\r\n    return this._min;\r\n  }\r\n\r\n  set min(value: D | null) {\r\n    this._min = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\r\n    this._validatorOnChange();\r\n  }\r\n\r\n  private _max: D | null;\r\n\r\n  /** The maximum valid date. */\r\n  @Input()\r\n  get max(): D | null {\r\n    return this._max;\r\n  }\r\n\r\n  set max(value: D | null) {\r\n    this._max = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\r\n    this._validatorOnChange();\r\n  }\r\n\r\n  private _disabled: boolean;\r\n\r\n  /** Whether the datepicker-input is disabled. */\r\n  @Input()\r\n  get disabled() {\r\n    return !!this._disabled;\r\n  }\r\n\r\n  set disabled(value: any) {\r\n    const newValue = coerceBooleanProperty(value);\r\n\r\n    if (this._disabled !== newValue) {\r\n      this._disabled = newValue;\r\n      this._disabledChange.emit(newValue);\r\n    }\r\n  }\r\n\r\n  _onTouched = () => {\r\n  };\r\n\r\n  ngAfterContentInit() {\r\n    if (this._datepicker) {\r\n      // tslint:disable-next-line deprecation\r\n      this._datepickerSubscription = this._datepicker.selectedChanged.subscribe((selected: D) => {\r\n        this.value = selected;\r\n        this._cvaOnChange(selected);\r\n        this._onTouched();\r\n        this.dateInput.emit(new MatDatetimepickerInputEvent(this, this._elementRef.nativeElement));\r\n        this.dateChange.emit(new MatDatetimepickerInputEvent(this, this._elementRef.nativeElement));\r\n      });\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._datepickerSubscription.unsubscribe();\r\n    this._localeSubscription.unsubscribe();\r\n    this._valueChange.complete();\r\n    this._disabledChange.complete();\r\n  }\r\n\r\n  registerOnValidatorChange(fn: () => void): void {\r\n    this._validatorOnChange = fn;\r\n  }\r\n\r\n  validate(c: AbstractControl): ValidationErrors | null {\r\n    return this._validator ? this._validator(c) : null;\r\n  }\r\n\r\n  /**\r\n   * Gets the element that the datepicker popup should be connected to.\r\n   * @return The element to connect the popup to.\r\n   */\r\n  getConnectedOverlayOrigin(): ElementRef {\r\n    return this._formField ? this._formField.getConnectedOverlayOrigin() : this._elementRef;\r\n  }\r\n\r\n  // Implemented as part of ControlValueAccessor\r\n  writeValue(value: D): void {\r\n    this.value = value;\r\n  }\r\n\r\n  // Implemented as part of ControlValueAccessor\r\n  registerOnChange(fn: (value: any) => void): void {\r\n    this._cvaOnChange = fn;\r\n  }\r\n\r\n  // Implemented as part of ControlValueAccessor\r\n  registerOnTouched(fn: () => void): void {\r\n    this._onTouched = fn;\r\n  }\r\n\r\n  // Implemented as part of ControlValueAccessor\r\n  setDisabledState(disabled: boolean): void {\r\n    this.disabled = disabled;\r\n  }\r\n\r\n  _onKeydown(event: KeyboardEvent) {\r\n    // tslint:disable-next-line:deprecation\r\n    if (event.altKey && event.keyCode === DOWN_ARROW) {\r\n      this._datepicker.open();\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  _onInput(value: string) {\r\n    let date = this._dateAdapter.parse(value, this.getParseFormat());\r\n    this._lastValueValid = !date || this._dateAdapter.isValid(date);\r\n    date = this._dateAdapter.getValidDateOrNull(date);\r\n    this._value = date;\r\n    this._cvaOnChange(date);\r\n    this._valueChange.emit(date);\r\n    this.dateInput.emit(new MatDatetimepickerInputEvent(this, this._elementRef.nativeElement));\r\n  }\r\n\r\n  _onChange() {\r\n    this.dateChange.emit(new MatDatetimepickerInputEvent(this, this._elementRef.nativeElement));\r\n  }\r\n\r\n  /** Handles blur events on the input. */\r\n  _onBlur() {\r\n    // Reformat the input only if we have a valid value.\r\n    if (this.value) {\r\n      this._formatValue(this.value);\r\n    }\r\n\r\n    this._onTouched();\r\n  }\r\n\r\n  private registerDatepicker(value: MatDatetimepicker<D>) {\r\n    if (value) {\r\n      this._datepicker = value;\r\n      this._datepicker._registerInput(this);\r\n    }\r\n  }\r\n\r\n  private getDisplayFormat() {\r\n    switch (this._datepicker.type) {\r\n      case \"date\":\r\n        return this._dateFormats.display.dateInput;\r\n      case \"datetime\":\r\n        return this._dateFormats.display.datetimeInput;\r\n      case \"time\":\r\n        return this._dateFormats.display.timeInput;\r\n      case \"month\":\r\n        return this._dateFormats.display.monthInput;\r\n    }\r\n  }\r\n\r\n  private getParseFormat() {\r\n    let parseFormat;\r\n\r\n    switch (this._datepicker.type) {\r\n      case \"date\":\r\n        parseFormat = this._dateFormats.parse.dateInput;\r\n        break;\r\n      case \"datetime\":\r\n        parseFormat = this._dateFormats.parse.datetimeInput;\r\n        break;\r\n      case \"time\":\r\n        parseFormat = this._dateFormats.parse.timeInput;\r\n        break;\r\n      case \"month\":\r\n        parseFormat = this._dateFormats.parse.monthInput;\r\n        break;\r\n    }\r\n    if (!parseFormat) {\r\n      parseFormat = this._dateFormats.parse.dateInput;\r\n    }\r\n\r\n    return parseFormat;\r\n  }\r\n\r\n  private _cvaOnChange: (value: any) => void = () => {\r\n  };\r\n\r\n  private _validatorOnChange = () => {\r\n  };\r\n\r\n  /** The form control validator for whether the input parses. */\r\n  private _parseValidator: ValidatorFn = (): ValidationErrors | null => {\r\n    return this._lastValueValid ?\r\n      null : {\"matDatepickerParse\": {\"text\": this._elementRef.nativeElement.value}};\r\n  };\r\n\r\n  /** The form control validator for the min date. */\r\n  private _minValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\r\n    const controlValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(control.value));\r\n    return (!this.min || !controlValue ||\r\n      this._dateAdapter.compareDatetime(this.min, controlValue) <= 0) ?\r\n      null : {\"matDatepickerMin\": {\"min\": this.min, \"actual\": controlValue}};\r\n  };\r\n\r\n  /** The form control validator for the max date. */\r\n  private _maxValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\r\n    const controlValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(control.value));\r\n    return (!this.max || !controlValue ||\r\n      this._dateAdapter.compareDatetime(this.max, controlValue) >= 0) ?\r\n      null : {\"matDatepickerMax\": {\"max\": this.max, \"actual\": controlValue}};\r\n  };\r\n\r\n  /** The form control validator for the date filter. */\r\n  private _filterValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\r\n    const controlValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(control.value));\r\n    return !this._dateFilter || !controlValue || this._dateFilter(controlValue, MatDatetimepickerFilterType.DATE) ?\r\n      null : {\"matDatepickerFilter\": true};\r\n  };\r\n\r\n  /** The combined form control validator for this input. */\r\n  private _validator: ValidatorFn | null =\r\n    Validators.compose(\r\n      [this._parseValidator, this._minValidator, this._maxValidator, this._filterValidator]);\r\n\r\n  /** Formats a value and sets it on the input element. */\r\n  private _formatValue(value: D | null) {\r\n    this._elementRef.nativeElement.value =\r\n      value ? this._dateAdapter.format(value, this.getDisplayFormat()) : \"\";\r\n  }\r\n}\r\n","import {coerceBooleanProperty} from \"@angular/cdk/coercion\";\r\nimport {\r\n  AfterContentInit,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  SimpleChanges,\r\n  ViewEncapsulation\r\n} from \"@angular/core\";\r\nimport {MatDatepickerIntl} from \"@angular/material/datepicker\";\r\nimport {merge, of as observableOf, Subscription} from \"rxjs\";\r\nimport {MatDatetimepicker} from \"./datetimepicker\";\r\n\r\n@Component({\r\n  selector: \"mat-datetimepicker-toggle\",\r\n  templateUrl: \"datetimepicker-toggle.html\",\r\n  host: {\r\n    \"class\": \"mat-datetimepicker-toggle\"\r\n  },\r\n  exportAs: \"matDatetimepickerToggle\",\r\n  encapsulation: ViewEncapsulation.None,\r\n  preserveWhitespaces: false,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class MatDatetimepickerToggle<D> implements AfterContentInit, OnChanges, OnDestroy {\r\n  /** Datepicker instance that the button will toggle. */\r\n    // tslint:disable-next-line:no-input-rename\r\n  @Input(\"for\") datetimepicker: MatDatetimepicker<D>;\r\n  private _stateChanges = Subscription.EMPTY;\r\n\r\n  constructor(public _intl: MatDatepickerIntl, private _changeDetectorRef: ChangeDetectorRef) {\r\n  }\r\n\r\n  private _disabled: boolean;\r\n\r\n  /** Whether the toggle button is disabled. */\r\n  @Input()\r\n  get disabled(): boolean {\r\n    return this._disabled === undefined ? this.datetimepicker.disabled : !!this._disabled;\r\n  }\r\n\r\n  set disabled(value: boolean) {\r\n    this._disabled = coerceBooleanProperty(value);\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.datepicker) {\r\n      this._watchStateChanges();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._stateChanges.unsubscribe();\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    this._watchStateChanges();\r\n  }\r\n\r\n  _open(event: Event): void {\r\n    if (this.datetimepicker && !this.disabled) {\r\n      this.datetimepicker.open();\r\n      event.stopPropagation();\r\n    }\r\n  }\r\n\r\n  private _watchStateChanges() {\r\n    const datepickerDisabled = this.datetimepicker ? this.datetimepicker._disabledChange : observableOf();\r\n    const inputDisabled = this.datetimepicker && this.datetimepicker._datepickerInput ?\r\n      this.datetimepicker._datepickerInput._disabledChange : observableOf();\r\n\r\n    this._stateChanges.unsubscribe();\r\n    this._stateChanges = merge(this._intl.changes, datepickerDisabled, inputDisabled)\r\n      .subscribe(() => this._changeDetectorRef.markForCheck());\r\n  }\r\n}\r\n","/* tslint:disable */\r\nimport {\r\n  AfterContentInit,\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  EventEmitter,\r\n  Inject,\r\n  Input,\r\n  Optional,\r\n  Output,\r\n  ViewEncapsulation\r\n} from \"@angular/core\";\r\nimport {MAT_DATETIME_FORMATS, MatDatetimeFormats} from \"../adapter/datetime-formats\";\r\nimport {DatetimeAdapter} from \"../adapter/datetime-adapter\";\r\nimport {MatDatetimepickerCalendarCell} from \"./calendar-body\";\r\nimport {MatDatetimepickerType} from \"./datetimepicker\";\r\nimport {slideCalendar} from \"./datetimepicker-animations\";\r\nimport {createMissingDateImplError} from \"./datetimepicker-errors\";\r\n\r\nconst DAYS_PER_WEEK = 7;\r\n\r\n/**\r\n * An internal component used to display a single month in the datepicker.\r\n * @docs-private\r\n */\r\n@Component({\r\n  selector: \"mat-datetimepicker-month-view\",\r\n  templateUrl: \"month-view.html\",\r\n  animations: [slideCalendar],\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class MatDatetimepickerMonthView<D> implements AfterContentInit {\r\n\r\n  @Input() type: MatDatetimepickerType = \"date\";\r\n\r\n  @Output() _userSelection = new EventEmitter<void>();\r\n  /** A function used to filter which dates are selectable. */\r\n  @Input() dateFilter: (date: D) => boolean;\r\n  /** Emits when a new date is selected. */\r\n  @Output() selectedChange = new EventEmitter<D>();\r\n  /** Grid of calendar cells representing the dates of the month. */\r\n  _weeks: MatDatetimepickerCalendarCell[][];\r\n  /** The number of blank cells in the first row before the 1st of the month. */\r\n  _firstWeekOffset: number;\r\n  /**\r\n   * The date of the month that the currently selected Date falls on.\r\n   * Null if the currently selected Date is in another month.\r\n   */\r\n  _selectedDate: number;\r\n  /** The date of the month that today falls on. Null if today is in another month. */\r\n  _todayDate: number;\r\n  /** The names of the weekdays. */\r\n  _weekdays: { long: string, narrow: string }[];\r\n  _calendarState: string;\r\n\r\n  constructor(@Optional() public _adapter: DatetimeAdapter<D>,\r\n              @Optional() @Inject(MAT_DATETIME_FORMATS) private _dateFormats: MatDatetimeFormats) {\r\n    if (!this._adapter) {\r\n      throw createMissingDateImplError(\"DatetimeAdapter\");\r\n    }\r\n\r\n    if (!this._dateFormats) {\r\n      throw createMissingDateImplError(\"MAT_DATETIME_FORMATS\");\r\n    }\r\n\r\n    const firstDayOfWeek = this._adapter.getFirstDayOfWeek();\r\n    const narrowWeekdays = this._adapter.getDayOfWeekNames(\"narrow\");\r\n    const longWeekdays = this._adapter.getDayOfWeekNames(\"long\");\r\n\r\n    // Rotate the labels for days of the week based on the configured first day of the week.\r\n    let weekdays = longWeekdays.map((long, i) => {\r\n      return {long, narrow: narrowWeekdays[i]};\r\n    });\r\n    this._weekdays = weekdays.slice(firstDayOfWeek).concat(weekdays.slice(0, firstDayOfWeek));\r\n\r\n    this._activeDate = this._adapter.today();\r\n  }\r\n\r\n  private _activeDate: D;\r\n\r\n  /**\r\n   * The date to display in this month view (everything other than the month and year is ignored).\r\n   */\r\n  @Input()\r\n  get activeDate(): D {\r\n    return this._activeDate;\r\n  }\r\n\r\n  set activeDate(value: D) {\r\n    let oldActiveDate = this._activeDate;\r\n    this._activeDate = value || this._adapter.today();\r\n    if (oldActiveDate && this._activeDate &&\r\n      !this._adapter.sameMonthAndYear(oldActiveDate, this._activeDate)) {\r\n      this._init();\r\n      if (this._adapter.isInNextMonth(oldActiveDate, this._activeDate)) {\r\n        this.calendarState(\"right\");\r\n      } else {\r\n        this.calendarState(\"left\");\r\n      }\r\n    }\r\n  }\r\n\r\n  private _selected: D;\r\n\r\n  /** The currently selected date. */\r\n  @Input()\r\n  get selected(): D {\r\n    return this._selected;\r\n  }\r\n\r\n  set selected(value: D) {\r\n    this._selected = value;\r\n    this._selectedDate = this._getDateInCurrentMonth(this.selected);\r\n  }\r\n\r\n  ngAfterContentInit(): void {\r\n    this._init();\r\n  }\r\n\r\n  /** Handles when a new date is selected. */\r\n  _dateSelected(date: number) {\r\n    this.selectedChange.emit(this._adapter.createDatetime(\r\n      this._adapter.getYear(this.activeDate), this._adapter.getMonth(this.activeDate),\r\n      date, this._adapter.getHour(this.activeDate),\r\n      this._adapter.getMinute(this.activeDate)));\r\n    if (this.type === \"date\") {\r\n      this._userSelection.emit();\r\n    }\r\n  }\r\n\r\n  _calendarStateDone() {\r\n    this._calendarState = \"\";\r\n  }\r\n\r\n  /** Initializes this month view. */\r\n  private _init() {\r\n    this._selectedDate = this._getDateInCurrentMonth(this.selected);\r\n    this._todayDate = this._getDateInCurrentMonth(this._adapter.today());\r\n\r\n    let firstOfMonth = this._adapter.createDatetime(this._adapter.getYear(this.activeDate),\r\n      this._adapter.getMonth(this.activeDate), 1,\r\n      this._adapter.getHour(this.activeDate),\r\n      this._adapter.getMinute(this.activeDate));\r\n    this._firstWeekOffset =\r\n      (DAYS_PER_WEEK + this._adapter.getDayOfWeek(firstOfMonth) -\r\n        this._adapter.getFirstDayOfWeek()) % DAYS_PER_WEEK;\r\n\r\n    this._createWeekCells();\r\n  }\r\n\r\n  /** Creates MdCalendarCells for the dates in this month. */\r\n  private _createWeekCells() {\r\n    let daysInMonth = this._adapter.getNumDaysInMonth(this.activeDate);\r\n    let dateNames = this._adapter.getDateNames();\r\n    this._weeks = [[]];\r\n    for (let i = 0, cell = this._firstWeekOffset; i < daysInMonth; i++ , cell++) {\r\n      if (cell == DAYS_PER_WEEK) {\r\n        this._weeks.push([]);\r\n        cell = 0;\r\n      }\r\n      let date = this._adapter.createDatetime(\r\n        this._adapter.getYear(this.activeDate),\r\n        this._adapter.getMonth(this.activeDate), i + 1,\r\n        this._adapter.getHour(this.activeDate),\r\n        this._adapter.getMinute(this.activeDate));\r\n      let enabled = !this.dateFilter ||\r\n        this.dateFilter(date);\r\n      let ariaLabel = this._adapter.format(date, this._dateFormats.display.dateA11yLabel);\r\n      this._weeks[this._weeks.length - 1]\r\n        .push(new MatDatetimepickerCalendarCell(i + 1, dateNames[i], ariaLabel, enabled));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Gets the date in this month that the given Date falls on.\r\n   * Returns null if the given Date is in another month.\r\n   */\r\n  private _getDateInCurrentMonth(date: D): number {\r\n    return this._adapter.sameMonthAndYear(date, this.activeDate) ?\r\n      this._adapter.getDate(date) : null;\r\n  }\r\n\r\n  private calendarState(direction: string): void {\r\n    this._calendarState = direction;\r\n  }\r\n\r\n}\r\n","/* tslint:disable */\r\nimport {\r\n  AfterContentInit,\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  EventEmitter,\r\n  Inject,\r\n  Input,\r\n  Optional,\r\n  Output,\r\n  ViewEncapsulation\r\n} from \"@angular/core\";\r\nimport {MatDatetimepickerType} from \"./datetimepicker\";\r\nimport {createMissingDateImplError} from \"./datetimepicker-errors\";\r\nimport {MatDatetimepickerCalendarCell} from \"./calendar-body\";\r\nimport {slideCalendar} from \"./datetimepicker-animations\";\r\nimport {MAT_DATETIME_FORMATS, MatDatetimeFormats} from \"../adapter/datetime-formats\";\r\nimport {DatetimeAdapter} from \"../adapter/datetime-adapter\";\r\n\r\n/**\r\n * An internal component used to display a single year in the datepicker.\r\n * @docs-private\r\n */\r\n@Component({\r\n  selector: \"mat-datetimepicker-year-view\",\r\n  templateUrl: \"year-view.html\",\r\n  animations: [slideCalendar],\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class MatDatetimepickerYearView<D> implements AfterContentInit {\r\n\r\n  @Output() _userSelection = new EventEmitter<void>();\r\n\r\n  @Input() type: MatDatetimepickerType = \"date\";\r\n  /** A function used to filter which dates are selectable. */\r\n  @Input() dateFilter: (date: D) => boolean;\r\n  /** Emits when a new month is selected. */\r\n  @Output() selectedChange = new EventEmitter<D>();\r\n  /** Grid of calendar cells representing the months of the year. */\r\n  _months: MatDatetimepickerCalendarCell[][];\r\n  /** The label for this year (e.g. \"2017\"). */\r\n  _yearLabel: string;\r\n  /** The month in this year that today falls on. Null if today is in a different year. */\r\n  _todayMonth: number;\r\n  /**\r\n   * The month in this year that the selected Date falls on.\r\n   * Null if the selected Date is in a different year.\r\n   */\r\n  _selectedMonth: number;\r\n  _calendarState: string;\r\n\r\n  constructor(@Optional() public _adapter: DatetimeAdapter<D>,\r\n              @Optional() @Inject(MAT_DATETIME_FORMATS) private _dateFormats: MatDatetimeFormats) {\r\n    if (!this._adapter) {\r\n      throw createMissingDateImplError(\"DatetimeAdapter\");\r\n    }\r\n\r\n    if (!this._dateFormats) {\r\n      throw createMissingDateImplError(\"MAT_DATETIME_FORMATS\");\r\n    }\r\n\r\n    this._activeDate = this._adapter.today();\r\n  }\r\n\r\n  private _activeDate: D;\r\n\r\n  /** The date to display in this year view (everything other than the year is ignored). */\r\n  @Input()\r\n  get activeDate(): D {\r\n    return this._activeDate;\r\n  }\r\n\r\n  set activeDate(value: D) {\r\n    let oldActiveDate = this._activeDate;\r\n    this._activeDate = value || this._adapter.today();\r\n    if (oldActiveDate && this._activeDate &&\r\n      !this._adapter.sameYear(oldActiveDate, this._activeDate)) {\r\n      this._init();\r\n      // if (oldActiveDate < this._activeDate) {\r\n      //  this.calendarState('right');\r\n      // } else {\r\n      //  this.calendarState('left');\r\n      // }\r\n    }\r\n  }\r\n\r\n  private _selected: D;\r\n\r\n  /** The currently selected date. */\r\n  @Input()\r\n  get selected(): D {\r\n    return this._selected;\r\n  }\r\n\r\n  set selected(value: D) {\r\n    this._selected = value;\r\n    this._selectedMonth = this._getMonthInCurrentYear(this.selected);\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    this._init();\r\n  }\r\n\r\n  /** Handles when a new month is selected. */\r\n  _monthSelected(month: number) {\r\n    const normalizedDate = this._adapter.createDatetime(this._adapter.getYear(this.activeDate), month, 1, 0, 0);\r\n\r\n    this.selectedChange.emit(this._adapter.createDatetime(\r\n      this._adapter.getYear(this.activeDate), month,\r\n      Math.min(this._adapter.getDate(this.activeDate), this._adapter.getNumDaysInMonth(normalizedDate)),\r\n      this._adapter.getHour(this.activeDate),\r\n      this._adapter.getMinute(this.activeDate)));\r\n    if (this.type === \"month\") {\r\n      this._userSelection.emit();\r\n    }\r\n  }\r\n\r\n  _calendarStateDone() {\r\n    this._calendarState = \"\";\r\n  }\r\n\r\n  /** Initializes this month view. */\r\n  private _init() {\r\n    this._selectedMonth = this._getMonthInCurrentYear(this.selected);\r\n    this._todayMonth = this._getMonthInCurrentYear(this._adapter.today());\r\n    this._yearLabel = this._adapter.getYearName(this.activeDate);\r\n\r\n    let monthNames = this._adapter.getMonthNames(\"short\");\r\n    // First row of months only contains 5 elements so we can fit the year label on the same row.\r\n    this._months = [[0, 1, 2, 3, 4], [5, 6, 7, 8, 9, 10, 11]].map(row => row.map(\r\n      month => this._createCellForMonth(month, monthNames[month])));\r\n  }\r\n\r\n  /**\r\n   * Gets the month in this year that the given Date falls on.\r\n   * Returns null if the given Date is in another year.\r\n   */\r\n  private _getMonthInCurrentYear(date: D) {\r\n    return this._adapter.sameYear(date, this.activeDate) ?\r\n      this._adapter.getMonth(date) : null;\r\n  }\r\n\r\n  /** Creates an MdCalendarCell for the given month. */\r\n  private _createCellForMonth(month: number, monthName: string) {\r\n    let ariaLabel = this._adapter.format(\r\n      this._adapter.createDatetime(this._adapter.getYear(this.activeDate), month, 1,\r\n        this._adapter.getHour(this.activeDate),\r\n        this._adapter.getMinute(this.activeDate)),\r\n      this._dateFormats.display.monthYearA11yLabel);\r\n    return new MatDatetimepickerCalendarCell(\r\n      month, monthName.toLocaleUpperCase(), ariaLabel, this._isMonthEnabled(month));\r\n  }\r\n\r\n  // private calendarState(direction: string): void {\r\n  //   this._calendarState = direction;\r\n  // }\r\n\r\n  /** Whether the given month is enabled. */\r\n  private _isMonthEnabled(month: number) {\r\n    if (!this.dateFilter) {\r\n      return true;\r\n    }\r\n\r\n    let firstOfMonth = this._adapter.createDatetime(\r\n      this._adapter.getYear(this.activeDate), month, 1,\r\n      this._adapter.getHour(this.activeDate),\r\n      this._adapter.getMinute(this.activeDate));\r\n\r\n    // If any date in the month is enabled count the month as enabled.\r\n    for (let date = firstOfMonth; this._adapter.getMonth(date) == month;\r\n         date = this._adapter.addCalendarDays(date, 1)) {\r\n      if (this.dateFilter(date)) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n}\r\n","import {A11yModule} from \"@angular/cdk/a11y\";\r\nimport {OverlayModule} from \"@angular/cdk/overlay\";\r\nimport {CommonModule} from \"@angular/common\";\r\nimport {NgModule} from \"@angular/core\";\r\nimport {MatButtonModule} from \"@angular/material/button\";\r\nimport {MatDialogModule} from \"@angular/material/dialog\";\r\nimport {MatIconModule} from \"@angular/material/icon\";\r\nimport {MatDatetimepickerCalendar} from \"./calendar\";\r\nimport {MatDatetimepickerCalendarBody} from \"./calendar-body\";\r\nimport {MatDatetimepickerClock} from \"./clock\";\r\nimport {MatDatetimepicker, MatDatetimepickerContent} from \"./datetimepicker\";\r\nimport {MatDatetimepickerInput} from \"./datetimepicker-input\";\r\nimport {MatDatetimepickerToggle} from \"./datetimepicker-toggle\";\r\nimport {MatDatetimepickerMonthView} from \"./month-view\";\r\nimport {MatDatetimepickerYearView} from \"./year-view\";\r\nimport {MatDatetimepickerMultiYearView} from \"./multi-year-view\";\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    MatButtonModule,\r\n    MatDialogModule,\r\n    MatIconModule,\r\n    OverlayModule,\r\n    A11yModule\r\n  ],\r\n  entryComponents: [\r\n    MatDatetimepickerContent\r\n  ],\r\n  declarations: [\r\n    MatDatetimepickerCalendar,\r\n    MatDatetimepickerCalendarBody,\r\n    MatDatetimepickerClock,\r\n    MatDatetimepicker,\r\n    MatDatetimepickerToggle,\r\n    MatDatetimepickerInput,\r\n    MatDatetimepickerContent,\r\n    MatDatetimepickerMonthView,\r\n    MatDatetimepickerYearView,\r\n    MatDatetimepickerMultiYearView\r\n  ],\r\n  exports: [\r\n    MatDatetimepickerCalendar,\r\n    MatDatetimepickerCalendarBody,\r\n    MatDatetimepickerClock,\r\n    MatDatetimepicker,\r\n    MatDatetimepickerToggle,\r\n    MatDatetimepickerInput,\r\n    MatDatetimepickerContent,\r\n    MatDatetimepickerMonthView,\r\n    MatDatetimepickerYearView,\r\n    MatDatetimepickerMultiYearView\r\n  ]\r\n})\r\nexport class MatDatetimepickerModule {\r\n}\r\n"]}